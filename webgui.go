// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\xeb\x76\xdb\x38\x92\xfe\xef\xa7\x40\xb3\x27\x43\xa9\x2d\x92\x92\x1c\xa7\x27\xb2\xa8\x9c\x8c\x9d\x3d\x9d\x99\x4c\x77\x26\x97\x9d\xed\x75\xbc\x39\x10\x09\x51\xb0\x41\x80\x0d\x80\xba\x74\xe2\x77\xdf\x03\x80\x77\x52\xb2\x9c\x38\xdb\xbb\xab\x1f\x0e\x05\x14\x0a\x85\xaa\xc2\x57\x55\x00\x95\xe9\x77\x17\xbf\x9c\xbf\xfb\xf5\xf5\x0b\xb0\x94\x31\x99\x1d\x4d\xd5\x3f\x80\x40\x1a\xf9\x16\xa2\x96\x6a\x40\x30\x9c\x1d\x01\x30\x95\x58\x12\x34\xfb\x67\x0a\x83\x1b\xc4\xaf\x61\x70\x03\x56\x27\x53\xcf\xb4\x1e\x29\x82\x18\x49\x08\x82\x25\xe4\x02\x49\xdf\x4a\xe5\xc2\xf9\x8b\x35\x2b\x3a\x96\x52\x26\x0e\xfa\x2d\xc5\x2b\xdf\xfa\x0f\xe7\xfd\x73\xe7\x9c\xc5\x09\x94\x78\x4e\x90\x05\x02\x46\x25\xa2\xd2\xb7\x5e\xbe\xf0\x51\x18\xa1\xca\x38\x0a\x63\xe4\x5b\x2b\x8c\xd6\x09\xe3\xb2\x42\xba\xc6\xa1\x5c\xfa\x21\x5a\xe1\x00\x39\xfa\xcb\x00\x60\x8a\x25\x86\xc4\x11\x01\x24\xc8\x1f\x59\x46\x30\x82\xe9\x0d\xe0\x88\xf8\x96\x90\x5b\x82\xc4\x12\x21\x69\x81\x25\x47\x0b\xdf\x52\x62\x89\x89\xe7\x09\x09\x83\x9b\x04\xca\xa5\x3b\x67\x4c\x0a\xc9\x61\x12\x84\xd4\x0d\x58\xec\x15\x0d\xde\x63\xf7\xb1\x3b\xf2\x02\x21\xca\x36\x37\xc6\xd4\x0d\x84\x30\x12\x7f\xe5\x4c\x0b\x46\xa5\x03\xd7\x48\xb0\x18\x79\x8f\xdd\x1f\xdd\xa1\x9e\xac\xda\x5c\x9f\x4f\xcf\x02\xe4\x36\x41\xbe\x25\xd1\x46\x7a\x79\x0f\x00\x31\xc4\x14\x7c\x02\x31\xe4\x11\xa6\x8e\x64\xc9\x04\x9c\x72\x14\x9f\x81\x5b\xdd\xfd\x3d\xa6\x92\x33\xf0\x09\x84\x58\x24\x04\x6e\x27\x60\x4e\x58\x70\x53\x74\x27\x9c\x05\x48\x08\x4c\xa3\x2a\x0d\x65\x14\x15\x24\x1c\x29\x8b\xdc\xd5\xed\x2a\x07\x42\xbc\x10\x65\x02\x86\xc9\x06\x8c\xd4\x9f\xfc\xe1\x0c\xcc\x19\x0f\x11\x77\xe6\x4c\x4a\x16\x4f\xc0\x28\xd9\x00\xc1\x08\x0e\xc1\xf7\x4f\x9f\x3e\xcd\x39\xba\x2c\x95\x04\x53\x04\x3e\x65\xf4\x55\xc2\x39\x49\x8b\xa9\xdd\x39\x8e\x68\x1a\x83\x4f\x20\x81\x61\x88\x69\x34\x01\xa7\x95\x59\x38\x0c\x71\x2a\xb2\x36\xa5\x35\x07\x12\x1c\xd1\x09\x08\x10\x95\x88\x9f\x15\x82\x8e\x4e\x73\x21\xb3\x87\xe6\x04\x22\x81\xd4\x35\x33\x69\x1b\x09\xfc\x3b\x9a\x80\xf1\x63\x45\xd9\xad\xd7\xda\xc8\x10\x89\xa0\x3e\xd4\x68\x43\xcb\x24\x39\xa4\x62\xc1\x78\x3c\x01\x69\x92\x20\x1e\x40\x51\x2e\x50\xc2\xb9\xd8\x39\xb2\xb6\x9a\xda\x08\x82\x5b\x3a\x09\x52\x2e\x18\x9f\x80\x84\x61\xb3\x78\x45\x3f\xf5\xb4\x63\xcd\x8e\xa6\x9e\xd9\xfe\xd3\x39\x0b\xb7\xb3\xa3\xa3\x29\x85\x2b\x10\x10\x28\x84\x6f\x51\xb8\x9a\x43\x0e\xcc\x3f\x0e\xda\x24\x90\x86\x4e\x1c\xe6\x0d\x21\xe4\x37\x60\x1e\x99\x7f\x17\x78\x83\x42\xe5\x84\xc6\x6d\x61\x9d\x87\x33\xe7\x90\x86\xf9\x3e\xf9\xde\xaa\x82\xcc\xd4\x83\x7a\xc8\x3c\x95\x92\xd1\xc6\x38\xc9\xa2\x88\x20\x6e\x65\x3b\xc0\xd0\x58\x20\x84\x12\x66\x7d\xbe\x15\x30\x42\x60\x22\x50\xde\x0c\x79\xa4\xe0\xe9\x7b\xc3\x42\xbc\xd8\xc0\x38\x21\xe8\x02\x2d\x60\x4a\xa4\x05\x20\xc7\xd0\x51\x18\xc3\x19\x29\x26\xea\xa6\x32\x4b\x46\xa1\x6f\x2d\x20\x51\x13\xe8\x56\x02\xe7\x6a\xff\xbf\xd3\xd3\x2b\x65\xe0\x08\x4a\xcc\x68\xb6\x2d\xa7\xca\xf2\xdd\xcb\x70\x70\xa0\xc8\xa6\x9e\x22\xd1\x8b\xf6\xcc\x8a\x0c\x8a\x85\xb8\x50\x7d\xbe\xa6\x5c\xd7\xe5\x1a\x71\xb8\x4b\xe6\x6c\xfa\x94\x34\x26\x57\x16\x8d\xb9\x03\x53\xc9\x32\x1a\x8d\x63\x15\x2a\x07\x4b\x14\x03\x18\x48\xbc\x42\x05\x49\xc3\x8a\x8e\x42\xbe\xdc\x82\x9e\x35\xfb\x19\xad\xc1\x1b\x03\x00\xb5\x15\x0b\xee\x30\x4a\xb6\xd6\xac\x17\xa4\x9c\x23\x2a\xfb\xd9\x72\x33\x3b\x6b\xc6\x1e\xc1\x7b\x24\x39\x48\x84\x1c\x6c\x23\x2c\x97\xe9\x5c\x83\x6b\x8c\x6f\xd0\x82\x6c\x29\xf5\x7e\x2b\xdd\xcb\xe3\x88\x20\x28\x90\xb0\x66\xd3\x62\xa6\x05\x04\x0b\xe8\x98\xa1\x8e\xf8\x2d\x85\x3c\x37\xee\x12\x87\x21\xa2\xbe\x25\x79\x8a\x94\xa5\xf0\x0c\xbc\xc9\x18\xfc\x41\x0b\xf8\x62\xb9\xdf\xb2\x94\x07\x68\x97\xd4\xdf\x39\xce\x1e\x5f\x08\x39\x4b\x42\xb6\xa6\x7b\x57\x52\x50\x65\xfe\x5d\xee\x6f\xed\xa5\x79\xef\x70\xd4\xd8\xb0\x05\xf3\x4c\x74\x28\x12\x96\xa4\x49\x26\x7c\xf7\xd6\x9b\x5d\x64\x83\x2a\xeb\xa9\x6f\x99\x42\x98\x18\xd1\xb4\xba\x55\x09\x0a\xe7\xdb\x9a\x38\x25\x83\xea\xb2\x0a\x06\xda\x84\x25\x56\x3d\x0f\xd4\xee\xae\xcd\x7b\xd0\x30\xca\xe4\x12\x71\xbd\xad\xbe\x60\xf8\x5b\x16\x23\xb9\x54\xd1\x19\x11\x81\xc0\x12\x71\x54\x5f\xba\x17\xe2\x55\x97\x65\x1d\x27\x03\x02\x2f\x25\xd9\x53\x6e\xeb\xa9\x8a\x36\x85\x2f\x31\x1e\x3b\x98\xea\x78\x1b\x6f\x9d\xb1\xfa\x43\x22\x67\x58\x62\x04\xa6\x49\x2a\x6b\xe4\x19\x6c\x2a\x38\x11\xb1\x33\xb6\x2a\x89\x89\x05\x12\x02\x03\xb4\x64\x24\x44\xdc\xb7\xde\x22\xc8\x83\x65\x1d\x31\xb3\xb6\x82\x7f\x1d\xf1\xe7\x92\x82\xb9\xa4\x8e\x40\x01\xa3\x21\xe4\xdb\x42\x2a\x11\x3b\xc3\x7c\x2a\x91\xce\x63\x2c\xad\x99\xe1\x55\xe2\xa7\x59\xb1\x12\xd2\x3c\x1b\x2d\x64\x4a\x9a\x7a\x14\xae\x54\x70\xd3\x29\x13\x67\xca\x09\xd5\xa3\x55\xc2\x2d\x95\x10\x53\xc4\xad\x12\x89\x95\x0b\xeb\x14\x2a\x07\x56\xad\x3c\x65\x14\x16\xfa\x56\xa4\xd2\x3e\x63\x5a\xdf\x2a\x97\x54\xf1\x47\xad\xb0\x88\xb3\x34\xa9\x6e\x22\xad\x0a\xb0\x60\xdc\xb7\x5e\x2a\xf5\xbe\x7f\xf3\xca\x9a\xbd\xd0\x71\x1c\x82\x5f\x59\xfa\x2e\x9d\x23\xf0\xef\x38\x44\x0c\xbc\x7f\xf3\x6a\xea\x69\xfa\xca\x78\x63\x13\xa3\x8b\x94\x13\xab\xcb\x3c\x66\xfb\x15\xec\x8d\x0d\x54\x2a\xc2\xf1\xdc\xec\x85\x94\x93\x9f\x10\x49\xac\x22\xf7\x0e\xab\x32\x8a\x18\x12\xa2\x79\x14\x74\xd5\x59\x94\xb5\x4d\x1e\x12\xa7\x12\x85\xd6\x2c\x8b\x43\x13\x90\x43\xda\x7a\xbd\x76\xb7\x2c\x95\xe9\x1c\x69\x5c\x5b\x43\x19\x2c\x9f\xad\x7c\xf6\x53\x74\xfa\xf6\x6f\xbf\xbe\xf9\xe9\xf9\x70\xea\xe9\x59\x4a\x07\xae\x7a\x73\xe6\x18\x35\x8b\x37\xdd\x24\xe1\x38\x86\x7c\xdb\x46\xc7\x80\xc5\x31\xa2\x52\x38\x6c\x0f\x34\x06\x90\x02\xb9\x44\xe0\x3c\x23\xde\xe5\x48\x99\x5c\x55\x9f\x28\xf3\xe6\xdc\x31\x2a\x46\x27\x0c\x86\x65\x4f\xbd\x8f\xb3\xb5\xd5\x0d\x5d\x01\x23\x4e\x1c\x3a\x27\x4a\xba\x8a\x1e\x3a\x89\x9e\xd4\xd1\xab\x8c\xf6\x04\x0b\x69\xfc\x0d\x94\x8f\xce\x82\xa4\x62\x59\x1b\x52\x03\xfc\x0a\xa5\xc1\x9f\xfa\x0a\x9d\x60\x89\x82\x1b\x47\x39\x5a\x4b\xcf\x26\xfc\xec\xd3\xf2\xb9\x1a\xac\x10\x6c\xc1\x38\x58\x41\x95\xc4\x6b\x9f\xc6\xb3\x2a\x5e\xdd\x5f\x26\x63\x33\x27\x60\x29\x95\x5f\x2d\x57\x50\x78\xc0\x03\x88\xa4\x80\x5c\xb9\xc0\x97\x48\x75\x91\x8d\x55\x82\x3d\x88\x50\x28\x66\xd7\xf8\x4b\x24\x79\x4e\x21\xd9\xfe\xae\x43\x8f\x62\xf1\x55\x42\x08\x44\x25\x56\x6b\xf9\x3a\x41\x0a\x36\x4d\x61\x4c\x94\xab\x36\x54\xb6\x4c\xc2\x59\xc4\x51\x51\x30\xef\x23\x71\x54\xa5\x53\xfd\xe2\x08\xc9\x71\x82\xc2\x7a\x23\xa4\x38\x86\x0a\xf4\xb2\x28\x92\x77\xce\x21\xcf\x96\xb1\x82\x24\x45\x94\xad\x7d\xeb\xa4\xda\x12\x63\xea\x5b\xc3\x5a\x0b\xdc\xf8\xd6\x68\x38\xb4\x80\x2e\xc5\xb2\xe3\x8e\x09\x38\x79\xd4\x82\x81\x06\x3e\xb6\x82\x7f\xf1\xa5\x78\xec\xc0\x2d\x53\xad\x77\x60\x16\x67\x6b\x60\x4a\xf8\x4e\xd8\xca\x70\x67\x34\xac\x82\xd7\x72\x9c\x77\xaf\x54\xac\xfa\xa8\x0f\x89\x4c\xd2\x92\x45\xaf\x77\xaa\x65\xea\x2d\xc7\x95\x51\x49\xc1\x73\x09\x29\x45\x24\x1f\xf6\x1c\x9c\x9b\x86\xa9\x97\x74\x47\x84\xb6\x3c\x63\xab\x30\x7b\x97\x02\x76\x43\x6f\x07\xaf\xc7\x4d\x5c\xce\x2c\xb2\x44\x38\x5a\xca\x09\x38\x19\xaa\xda\xbb\x0e\xbc\x01\xa4\x2b\x28\xb4\x66\x83\x25\xe4\xf2\x1d\x93\x90\xbc\x2d\xbc\x1d\x98\xc3\x2b\xeb\xb1\x32\xb0\xe1\xe3\x5b\x27\xc3\xa1\xb2\xad\x19\x7a\xb7\x35\xbb\x65\x05\x42\x42\xb9\xcf\xa5\xeb\x71\x66\x27\xa3\x27\x40\x3d\x88\x38\x7b\xd8\x88\x46\x68\x69\x0f\x34\x27\x1b\x1d\x44\xcd\xa2\x37\xcd\x70\x40\x2a\x9d\x7c\xcc\xc1\xcc\x9a\x39\x4e\x59\xfa\xee\xe5\xa0\x92\x15\x6b\xa6\x55\x5a\x09\xd1\xdd\x43\x5b\x7b\x65\x77\xe3\x1f\xa2\x84\x84\x09\xac\x0a\xeb\x8f\x88\x46\x30\x42\x5f\xa6\x8a\xd7\x19\x93\xaf\x55\x42\x57\xd3\xff\x4a\xd7\xc9\x9d\xe6\x63\x82\xf8\xc7\x10\x6e\xef\xad\xb1\xdc\x6d\xc0\x6b\xc4\xc1\x05\xdc\xfe\x5f\x75\x9f\x10\x0b\x82\x6f\xd0\x47\x0e\x25\x66\xf7\xd6\xc2\x85\x19\x0d\xde\xa8\xd1\x0f\xea\x3c\x77\xe2\xd4\x1d\x98\x3a\x3e\x3d\x04\x53\x93\x57\x58\x94\x60\x3a\x1a\x0e\x1f\x95\x68\x3a\x3e\x2d\x63\x67\x93\xeb\x1d\x20\x7b\x40\xe2\xbc\x64\x1c\xff\xae\xca\x42\x02\x24\x9c\xd7\xf1\x76\x77\xfe\x03\x16\x04\x6d\x9c\x05\x26\x04\x34\x7a\x8a\x82\x25\x3f\xa5\x9c\xfb\xd6\x9a\xf1\x50\x28\x9c\x4b\xc0\xbf\xd4\x63\x2b\xb9\x39\x60\x9e\x2a\xbf\x2c\xe3\x53\xfc\x5e\xb4\x33\xb7\xf2\x40\xe0\x01\x42\xe6\x68\xdc\xd6\x7d\x33\x4a\xb6\xec\x79\x01\x31\xd9\xb6\x63\x64\xc3\xac\xc3\x0e\xb3\x0e\xbb\xcd\xba\x27\xf5\x99\x7a\xaa\xc2\x37\x29\x90\xaa\x7c\x13\x09\x04\x0f\xca\x63\xb7\x80\x85\xc8\xbd\xfe\x2d\x45\x7c\xab\x6b\x54\xf3\xe8\x9c\xb8\x8f\xdd\x91\xbe\x82\xb9\x16\x16\x08\x38\x13\x82\x71\x1c\xa9\xec\x0d\x52\x46\xb7\x31\x4b\x85\x3e\xc1\xd5\x2c\x67\xbb\xb8\xdf\xe3\xb2\xe9\xba\x7a\xd7\x34\x4f\x69\x48\x50\x3e\xff\xdd\xf3\x04\x21\xbd\x16\x6e\x40\x58\x1a\x2e\x08\xe4\xa6\xdc\x86\xd7\x70\xe3\x11\x3c\x17\xde\xb9\xd2\xba\x7b\x2d\xbc\xb1\xfb\xd4\x3d\xc9\xbe\xb6\x99\x57\xb8\x57\x6e\x9a\xae\xe1\x0a\x9a\x56\x6d\xd3\x15\x54\xc5\x12\x61\x5c\x00\x1f\x7c\xd2\x3a\xe7\x28\x9c\x00\x8b\x47\xf3\xde\xf8\xf4\x74\x00\x9e\x3e\x1d\x80\xd1\xc9\xb8\x6f\x0d\x74\x2f\xe3\x90\x46\xa8\x4a\x30\x3a\x7d\x3a\x00\x4f\x1e\xe7\x04\x5b\x44\x08\x5b\x57\x09\xc6\xc3\xd3\x01\xf8\xcb\x93\x9c\x20\xe2\x08\xd1\xac\xff\x47\x35\xfe\xe9\x58\xff\xc9\xfb\xe7\x24\xcd\xf9\x9f\x3e\x1e\x80\xd1\x93\xf1\x00\x8c\x4f\x4e\xf3\xee\x24\xe5\xfa\x58\x42\x13\x8c\x4e\x4f\x06\x60\x34\x54\x14\xa7\xa7\x95\x09\xb6\xf9\xfc\xc3\x91\x9a\xff\x44\xfd\xf9\xb1\x6f\x1d\x01\x70\xab\xf4\xb2\x48\xa9\x3e\xe4\x01\x11\x92\xef\xdf\xbc\x7a\x0d\x39\x8c\x91\x44\xbc\x47\x61\x8c\xfa\x85\x1e\x64\xca\x29\x08\x91\x72\xaa\xf7\x6f\x5e\x9e\xb3\x38\x61\x14\x51\xd9\xeb\x51\x7d\x4c\x1e\xbd\xd8\x24\x3d\xfb\xf2\xd9\xe7\x3f\x5f\xd9\xe0\x58\x9f\xba\x80\x63\x60\xfb\xea\x8b\xdd\xbb\xfc\xaf\x3f\x9f\x5d\x1d\x3f\xeb\xf7\xfe\xfc\xf9\xfb\xcf\x67\x9f\xff\xd4\xb7\xfb\x2e\xda\xa0\xa0\x47\x58\xa0\x6f\x16\x5c\xa1\x4f\xbb\xfa\x9f\x3f\x5f\x0e\x2c\xeb\xaa\x7f\x39\xba\x72\x39\xd2\xe7\x6d\x3d\xef\xc3\xb1\x17\x0d\x80\xfd\x68\x3c\xb4\xfb\xfd\xcf\x9f\x69\x4a\x48\x4b\xf8\x70\xd5\x53\x28\x31\x00\xa1\xb9\x2b\xb8\x80\x12\x36\x84\xd7\x04\xe0\x99\x46\x13\x30\xa9\x11\x9e\xb5\xf8\x49\x9e\xd2\x00\x4a\xd4\x13\x92\x0f\x40\x0c\x37\x39\x33\xbc\x50\x4d\x2e\x41\x34\x92\x4b\x30\xab\x76\x01\x20\x24\x07\xbe\xfa\xeb\x8a\x74\xae\xca\x2b\x1a\xf5\x86\xd9\xf0\x63\x60\xb9\xae\x6b\x9d\x69\xd2\xdb\xa3\xaa\x64\x42\xf2\x42\x82\x80\x51\x21\x81\x20\x08\x25\xc0\x07\xbd\x18\x13\x82\xcd\x81\xa1\xe8\x03\x7f\x56\x5f\x92\xd2\xfd\x6b\xce\x62\x2c\x50\x8f\x23\xc1\xc8\x0a\x29\x1a\x81\xe4\x3b\x1c\x23\x96\xca\xbc\x75\x00\x6a\x8c\xfa\xf9\x6c\x6b\x4c\x43\xb6\x76\x99\xae\xcb\x81\x5f\xac\xbf\x97\xaf\x49\xed\x89\x15\x56\x5d\x4d\xf7\xb0\x57\x38\xb4\xfb\x67\xb9\x52\x56\x38\x2c\xf5\x70\xfd\x4f\x05\x35\x3d\xdb\xdc\xd0\xda\x7d\x77\x89\x43\xd4\xcb\x88\x2b\xdd\x65\x19\x6d\xf7\x5d\xb1\x64\x6b\x45\x93\x11\x11\x24\x01\x0e\x18\x05\x7e\x17\x7d\x79\x6e\x03\xb0\xbb\x80\x76\xc1\xdb\xe8\x6f\x2b\xdf\xa0\x08\x6d\x80\x0f\x3c\x0d\x24\xcf\x26\x1f\xbc\x0f\x5e\x6f\xbd\x5e\x7f\x70\xfb\xcf\xb2\x93\xbb\x0f\x0a\x4b\x3e\x98\xb3\xbb\x0f\xcf\x56\xfe\x25\x74\x7e\x7f\xee\xfc\xe7\xd0\x79\xfa\xf1\x83\x73\xf5\xe9\xc9\xe0\xd6\xcb\xb9\xe2\x45\xef\xbb\x15\x0e\xdd\x58\xd1\xf6\x32\xee\xfd\x72\xc1\x40\x8b\xea\x72\x14\xb3\x15\x3a\x57\x71\xa4\x67\x57\x0e\x00\x4a\xf1\x32\x42\x18\x86\x25\x95\x0a\x16\xa2\x4a\xf2\xa7\xda\x52\x81\x5b\x2d\xd0\xed\xbe\x1b\xa8\x71\x3a\xb2\xd8\x03\x60\x8f\x87\x8f\xec\x7e\x47\xae\xd4\xf5\x71\xa1\x94\xbc\x67\xd7\xca\x78\x5b\xe1\xc1\xc1\x0c\x6a\x2b\xec\x3a\x4d\xb8\x87\x2c\x85\x0e\xf4\x15\x2b\x8d\x10\xaf\x2a\x21\x73\x71\x7d\x39\x92\xb7\xde\x9a\xab\x82\x07\xd1\xba\x71\xa0\x2e\xda\x3f\x40\xfd\xc5\x02\x8f\x6a\x5b\xc4\x8d\x90\xfc\xdb\xdb\x5f\x7e\xee\x59\x1e\x4c\xf0\xb3\x95\xca\x33\x8e\xd5\x4e\xab\x4d\xe8\x86\x8c\xa2\x5e\xb1\x75\x39\x12\x49\xd5\x33\x33\x05\x2c\x7a\xdf\xa9\x1e\xf7\x05\xe7\x8c\xb7\xfb\xcd\x86\x13\x12\x25\x2a\xfa\x5d\xee\x3e\x8e\x1c\x80\xbd\xe7\x82\x83\xf6\x01\xdd\xa0\xfb\xb8\xec\xaa\x25\xc1\x82\xf1\x9e\x92\x42\xed\xdb\xe1\x19\xd8\x80\xa9\x11\x28\x43\xdb\x33\xb0\x39\x3e\xee\x92\xbc\x1b\x2c\xec\x63\x3d\xf8\x72\x73\x75\x6c\x37\x40\xa2\xa6\x98\x43\x5d\xa8\x31\xe4\x40\x67\x2a\x3f\xf7\x71\xab\xde\xe6\x78\xdc\xff\x61\x3c\x3c\xb6\x0f\xf7\xae\xf2\xb3\xc3\xcf\x72\xa6\x1d\xd2\xdd\x1e\xb5\x9a\xee\xb5\x0b\x54\x82\x7b\x6f\x41\x77\x88\x39\x1a\x1e\x0c\x47\x05\xa7\x87\x83\xa5\x52\xb8\x2a\x3c\x89\x34\x50\x8a\xb0\xcb\xf0\x54\x7e\x74\xac\xee\x8d\x86\xc3\x61\xdf\x95\x4b\x44\x7b\xbd\x4a\xa0\xae\x7f\x42\x0e\xd7\xe6\x95\x02\xb3\x4b\x3b\x0c\xd1\x6a\x6b\x61\x5e\xfe\xc1\x8b\x5e\xb9\xa1\x81\xef\x03\xfb\x67\x56\x9c\xab\x83\x05\x4b\x69\xa8\xcf\xff\xe5\x12\x0b\x90\x30\x21\x5d\xfb\xf0\xcd\xb3\x6b\xfb\x7f\xeb\x8d\xd4\x8a\x85\xe5\xe7\xdb\x3b\xe4\x43\xba\xe4\x37\x71\xca\x5d\x51\xf3\xfe\x6c\x54\xfd\x53\x71\x9f\x4e\x48\xd8\xf7\xfd\xb6\x11\x82\x16\x10\x93\x5e\x2b\x7b\x2c\x3f\xca\xc7\x34\x48\xbe\xfc\x3a\x47\x2b\x78\xdc\xc3\xd3\xca\x31\xdd\xae\xd6\x21\x6a\x48\x0e\x90\x33\x8f\x79\x3b\x44\x35\x3c\xee\x21\x67\x36\xe0\x20\x21\xbf\xf5\x66\x78\xa8\x8d\xf0\xe0\x9b\xe0\x01\x36\x80\x71\x7e\xfb\x3d\x85\x73\x82\x80\x64\xa0\x30\x64\x8e\x9e\x6e\xd3\x38\x39\x2c\x67\x71\xb2\x2c\x3b\x4b\x40\x0f\x2b\x15\x67\xee\xef\xad\x5b\x93\x97\x17\xc0\x07\x21\x0b\x52\xf5\x45\x65\x77\x2f\x88\x3e\x2f\xff\xeb\xf6\x65\xd8\xb3\x3b\x06\xd8\x7d\x45\x75\xce\xa8\x91\x79\x1c\x96\x92\x15\x53\xd4\x0f\x9d\x0e\x98\xa2\x3e\xe0\x90\x29\xb2\x73\xca\x83\xc4\xd7\x94\x9d\x4c\x33\xae\x9e\x07\xfe\x81\x24\x54\x0a\x6b\x14\x84\xf9\x8b\xb6\xcb\xb1\x5b\xb9\x75\xb3\xfb\xc6\x62\x6a\x80\x9b\x8f\x74\xf5\xf5\x5b\xab\xa4\xcc\x39\x24\x6e\xed\x06\x4e\x95\xa0\x32\x26\x3d\x7b\x0a\x41\xfe\xfa\x24\x45\xeb\xe6\x9b\x6a\xcd\xd7\x3a\x32\x1e\x9e\x7d\x5c\x9f\x3b\xbb\xcc\x7b\x79\x71\x6c\x5b\xb3\x1d\x9d\x5a\xbe\x63\x7b\xea\xc1\x99\xdd\xae\x7c\xeb\x17\x47\xb5\x15\x6a\x07\xc8\x0f\xf7\x5d\xc9\x5e\xb1\x00\x12\xf4\xd6\x9c\x26\xf4\x3b\x8a\xe8\x8e\xeb\x97\x9c\xe1\x3f\xa0\x5c\xba\x5c\xa5\x02\x86\x77\x61\x74\x37\x1f\x05\x3c\xd0\xd0\x6b\x75\x7a\xf0\x83\xde\xf2\xc7\xd6\x23\xab\x3d\x71\xf3\x06\x63\xd7\xa4\x19\xb3\xe7\xab\xe8\x35\xe2\x17\x70\xdb\xb1\x86\xda\x1d\xc0\x2e\x3e\x75\x11\xb3\x83\x7f\xd1\xbd\x80\x57\xba\xab\x26\x7d\xe9\x7d\xef\x58\x02\x94\x93\x8a\x8a\x9b\x4b\x96\xe8\x13\x6a\xe0\x83\x5f\xe6\xd7\x28\x90\xee\x0d\xda\x0a\x33\xf1\xdf\xd1\x56\x1f\x64\xef\x85\x19\x57\x28\x14\x28\x42\x20\x1c\x80\x79\x77\xba\x55\xfd\xe0\x05\xa8\x4f\x71\x09\xaf\xc0\x0c\xd4\x9b\xe6\x57\x77\x33\x2a\xea\x65\x67\xd4\x95\x3b\x55\x3f\x59\x42\xd9\x9e\x7a\xde\x9e\x1a\xde\x67\xea\xbb\x67\x6e\x27\xcf\x9d\x8c\x86\x7b\x19\xdd\xde\x61\x06\x82\x03\xd4\x1b\xaa\x58\x55\x3f\x4c\x92\x2c\xd1\x77\x06\x5d\x16\xd6\x1d\xe7\x2a\xef\xf8\x86\x36\x2e\x27\xa9\x58\xb9\xd2\xf8\x8d\xed\x5c\x9b\xa9\x63\xfa\xff\x4f\xb6\xae\x86\x22\xe0\xeb\x73\x52\x7d\x35\xd0\xab\x47\xb3\x41\x65\xc1\x72\x9b\xa0\x09\xb0\xcb\x5b\xb1\xbf\x42\x6e\x0f\x8a\x6e\xa5\xad\x49\x4d\x3f\xfa\xc5\x45\x31\x29\x90\x63\x50\xe9\x53\xd4\x02\x49\x31\x01\x97\x4d\x95\xce\x61\x70\x13\x69\x54\x3b\x67\x84\xf1\x89\x11\xcc\x5d\x22\x92\x20\x2e\x5c\x7d\x01\xd1\xcb\xce\x65\xcd\x6d\x84\xcb\x51\xd8\x77\x21\x49\x96\xb0\x37\x74\x4f\xfb\x2e\x8f\xe6\x79\x38\x18\x34\xb9\xeb\xdf\x87\x64\x9c\x5b\x5c\xba\xa9\xff\x65\x5e\xcb\x19\x35\x7b\xcd\x92\xf3\xe5\xb9\x31\x4c\x7a\x1b\x55\xd9\xd6\x21\x62\x73\x55\xb5\xd1\x6d\x79\xaa\x73\x5b\xf2\x63\x89\xda\x2f\xa2\xae\xbf\x18\x62\xfd\x4e\xea\x73\x91\xa0\x40\xea\xfb\xdb\x89\x39\xee\xab\x0a\xa2\x6a\x14\x46\x05\x5e\xa1\x09\x90\x3c\xad\xf5\xe9\xd0\x3e\x01\x9f\xf4\xbb\x9a\x13\x60\x15\xd7\x8c\xd6\xa0\xfc\xed\x8a\x1a\x54\x95\x45\x39\x48\x84\x68\x38\x69\x38\x7b\x31\x40\x8b\x50\x5d\x52\x75\xac\xfe\x55\x96\x68\x8e\xdd\x3c\xdf\xa0\x2e\x5b\xd7\x84\x68\xaa\x57\xb3\x7a\xa5\x9c\xa8\xc9\xae\x35\xb4\x59\x8a\x35\x59\x45\x1c\x87\xaf\x30\x6d\x0b\x76\x27\xa7\x7a\x96\x7b\x55\x67\xbc\xfd\x86\xcb\x6a\x19\xda\x7c\x16\x8c\xca\xb7\xd9\xaf\x81\x1e\x66\xd5\x4d\x73\x76\x2d\xfb\xa8\xab\x2b\x7f\xba\x2d\xa1\x25\xcf\x57\x52\x92\xff\x18\x49\xd5\x5a\x04\x07\x37\xdd\xb5\x6f\x27\x3d\x82\xc1\xb2\x24\xc7\xe1\xa6\x0e\xbb\xd9\x18\xb9\xc4\xa2\x5f\xaf\x9e\x76\xdc\xb7\x57\x6b\x95\xdb\x6a\xa5\x58\xe3\x54\x96\x4d\x07\xb0\xd1\xe1\x12\xce\xcb\xfa\x37\xe3\xa1\x6b\xc2\xfc\x36\xbe\x56\x95\xaa\x28\xa3\x47\xf8\xc0\xd6\xb8\xd0\x38\x6b\xaa\xe2\xae\xab\x01\xc4\xc0\x27\xf0\x0b\x80\x39\xdb\x4b\x9e\x23\xea\xe5\xf0\x4a\x3f\x57\x06\xee\x41\xa6\x9d\x3c\x33\x44\x72\x35\x84\xe8\x74\x13\xf8\xc0\x2e\x00\xc4\xde\x39\x30\x4d\x42\x28\x2b\x77\x59\xb5\x38\x9b\x6b\x40\x9f\x7b\xdf\x4b\x03\x3a\x0e\x7f\x89\x06\xf4\xc0\x86\x06\x2a\x41\xfd\xcb\x74\xa0\x19\x7c\x81\x0e\x3e\xd5\x80\xbb\x7d\x7f\xd3\xb9\xa9\x3c\x0f\xe8\x82\x14\x14\xc5\x89\x09\x89\x95\x70\x1e\xd6\x0a\xd6\xbf\xa3\x6d\x67\x9a\x5e\x2f\x6b\xfb\x26\x59\xeb\x97\x49\xc2\xc9\xb0\x7f\xd6\xce\x12\xea\xa3\xda\xc9\x42\xb3\xba\xee\xc8\x19\x08\xa6\xe8\xa0\x54\xa1\xbd\x8e\x83\x92\x06\x62\xd0\xd4\xca\xdf\x91\x2b\xde\x18\xb4\xea\x90\xd8\x4a\x2d\xea\x09\x80\x7e\xd9\xa0\x31\x62\x77\xba\xd0\x41\x6d\x16\xd6\x5e\x44\xc3\xfd\xea\x1a\xbb\xdc\x5c\x15\xc5\x66\x23\x5d\x59\x60\x42\xba\xe2\x2d\xe8\x5e\xfe\xcf\x28\x82\x5f\xb1\xfc\x56\xfe\x73\x9f\x5c\xe9\x8b\x97\x4e\x33\xa1\x0f\x5b\xfa\xe1\xd9\xd3\xd7\x24\x31\xcd\xbc\xe9\xdf\x30\x17\x12\x9c\x0c\xc1\x05\xdc\x8a\xe6\x66\xdc\x9f\x4b\xed\x4b\xcf\x0e\x4b\xf0\xfe\xe7\x33\xaa\xce\x8c\xe0\xdb\x25\x17\x87\xe5\x54\x39\x94\xb0\x08\x72\x2c\x97\x31\x0e\xec\x56\x3e\xbe\x37\x77\xfa\xba\xbc\x4b\xef\x31\x53\x54\x4c\x80\x9d\x6f\x30\xfb\x81\xf2\x26\x7d\xe6\x22\x21\xd9\x03\xf1\x1d\x67\x9f\x5d\x85\x5b\xfd\x30\xb5\x03\x8b\x43\x96\x46\x4b\x9a\xca\xbd\x78\xbc\x13\x69\x0d\xe9\xe5\x8e\xb3\xb2\x01\x68\x74\xe4\x9b\xbb\xd5\x91\xd2\x1b\xca\xd6\xf4\xea\x0e\x80\xba\x6c\xe8\xf7\x4e\x04\x6e\x92\x74\xd4\x74\x2d\x1e\xdb\x1a\x41\xcd\x66\x35\xf9\xf2\x20\x75\x59\xc4\x19\x6b\x50\x60\xae\x7a\x4c\x91\xe4\x90\x58\x57\x77\x41\xd3\x3e\x4c\x08\x30\x0f\xd2\x78\x81\x38\xa2\x81\x4a\xf2\x7f\xd0\x87\x7c\xaf\x5f\xd6\x30\x85\x49\xfd\x52\xd8\x04\x38\x1d\xbd\xed\xa2\xaf\xe6\x58\xfb\xe1\xca\xfc\xba\x45\xf3\xae\x1b\x3e\xfb\xd9\xcb\x5b\xb5\x89\xba\xc0\x25\xeb\x7f\xa3\x44\x43\xad\x52\xea\xa0\xa2\xa1\xfe\xb6\xd3\x8e\x37\xa2\xcc\x6f\x58\x2a\x6f\x43\xe5\x4c\xb3\xff\xd3\x20\x7b\x9f\x71\xea\x99\xff\xcd\x60\xea\xe9\xff\xf3\xe4\xbf\x03\x00\x00\xff\xff\xcc\x16\x98\x2b\x03\x45\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17667, mode: os.FileMode(420), modTime: time.Unix(1588138825, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

