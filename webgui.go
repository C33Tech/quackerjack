// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\xeb\x76\xdb\x38\x92\xfe\xef\xa7\x40\xb3\x27\x43\xa9\x2d\x92\x92\x1c\xa7\x27\xb2\xa8\x9c\x8c\x9d\x3d\x9d\x99\x4c\x77\x26\x97\x9d\xed\x75\xbc\x39\x10\x09\x51\xb0\x41\x80\x0d\x80\xba\x74\xe2\x77\xdf\x03\x80\x77\x52\xb2\x9c\x38\xdb\xbb\xab\x1f\x0e\x05\x14\x0a\x85\xaa\xc2\x57\x55\x00\x95\xe9\x77\x17\xbf\x9c\xbf\xfb\xf5\xf5\x0b\xb0\x94\x31\x99\x1d\x4d\xd5\x3f\x80\x40\x1a\xf9\x16\xa2\x96\x6a\x40\x30\x9c\x1d\x01\x30\x95\x58\x12\x34\xfb\x67\x0a\x83\x1b\xc4\xaf\x61\x70\x03\x56\x27\x53\xcf\xb4\x1e\x29\x82\x18\x49\x08\x82\x25\xe4\x02\x49\xdf\x4a\xe5\xc2\xf9\x8b\x35\x2b\x3a\x96\x52\x26\x0e\xfa\x2d\xc5\x2b\xdf\xfa\x0f\xe7\xfd\x73\xe7\x9c\xc5\x09\x94\x78\x4e\x90\x05\x02\x46\x25\xa2\xd2\xb7\x5e\xbe\xf0\x51\x18\xa1\xca\x38\x0a\x63\xe4\x5b\x2b\x8c\xd6\x09\xe3\xb2\x42\xba\xc6\xa1\x5c\xfa\x21\x5a\xe1\x00\x39\xfa\xcb\x00\x60\x8a\x25\x86\xc4\x11\x01\x24\xc8\x1f\x59\x46\x30\x82\xe9\x0d\xe0\x88\xf8\x96\x90\x5b\x82\xc4\x12\x21\x69\x81\x25\x47\x0b\xdf\x52\x62\x89\x89\xe7\x09\x09\x83\x9b\x04\xca\xa5\x3b\x67\x4c\x0a\xc9\x61\x12\x84\xd4\x0d\x58\xec\x15\x0d\xde\x63\xf7\xb1\x3b\xf2\x02\x21\xca\x36\x37\xc6\xd4\x0d\x84\x30\x12\x7f\xe5\x4c\x0b\x46\xa5\x03\xd7\x48\xb0\x18\x79\x8f\xdd\x1f\xdd\xa1\x9e\xac\xda\x5c\x9f\x4f\xcf\x02\xe4\x36\x41\xbe\x25\xd1\x46\x7a\x79\x0f\x00\x31\xc4\x14\x7c\x02\x31\xe4\x11\xa6\x8e\x64\xc9\x04\x9c\x72\x14\x9f\x81\x5b\xdd\xfd\x3d\xa6\x92\x33\xf0\x09\x84\x58\x24\x04\x6e\x27\x60\x4e\x58\x70\x53\x74\x27\x9c\x05\x48\x08\x4c\xa3\x2a\x0d\x65\x14\x15\x24\x1c\x29\x8b\xdc\xd5\xed\x2a\x07\x42\xbc\x10\x65\x02\x86\xc9\x06\x8c\xd4\x9f\xfc\xe1\x0c\xcc\x19\x0f\x11\x77\xe6\x4c\x4a\x16\x4f\xc0\x28\xd9\x00\xc1\x08\x0e\xc1\xf7\x4f\x9f\x3e\xcd\x39\xba\x2c\x95\x04\x53\x04\x3e\x65\xf4\x55\xc2\x39\x49\x8b\xa9\xdd\x39\x8e\x68\x1a\x83\x4f\x20\x81\x61\x88\x69\x34\x01\xa7\x95\x59\x38\x0c\x71\x2a\xb2\x36\xa5\x35\x07\x12\x1c\xd1\x09\x08\x10\x95\x88\x9f\x15\x82\x8e\x4e\x73\x21\xb3\x87\xe6\x04\x22\x81\xd4\x35\x33\x69\x1b\x09\xfc\x3b\x9a\x80\xf1\x63\x45\xd9\xad\xd7\xda\xc8\x10\x89\xa0\x3e\xd4\x68\x43\xcb\x24\x39\xa4\x62\xc1\x78\x3c\x01\x69\x92\x20\x1e\x40\x51\x2e\x50\xc2\xb9\xd8\x39\xb2\xb6\x9a\xda\x08\x82\x5b\x3a\x09\x52\x2e\x18\x9f\x80\x84\x61\xb3\x78\x45\x3f\xf5\xb4\x63\xcd\x8e\xa6\x9e\xd9\xfe\xd3\x39\x0b\xb7\xb3\xa3\xa3\x29\x85\x2b\x10\x10\x28\x84\x6f\x51\xb8\x9a\x43\x0e\xcc\x3f\x0e\xda\x24\x90\x86\x4e\x1c\xe6\x0d\x21\xe4\x37\x60\x1e\x99\x7f\x17\x78\x83\x42\xe5\x84\xc6\x6d\x61\x9d\x87\x33\xe7\x90\x86\xf9\x3e\xf9\xde\xaa\x82\xcc\xd4\x83\x7a\xc8\x3c\x95\x92\xd1\xc6\x38\xc9\xa2\x88\x20\x6e\x65\x3b\xc0\xd0\x58\x20\x84\x12\x66\x7d\xbe\x15\x30\x42\x60\x22\x50\xde\x0c\x79\xa4\xe0\xe9\x7b\xc3\x42\xbc\xd8\xc0\x38\x21\xe8\x02\x2d\x60\x4a\xa4\x05\x20\xc7\xd0\x51\x18\xc3\x19\x29\x26\xea\xa6\x32\x4b\x46\xa1\x6f\x2d\x20\x51\x13\xe8\x56\x02\xe7\x6a\xff\xbf\xd3\xd3\x2b\x65\xe0\x08\x4a\xcc\x68\xb6\x2d\xa7\xca\xf2\xdd\xcb\x70\x70\xa0\xc8\xa6\x9e\x22\xd1\x8b\xf6\xcc\x8a\x0c\x8a\x85\xb8\x50\x7d\xbe\xa6\x5c\xd7\xe5\x1a\x71\xb8\x4b\xe6\x6c\xfa\x94\x34\x26\x57\x16\x8d\xb9\x03\x53\xc9\x32\x1a\x8d\x63\x15\x2a\x07\x4b\x14\x03\x18\x48\xbc\x42\x05\x49\xc3\x8a\x8e\x42\xbe\xdc\x82\x9e\x35\xfb\x19\xad\xc1\x1b\x03\x00\xb5\x15\x0b\xee\x30\x4a\xb6\xd6\xac\x17\xa4\x9c\x23\x2a\xfb\xd9\x72\x33\x3b\x6b\xc6\x1e\xc1\x7b\x24\x39\x48\x84\x1c\x6c\x23\x2c\x97\xe9\x5c\x83\x6b\x8c\x6f\xd0\x82\x6c\x29\xf5\x7e\x2b\xdd\xcb\xe3\x88\x20\x28\x90\xb0\x66\xd3\x62\xa6\x05\x04\x0b\xe8\x98\xa1\x8e\xf8\x2d\x85\x3c\x37\xee\x12\x87\x21\xa2\xbe\x25\x79\x8a\x94\xa5\xf0\x0c\xbc\xc9\x18\xfc\x41\x0b\xf8\x62\xb9\xdf\xb2\x94\x07\x68\x97\xd4\xdf\x39\xce\x1e\x5f\x08\x39\x4b\x42\xb6\xa6\x7b\x57\x52\x50\x65\xfe\x5d\xee\x6f\xed\xa5\x79\xef\x70\xd4\xd8\xb0\x05\xf3\x4c\x74\x28\x12\x96\xa4\x49\x26\x7c\xf7\xd6\x9b\x5d\x64\x83\x2a\xeb\xa9\x6f\x99\x42\x98\x18\xd1\xb4\xba\x55\x09\x0a\xe7\xdb\x9a\x38\x25\x83\xea\xb2\x0a\x06\xda\x84\x25\x56\x3d\x0f\xd4\xee\xae\xcd\x7b\xd0\x30\xca\xe4\x12\x71\xbd\xad\xbe\x60\xf8\x5b\x16\x23\xb9\x54\xd1\x19\x11\x81\xc0\x12\x71\x54\x5f\xba\x17\xe2\x55\x97\x65\x1d\x27\x03\x02\x2f\x25\xd9\x53\x6e\xeb\xa9\x8a\x36\x85\x2f\x31\x1e\x3b\x98\xea\x78\x1b\x6f\x9d\xb1\xfa\x43\x22\x67\x58\x62\x04\xa6\x49\x2a\x6b\xe4\x19\x6c\x2a\x38\x11\xb1\x33\xb6\x2a\x89\x89\x05\x12\x02\x03\xb4\x64\x24\x44\xdc\xb7\xde\x22\xc8\x83\x65\x1d\x31\xb3\xb6\x82\x7f\x1d\xf1\xe7\x92\x82\xb9\xa4\x8e\x40\x01\xa3\x21\xe4\xdb\x42\x2a\x11\x3b\xc3\x7c\x2a\x91\xce\x63\x2c\xad\x99\xe1\x55\xe2\xa7\x59\xb1\x12\xd2\x3c\x1b\x2d\x64\x4a\x9a\x7a\x14\xae\x54\x70\xd3\x29\x13\x67\xca\x09\xd5\xa3\x55\xc2\x2d\x95\x10\x53\xc4\xad\x12\x89\x95\x0b\xeb\x14\x2a\x07\x56\xad\x3c\x65\x14\x16\xfa\x56\xa4\xd2\x3e\x63\x5a\xdf\x2a\x97\x54\xf1\x47\xad\xb0\x88\xb3\x34\xa9\x6e\x22\xad\x0a\xb0\x60\xdc\xb7\x5e\x2a\xf5\xbe\x7f\xf3\xca\x9a\xbd\xd0\x71\x1c\x82\x5f\x59\xfa\x2e\x9d\x23\xf0\xef\x38\x44\x0c\xbc\x7f\xf3\x6a\xea\x69\xfa\xca\x78\x63\x13\xa3\x8b\x94\x13\xab\xcb\x3c\x66\xfb\x15\xec\x8d\x0d\x54\x2a\xc2\xf1\xdc\xec\x85\x94\x93\x9f\x10\x49\xac\x22\xf7\x0e\xab\x32\x8a\x18\x12\xa2\x79\x14\x74\xd5\x59\x94\xb5\x4d\x1e\x12\xa7\x12\x85\xd6\x2c\x8b\x43\x13\x90\x43\xda\x7a\xbd\x76\xb7\x2c\x95\xe9\x1c\x69\x5c\x5b\x43\x19\x2c\x9f\xad\x7c\xf6\x53\x74\xfa\xf6\x6f\xbf\xbe\xf9\xe9\xf9\x70\xea\xe9\x59\x4a\x07\xae\x7a\x73\xe6\x18\x35\x8b\x37\xdd\x24\xe1\x38\x86\x7c\xdb\x46\xc7\x80\xc5\x31\xa2\x52\x38\x6c\x0f\x34\x06\x90\x02\xb9\x44\xe0\x3c\x23\xde\xe5\x48\x99\x5c\x55\x9f\x28\xf3\xe6\xdc\x31\x2a\x46\x27\x0c\x86\x65\x4f\xbd\x8f\xb3\xb5\xd5\x0d\x5d\x01\x23\x4e\x1c\x3a\x27\x4a\xba\x8a\x1e\x3a\x89\x9e\xd4\xd1\xab\x8c\xf6\x04\x0b\x69\xfc\x0d\x94\x8f\xce\x82\xa4\x62\x59\x1b\x52\x03\xfc\x0a\xa5\xc1\x9f\xfa\x0a\x9d\x60\x89\x82\x1b\x47\x39\x5a\x4b\xcf\x26\xfc\xec\xd3\xf2\xb9\x1a\xac\x10\x6c\xc1\x38\x58\x41\x95\xc4\x6b\x9f\xc6\xb3\x2a\x5e\xdd\x5f\x26\x63\x33\x27\x60\x29\x95\x5f\x2d\x57\x50\x78\xc0\x03\x88\xa4\x80\x5c\xb9\xc0\x97\x48\x75\x91\x8d\x55\x82\x3d\x88\x50\x28\x66\xd7\xf8\x4b\x24\x79\x4e\x21\xd9\xfe\xae\x43\x8f\x62\xf1\x55\x42\x08\x44\x25\x56\x6b\xf9\x3a\x41\x0a\x36\x4d\x61\x4c\x94\xab\x36\x54\xb6\x4c\xc2\x59\xc4\x51\x51\x30\xef\x23\x71\x54\xa5\x53\xfd\xe2\x08\xc9\x71\x82\xc2\x7a\x23\xa4\x38\x86\x0a\xf4\xb2\x28\x92\x77\xce\x21\xcf\x96\xb1\x82\x24\x45\x94\xad\x7d\xeb\xa4\xda\x12\x63\xea\x5b\xc3\x5a\x0b\xdc\xf8\xd6\x68\x38\xb4\x80\x2e\xc5\xb2\xe3\x8e\x09\x38\x79\xd4\x82\x81\x06\x3e\xb6\x82\x7f\xf1\xa5\x78\xec\xc0\x2d\x53\xad\x77\x60\x16\x67\x6b\x60\x4a\xf8\x4e\xd8\xca\x70\x67\x34\xac\x82\xd7\x72\x9c\x77\xaf\x54\xac\xfa\xa8\x0f\x89\x4c\xd2\x92\x45\xaf\x77\xaa\x65\xea\x2d\xc7\x95\x51\x49\xc1\x73\x09\x29\x45\x24\x1f\xf6\x1c\x9c\x9b\x86\xa9\x97\x74\x47\x84\xb6\x3c\x63\xab\x30\x7b\x97\x02\x76\x43\x6f\x07\xaf\xc7\x4d\x5c\xce\x2c\xb2\x44\x38\x5a\xca\x09\x38\x19\xaa\xda\xbb\x0e\xbc\x01\xa4\x2b\x28\xb4\x66\x83\x25\xe4\xf2\x1d\x93\x90\xbc\x2d\xbc\x1d\x98\xc3\x2b\xeb\xb1\x32\xb0\xe1\xe3\x5b\x27\xc3\xa1\xb2\xad\x19\x7a\xb7\x35\xbb\x65\x05\x42\x42\xb9\xcf\xa5\xeb\x71\x66\x27\xa3\x27\x40\x3d\x88\x38\x7b\xd8\x88\x46\x68\x69\x0f\x34\x27\x1b\x1d\x44\xcd\xa2\x37\xcd\x70\x40\x2a\x9d\x7c\xcc\xc1\xcc\x9a\x39\x4e\x59\xfa\xee\xe5\xa0\x92\x15\x6b\xa6\x55\x5a\x09\xd1\xdd\x43\x5b\x7b\x65\x77\xe3\x1f\xa2\x84\x84\x09\xac\x0a\xeb\x8f\x88\x46\x30\x42\x5f\xa6\x8a\xd7\x19\x93\xaf\x55\x42\x57\xd3\xff\x4a\xd7\xc9\x9d\xe6\x63\x82\xf8\xc7\x10\x6e\xef\xad\xb1\xdc\x6d\xc0\x6b\xc4\xc1\x05\xdc\xfe\x5f\x75\x9f\x10\x0b\x82\x6f\xd0\x47\x0e\x25\x66\xf7\xd6\xc2\x85\x19\x0d\xde\xa8\xd1\x0f\xea\x3c\x77\xe2\xd4\x1d\x98\x3a\x3e\x3d\x04\x53\x93\x57\x58\x94\x60\x3a\x1a\x0e\x1f\x95\x68\x3a\x3e\x2d\x63\x67\x93\xeb\x1d\x20\x7b\x40\xe2\xbc\x64\x1c\xff\xae\xca\x42\x02\x24\x9c\xd7\xf1\x76\x77\xfe\x03\x16\x04\x6d\x9c\x05\x26\x04\x34\x7a\x8a\x82\x25\x3f\xa5\x9c\xfb\xd6\x9a\xf1\x50\x28\x9c\x4b\xc0\xbf\xd4\x63\x2b\xb9\x39\x60\x9e\x2a\xbf\x2c\xe3\x53\xfc\x5e\xb4\x33\xb7\xf2\x40\xe0\x01\x42\xe6\x68\xdc\xd6\x7d\x33\x4a\xb6\xec\x79\x01\x31\xd9\xb6\x63\x64\xc3\xac\xc3\x0e\xb3\x0e\xbb\xcd\xba\x27\xf5\x99\x7a\xaa\xc2\x37\x29\x90\xaa\x7c\x13\x09\x04\x0f\xca\x63\xb7\x80\x85\xc8\xbd\xfe\x2d\x45\x7c\xab\x6b\x54\xf3\xe8\x9c\xb8\x8f\xdd\x91\xbe\x82\xb9\x16\x16\x08\x38\x13\x82\x71\x1c\xa9\xec\x0d\x52\x46\xb7\x31\x4b\x85\x3e\xc1\xd5\x2c\x67\xbb\xb8\xdf\xe3\xb2\xe9\xba\x7a\xd7\x34\x4f\x69\x48\x50\x3e\xff\xdd\xf3\x04\x21\xbd\x16\x6e\x40\x58\x1a\x2e\x08\xe4\xa6\xdc\x86\xd7\x70\xe3\x11\x3c\x17\xde\xb9\xd2\xba\x7b\x2d\xbc\xb1\xfb\xd4\x3d\xc9\xbe\xb6\x99\x57\xb8\x57\x6e\x9a\xae\xe1\x0a\x9a\x56\x6d\xd3\x15\x54\xc5\x12\x61\x5c\x00\x1f\x7c\xd2\x3a\xe7\x28\x9c\x00\x8b\x47\xf3\xde\xf8\xf4\x74\x00\x9e\x3e\x1d\x80\xd1\xc9\xb8\x6f\x0d\x74\x2f\xe3\x90\x46\xa8\x4a\x30\x3a\x7d\x3a\x00\x4f\x1e\xe7\x04\x5b\x44\x08\x5b\x57\x09\xc6\xc3\xd3\x01\xf8\xcb\x93\x9c\x20\xe2\x08\xd1\xac\xff\x47\x35\xfe\xe9\x58\xff\xc9\xfb\xe7\x24\xcd\xf9\x9f\x3e\x1e\x80\xd1\x93\xf1\x00\x8c\x4f\x4e\xf3\xee\x24\xe5\xfa\x58\x42\x13\x8c\x4e\x4f\x06\x60\x34\x54\x14\xa7\xa7\x95\x09\xb6\xf9\xfc\xc3\x91\x9a\xff\x44\xfd\xf9\xb1\x6f\x1d\x01\x70\xab\xf4\xb2\x48\xa9\x3e\xe4\x01\x11\x92\xef\xdf\xbc\x7a\x0d\x39\x8c\x91\x44\xbc\x47\x61\x8c\xfa\x85\x1e\x64\xca\x29\x08\x91\x72\xaa\xf7\x6f\x5e\x9e\xb3\x38\x61\x14\x51\xd9\xeb\x51\x7d\x4c\x1e\xbd\xd8\x24\x3d\xfb\xf2\xd9\xe7\x3f\x5f\xd9\xe0\x58\x9f\xba\x80\x63\x60\xfb\xea\x8b\xdd\xbb\xfc\xaf\x3f\x9f\x5d\x1d\x3f\xeb\xf7\xfe\xfc\xf9\xfb\xcf\x67\x9f\xff\xd4\xb7\xfb\x2e\xda\xa0\xa0\x47\x58\xa0\x6f\x16\x5c\xa1\x4f\xbb\xfa\x9f\x3f\x5f\x0e\x2c\xeb\xaa\x7f\x39\xba\x72\x39\xd2\xe7\x6d\x3d\xef\xc3\xb1\x17\x0d\x80\xfd\x68\x3c\xb4\xfb\xfd\xcf\x9f\x69\x4a\x48\x4b\xf8\x70\xd5\x53\x28\x31\x00\xa1\xb9\x2b\xb8\x80\x12\x36\x84\xd7\x04\xe0\x99\x46\x13\x30\xa9\x11\x9e\xb5\xf8\x49\x9e\xd2\x00\x4a\xd4\x13\x92\x0f\x40\x0c\x37\x39\x33\xbc\x50\x4d\x2e\x41\x34\x92\x4b\x30\xab\x76\x01\x20\x24\x07\xbe\xfa\xeb\x8a\x74\xae\xca\x2b\x1a\xf5\x86\xd9\xf0\x63\x60\xb9\xae\x6b\x9d\x69\xd2\xdb\xa3\xaa\x64\x42\xf2\x42\x82\x80\x51\x21\x81\x20\x08\x25\xc0\x07\xbd\x18\x13\x82\xcd\x81\xa1\xe8\x03\x7f\x56\x5f\x92\xd2\xfd\x6b\xce\x62\x2c\x50\x8f\x23\xc1\xc8\x0a\x29\x1a\x81\xe4\x3b\x1c\x23\x96\xca\xbc\x75\x00\x6a\x8c\xfa\xf9\x6c\x6b\x4c\x43\xb6\x76\x99\xae\xcb\x81\x5f\xac\xbf\x97\xaf\x49\xed\x89\x15\x56\x5d\x4d\xf7\xb0\x57\x38\xb4\xfb\x67\xb9\x52\x56\x38\x2c\xf5\x70\xfd\x4f\x05\x35\x3d\xdb\xdc\xd0\xda\x7d\x77\x89\x43\xd4\xcb\x88\x2b\xdd\x65\x19\x6d\xf7\x5d\xb1\x64\x6b\x45\x93\x11\x11\x24\x01\x0e\x18\x05\x7e\x17\x7d\x79\x6e\x03\xb0\xbb\x80\x76\xc1\xdb\xe8\x6f\x2b\xdf\xa0\x08\x6d\x80\x0f\x3c\x0d\x24\xcf\x26\x1f\xbc\x0f\x5e\x6f\xbd\x5e\x7f\x70\xfb\xcf\xb2\x93\xbb\x0f\x0a\x4b\x3e\x98\xb3\xbb\x0f\xcf\x56\xfe\x25\x74\x7e\x7f\xee\xfc\xe7\xd0\x79\xfa\xf1\x83\x73\xf5\xe9\xc9\xe0\xd6\xcb\xb9\xe2\x45\xef\xbb\x15\x0e\xdd\x58\xd1\xf6\x32\xee\xfd\x72\xc1\x40\x8b\xea\x72\x14\xb3\x15\x3a\x57\x71\xa4\x67\x57\x0e\x00\x4a\xf1\x32\x42\x18\x86\x25\x95\x0a\x16\xa2\x4a\xf2\xa7\xda\x52\x81\x5b\x2d\xd0\xed\xbe\x1b\xa8\x71\x3a\xb2\xd8\x03\x60\x8f\x87\x8f\xec\x7e\x47\xae\xd4\xf5\x71\xa1\x94\xbc\x67\xd7\xca\x78\x5b\xe1\xc1\xc1\x0c\x6a\x2b\xec\x3a\x4d\xb8\x87\x2c\x85\x0e\xf4\x15\x2b\x8d\x10\x2f\x95\x70\x6b\x2e\x05\x1e\x44\xbf\xc6\x55\xba\x68\xff\x00\x45\x17\x0b\x3c\xaa\x6d\x06\x37\x42\xf2\x6f\x6f\x7f\xf9\xb9\x67\x79\x30\xc1\xcf\x56\x2a\xa3\x38\x56\x7b\xaa\x36\xa1\x1b\x32\x8a\x7a\xc5\x26\xe5\x48\x24\x55\x1f\xcc\x14\xb0\xe8\x7d\xa7\x7a\xdc\x17\x9c\x33\xde\xee\x37\x5b\x4b\x48\x94\xa8\x38\x77\xb9\xfb\xe0\x71\x00\xf6\x9e\x00\x0e\xda\x47\x71\x83\xee\x83\xb1\xab\x96\x04\x0b\xc6\x7b\x4a\x0a\xb5\x43\x87\x67\x60\x03\xa6\x46\xa0\x0c\x57\xcf\xc0\xe6\xf8\xb8\x4b\xf2\x6e\x58\xb0\x8f\xf5\xe0\xcb\xcd\xd5\xb1\xdd\x80\x83\x9a\x62\x0e\x75\xa1\xc6\x90\x03\x9d\xa9\xfc\xdc\xc7\xad\x7a\x9b\xe3\x71\xff\x87\xf1\xf0\xd8\x3e\xdc\xbb\xca\xcf\x0e\x3f\xcb\x99\x76\x48\x77\x7b\xd4\x6a\xba\xd7\x2e\x50\xa9\xec\xbd\x05\xdd\x21\xe6\x68\x78\x30\xf0\x14\x9c\x1e\x0e\x80\x4a\xe1\xaa\x40\x24\xd2\x40\x29\xc2\x2e\x03\x51\xf9\xd1\x51\xb9\x37\x1a\x0e\x87\x7d\x57\x2e\x11\xed\xf5\x2a\x21\xb9\xfe\x09\x39\x5c\x9b\x97\x07\xcc\x2e\xed\x30\x44\xab\xad\x85\x79\xf9\x07\x2f\x7a\xe5\x86\x06\xbe\x0f\xec\x9f\x59\x71\x82\x0e\x16\x2c\xa5\xa1\x3e\xe9\x97\x4b\x2c\x40\xc2\x84\x74\xed\xc3\x37\xcf\xae\xed\xff\xad\x37\x52\x2b\xea\x95\x9f\x6f\xef\x90\x0f\xe9\x92\xdf\xc4\x29\x77\xc5\xc7\xfb\xb3\x51\x95\x4e\xc5\x7d\x3a\x21\x61\xdf\xf7\xdb\x46\x08\x5a\x40\x4c\x7a\xad\x3c\xb1\xfc\x28\x1f\xd3\x20\xf9\xf2\xeb\x1c\xad\xe0\x71\x0f\x4f\x2b\xc7\x74\xbb\x5a\x87\xa8\x21\x39\x40\xce\x3c\xe6\xed\x10\xd5\xf0\xb8\x87\x9c\xd9\x80\x83\x84\xfc\xd6\x9b\xe1\xa1\x36\xc2\x83\x6f\x82\x07\xd8\x00\xc6\xf9\xed\xf7\x14\xce\x09\x02\x92\x81\xc2\x90\x39\x7a\xba\x4d\xe3\xe4\xb0\x9c\xc5\xc9\xb2\xc0\x2c\x01\x3d\xac\xd4\x96\xb9\xbf\xb7\xee\x47\x5e\x5e\x00\x1f\x84\x2c\x48\xd5\x17\x95\xdd\xbd\x20\xfa\x64\xfc\xaf\xdb\x97\x61\xcf\xee\x18\x60\xf7\x15\xd5\x39\xa3\x46\xe6\x71\x58\x4a\x56\x4c\x51\x3f\x5e\x3a\x60\x8a\xfa\x80\x43\xa6\xc8\x4e\x24\x0f\x12\x5f\x53\x76\x32\xcd\xb8\x7a\x1e\xf8\x07\x92\x50\x29\xac\x51\xfa\xe5\xaf\xd4\x2e\xc7\x6e\xe5\x7e\xcd\xee\x1b\x8b\xa9\x01\x6e\x3e\xd2\xd5\x17\x6d\xad\xe2\x31\xe7\x90\xb8\xb5\xbb\x36\x55\x6c\xca\x98\xf4\xec\x29\x04\xf9\x8b\x92\x14\xad\x9b\xef\xa4\x35\x5f\xe0\xc8\x78\x78\xf6\x71\x7d\xee\xec\xda\xee\xe5\xc5\xb1\x6d\xcd\x76\x74\x6a\xf9\x8e\xed\xa9\x07\x67\x76\xbb\xc6\xad\x5f\x11\xd5\x56\xa8\x1d\x20\x3f\xc6\x77\x25\x7b\xc5\x02\x48\xd0\x5b\x73\x6e\xd0\xef\x28\x97\x3b\x2e\x5a\x72\x86\xff\x80\x72\xe9\x72\x95\x0a\x18\xde\x85\xd1\xdd\x7c\x14\xf0\x40\x43\xaf\xd5\xe9\xc1\x0f\x7a\xcb\x1f\x5b\x8f\xac\xf6\xc4\xcd\xbb\x8a\x5d\x93\x66\xcc\x9e\xaf\xa2\xd7\x88\x5f\xc0\x6d\xc7\x1a\x6a\xa7\xfd\xbb\xf8\xd4\x45\xcc\x8e\xf8\x45\xf7\x02\x5e\xe9\xae\x9a\xf4\xa5\xf7\xbd\x63\x09\x50\x4e\x2a\x2a\x6e\x2e\x59\xa2\xcf\xa2\x81\x0f\x7e\x99\x5f\xa3\x40\xba\x37\x68\x2b\xcc\xc4\x7f\x47\x5b\x7d\x64\xbd\x17\x66\x5c\xa1\x50\xa0\x08\x81\x70\x00\xe6\xdd\xe9\x56\xf5\x83\x17\xa0\x3e\xc5\x25\xbc\x02\x33\x50\x6f\x9a\x5f\xdd\xcd\xa8\x38\xfc\x71\x46\x5d\xb9\x53\xf5\x93\x25\x94\xed\xa9\xe7\xed\xa9\xe1\x7d\xa6\xbe\x7b\xe6\x76\xf2\xdc\xc9\x68\xb8\x97\xd1\xed\x1d\x66\x20\x38\x40\xbd\xa1\x8a\x55\xf5\x63\x23\xc9\x12\x7d\x3b\xd0\x65\x61\xdd\x71\xae\xf2\x8e\x6f\x68\xe3\x72\x92\x8a\x95\x2b\x8d\xdf\xd8\xce\xb5\x99\x3a\xa6\xff\xff\x64\xeb\x6a\x28\x02\xbe\x3e\x11\xd5\x97\x00\xbd\x7a\x34\x1b\x54\x16\x2c\xb7\x09\x9a\x00\xbb\xbc\xff\xfa\x2b\xe4\xf6\xa0\xe8\x56\xda\x9a\xd4\xf4\xa3\x5f\x51\x14\x93\x02\x39\x06\x95\x3e\x45\x2d\x90\x14\x13\x70\xd9\x54\xe9\x1c\x06\x37\x91\x46\xb5\x73\x46\x18\x9f\x18\xc1\xdc\x25\x22\x09\xe2\xc2\xd5\x57\x0d\xbd\xec\x04\xd6\xdc\x3b\xb8\x1c\x85\x7d\x17\x92\x64\x09\x7b\x43\xf7\xb4\xef\xf2\x68\x9e\x87\x83\x41\x93\xbb\xfe\x25\x48\xc6\xb9\xc5\xa5\x9b\xfa\x5f\xe6\x05\x9c\x51\xb3\xd7\x2c\x39\x5f\x9e\x1b\xc3\xa4\xb7\x51\x95\x6d\x1d\x22\x36\x57\x55\x1b\xdd\x96\xa7\x3a\xb7\x25\x3f\x96\xa8\xfd\x22\xea\xfa\x8b\x21\xd6\x6f\x9f\x3e\x17\x09\x0a\xa4\xbe\xa9\x9d\x00\xfd\xd6\x73\x55\x10\x55\xa3\x30\x2a\xf0\x0a\x4d\x80\xe4\x69\xad\x4f\x87\xf6\x09\xf8\xa4\xdf\xca\x9c\x00\xab\xb8\x50\xb4\x06\xe5\xaf\x54\xd4\xa0\xaa\x2c\xca\x41\x22\x44\xc3\x49\xc3\xd9\x8b\x01\x5a\x84\xea\x92\xaa\x63\xf5\xef\xaf\x44\x73\xec\xe6\xf9\x06\x75\xd9\xba\x26\x44\x53\xbd\x9a\xd5\x2b\xe5\x44\x4d\x76\xad\xa1\xcd\x52\xac\xc9\x2a\xe2\x38\x7c\x85\x69\x5b\xb0\x3b\x39\xd5\xb3\xdc\xab\x3a\xe3\xed\x37\x5c\x56\xcb\xd0\xe6\xb3\x60\x54\xbe\xcd\x7e\xf7\xf3\x30\xab\x6e\x9a\xb3\x6b\xd9\x47\x5d\x5d\xf9\xd3\x6d\x09\x2d\x79\xbe\x92\x92\xfc\x67\x47\xaa\xd6\x22\x38\xb8\xe9\xae\x7d\x3b\xe9\x11\x0c\x96\x25\x39\x0e\x37\x75\xd8\xcd\xc6\xc8\x25\x16\xfd\x7a\xf5\xb4\xe3\x66\xbd\x5a\xab\xdc\x56\x2b\xc5\x1a\xa7\xb2\x6c\x3a\x80\x8d\x0e\x97\x70\x5e\xd6\xbf\x19\x0f\x5d\x13\xe6\xf7\xee\xb5\xaa\x54\x45\x19\x3d\xc2\x07\xb6\xc6\x85\xc6\x59\x53\x15\x77\x5d\x0d\x20\x06\x3e\x81\x5f\x00\xcc\xd9\x5e\xf2\x1c\x51\x2f\x87\x57\xfa\xb9\x32\x70\x0f\x32\xed\xe4\x99\x21\x92\xab\x21\x44\xa7\x9b\xc0\x07\x76\x01\x20\xf6\xce\x81\x69\x12\x42\x59\xb9\xb5\xaa\xc5\xd9\x5c\x03\xfa\xdc\xfb\x5e\x1a\xd0\x71\xf8\x4b\x34\xa0\x07\x36\x34\x50\x09\xea\x5f\xa6\x03\xcd\xe0\x0b\x74\xf0\xa9\x06\xdc\x3a\xbe\xeb\xed\x77\xb6\x6f\x53\x79\x1e\xd0\x05\x29\x28\x8a\x13\x13\x12\x2b\xe1\x3c\xac\x15\xac\x7f\x47\xdb\xce\x34\xbd\x5e\xd6\xf6\x4d\xb2\xd6\x2f\x93\x84\x93\x61\xff\xac\x9d\x25\xd4\x47\xb5\x93\x85\x66\x75\xdd\x91\x33\x10\x4c\xd1\x41\xa9\x42\x7b\x1d\x07\x25\x0d\xc4\xa0\xa9\x95\xbf\x0d\x57\xbc\x1b\x68\xd5\x21\xb1\x95\x5a\xd4\x13\x00\xfd\x5a\x41\x63\xc4\xee\x74\xa1\x83\xda\x2c\xac\xbd\x88\x86\xfb\xd5\x35\x76\xb9\xb9\x2a\x8a\xcd\x46\xba\xb2\xc0\x84\x74\xc5\x5b\xd0\xbd\xfc\x9f\x51\x04\xbf\x62\xf9\xad\xfc\xe7\x3e\xb9\xd2\x17\x2f\x9d\x66\x42\x1f\xb6\xf4\xc3\xb3\xa7\xaf\x49\x62\x9a\x79\xd3\xbf\x61\x2e\x24\x38\x19\x82\x0b\xb8\x15\xcd\xcd\xb8\x3f\x97\xda\x97\x9e\x1d\x96\xe0\xfd\xcf\x67\x54\x9d\x19\xc1\xb7\x4b\x2e\x0e\xcb\xa9\x72\x28\x61\x11\xe4\x58\x2e\x63\x1c\xd8\xad\x7c\x7c\x6f\xee\xf4\x75\x79\x97\xde\x63\xa6\xa8\x98\x00\x3b\xdf\x60\xf6\x03\xe5\x4d\xfa\xcc\x45\x42\xb2\x07\xe2\x3b\xce\x3e\xbb\x0a\xb7\xfa\x61\x6a\x07\x16\x87\x2c\x8d\x96\x34\x95\x7b\xf1\x78\x27\xd2\x1a\xd2\xcb\x1d\x67\x65\x03\xd0\xe8\xc8\x37\x77\xab\x23\xa5\x37\x94\xad\xe9\xd5\x1d\x00\x75\xd9\xd0\xef\x9d\x08\xdc\x24\xe9\xa8\xe9\x5a\x3c\xb6\x35\x82\x9a\xcd\x6a\xf2\xe5\x41\xea\xb2\x88\x33\xd6\xa0\xc0\x5c\xf5\x98\x22\xc9\x21\xb1\xae\xee\x82\xa6\x7d\x98\x10\x60\x1e\xa4\xf1\x02\x71\x44\x03\x95\xe4\xff\xa0\x0f\xf9\x5e\xbf\xac\x61\x0a\x93\xfa\xf5\xaf\x09\x70\x3a\x7a\xdb\x45\x5f\xcd\xb1\xf6\xc3\x95\xf9\x1d\x8b\xe6\x5d\x37\x7c\xf6\x03\x97\xb7\x6a\x13\x75\x81\x4b\xd6\xff\x46\x89\x86\x5a\xa5\xd4\x41\x45\x43\xfd\xbd\xa6\x1d\xef\x3e\x99\x5f\xab\x54\xde\x7b\xca\x99\x66\xff\x7b\x41\xf6\xe6\xe2\xd4\x33\xff\x6f\xc1\xd4\xd3\xff\xbb\xc9\x7f\x07\x00\x00\xff\xff\x9f\xc0\xe9\xbd\xed\x44\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17645, mode: os.FileMode(420), modTime: time.Unix(1588121554, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

