// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\x7b\x77\xdb\x36\x96\xff\xdf\x9f\x02\x65\x26\x25\x55\x8b\xa4\x24\xdb\xe9\x44\x16\x95\x93\xda\x99\xd3\x74\xd2\x34\x75\x92\x99\xe9\x3a\xde\x1c\x88\x84\x44\xd8\x20\xc0\x02\xa0\x1e\x49\xfc\xdd\xf7\x00\x7c\x3f\x24\xcb\x79\xec\xcc\xae\xfe\x70\x28\xe0\xe2\xe2\xe2\xe2\xe2\x77\x1f\xa0\x32\xf9\xee\xfc\xb7\xb3\x37\x7f\xbc\x7a\x06\x42\x19\x91\xe9\xc1\x44\xfd\x03\x08\xa4\x0b\xcf\x40\xd4\x50\x0d\x08\x06\xd3\x03\x00\x26\x12\x4b\x82\xa6\xbf\x27\xd0\xbf\x41\xfc\x1a\xfa\x37\x60\x79\x34\x71\xd3\xd6\x03\x45\x10\x21\x09\x81\x1f\x42\x2e\x90\xf4\x8c\x44\xce\xed\xbf\x1a\xd3\xa2\x23\x94\x32\xb6\xd1\x9f\x09\x5e\x7a\xc6\xbf\xec\xb7\x4f\xed\x33\x16\xc5\x50\xe2\x19\x41\x06\xf0\x19\x95\x88\x4a\xcf\x78\xfe\xcc\x43\xc1\x02\x55\xc6\x51\x18\x21\xcf\x58\x62\xb4\x8a\x19\x97\x15\xd2\x15\x0e\x64\xe8\x05\x68\x89\x7d\x64\xeb\x2f\x7d\x80\x29\x96\x18\x12\x5b\xf8\x90\x20\x6f\x68\xa4\x82\x11\x4c\x6f\x00\x47\xc4\x33\x84\xdc\x10\x24\x42\x84\xa4\x01\x42\x8e\xe6\x9e\xa1\xc4\x12\x63\xd7\x15\x12\xfa\x37\x31\x94\xa1\x33\x63\x4c\x0a\xc9\x61\xec\x07\xd4\xf1\x59\xe4\x16\x0d\xee\xb1\x73\xec\x0c\x5d\x5f\x88\xb2\xcd\x89\x30\x75\x7c\x21\x52\x89\xbf\x70\xa6\x39\xa3\xd2\x86\x2b\x24\x58\x84\xdc\x63\xe7\x47\x67\xa0\x27\xab\x36\xd7\xe7\xd3\xb3\x00\xb9\x89\x91\x67\x48\xb4\x96\x6e\xde\x03\x40\x04\x31\x05\x1f\x41\x04\xf9\x02\x53\x5b\xb2\x78\x0c\x4e\x38\x8a\x4e\xc1\xad\xee\x7e\x80\xa9\xe4\x0c\x7c\x04\x01\x16\x31\x81\x9b\x31\x98\x11\xe6\xdf\x14\xdd\x31\x67\x3e\x12\x02\xd3\x45\x95\x86\x32\x8a\x0a\x12\x8e\xd4\x8e\xdc\xd5\xed\x28\x03\x42\xbc\x10\x65\x0c\x06\xf1\x1a\x0c\xd5\x9f\xfc\xe1\x14\xcc\x18\x0f\x10\xb7\x67\x4c\x4a\x16\x8d\xc1\x30\x5e\x03\xc1\x08\x0e\xc0\x83\xc7\x8f\x1f\xe7\x1c\x1d\x96\x48\x82\x29\x02\x1f\x33\xfa\x2a\xe1\x8c\x24\xc5\xd4\xce\x0c\x2f\x68\x12\x81\x8f\x20\x86\x41\x80\xe9\x62\x0c\x4e\x2a\xb3\x70\x18\xe0\x44\x64\x6d\x4a\x6b\x36\x24\x78\x41\xc7\xc0\x47\x54\x22\x7e\x5a\x08\x3a\x3c\xc9\x85\xcc\x1e\x9a\x13\x88\x18\x52\x27\x9d\x49\xef\x91\xc0\x1f\xd0\x18\x8c\x8e\x15\x65\xb7\x5e\x6b\x23\x03\x24\xfc\xfa\xd0\x54\x1b\x5a\x26\xc9\x21\x15\x73\xc6\xa3\x31\x48\xe2\x18\x71\x1f\x8a\x72\x81\x12\xce\xc4\xd6\x91\xb5\xd5\xd4\x46\x10\xdc\xd2\x89\x9f\x70\xc1\xf8\x18\xc4\x0c\xa7\x8b\x57\xf4\x13\x57\x1b\xd6\xf4\x60\xe2\xa6\xc7\x7f\x32\x63\xc1\x66\x7a\x70\x30\xa1\x70\x09\x7c\x02\x85\xf0\x0c\x0a\x97\x33\xc8\x41\xfa\x8f\x8d\xd6\x31\xa4\x81\x1d\x05\x79\x43\x00\xf9\x0d\x98\x2d\xd2\x7f\xe7\x78\x8d\x02\x65\x84\xa9\xd9\xc2\x3a\x0f\x7b\xc6\x21\x0d\xf2\x73\xf2\xc0\xa8\x82\xcc\xc4\x85\x7a\xc8\x2c\x91\x92\xd1\xc6\x38\xc9\x16\x0b\x82\xb8\x91\x9d\x80\x94\xc6\x00\x01\x94\x30\xeb\xf3\x0c\x9f\x11\x02\x63\x81\xf2\x66\xc8\x17\x0a\x9e\x1e\xa4\x2c\xc4\xb3\x35\x8c\x62\x82\xce\xd1\x1c\x26\x44\x1a\x00\x72\x0c\x6d\x85\x31\x9c\x91\x62\xa2\x6e\xaa\x74\xc9\x28\xf0\x8c\x39\x24\x6a\x02\xdd\x4a\xe0\x4c\x9d\xff\x37\x7a\x7a\xa5\x0c\xbc\x80\x12\x33\x9a\x1d\xcb\x89\xda\xf9\xee\x65\xd8\xd8\x57\x64\x13\x57\x91\xe8\x45\xbb\xe9\x8a\x52\x14\x0b\x70\xa1\xfa\x7c\x4d\xb9\xae\xcb\x35\xe2\x60\x9b\xcc\xd9\xf4\x09\x69\x4c\xae\x76\x34\xe2\x36\x4c\x24\xcb\x68\x34\x8e\x55\xa8\x6c\x2c\x51\x04\xa0\x2f\xf1\x12\x15\x24\x8d\x5d\xb4\x15\xf2\xe5\x3b\xe8\x1a\xd3\x97\x68\x05\x2e\x52\x00\xa8\xad\x58\x70\x9b\x51\xb2\x31\xa6\x96\x9f\x70\x8e\xa8\xec\x65\xcb\xcd\xf6\x59\x33\x76\x09\xde\x21\xc9\x5e\x22\x3c\x30\xa6\x93\x62\xe4\x1c\x82\x39\xb4\x17\x58\x86\xc9\xcc\x16\x7f\x26\x90\xe7\x9b\x15\xe2\x20\x40\xd4\x33\x24\x4f\x90\xd2\x3c\x9e\x82\x0b\x44\x10\x14\x48\xfc\xc7\x08\xf4\x9a\x25\xdc\x47\xdb\xc4\xf9\xce\xb6\x77\x6c\x5a\xc0\x59\x1c\xb0\x15\xdd\x29\x62\x41\x95\x19\x62\x29\xb2\x36\xa7\xbc\x77\x30\x6c\x9c\xac\x82\x79\x26\x3a\x14\x31\x8b\x93\x38\x13\xbe\xfb\x8c\x4c\xcf\xb3\x41\x95\xf5\xd4\x6d\xbb\x10\x26\x42\x34\xa9\x9e\x29\x82\x82\xd9\xa6\x26\x4e\xc9\xa0\xba\xac\x82\x81\xde\x9b\x52\xfd\x4f\x7d\x75\x0c\x6b\xf3\xee\x35\x8c\x32\x19\x22\xae\xed\xff\x33\x86\xbf\x66\x11\x92\xa1\x72\xa3\x88\x08\x04\x42\xc4\x51\x7d\xe9\x6e\x80\x97\x5d\x3b\x6b\xdb\xd9\x89\x75\x13\x92\x3d\xe5\x7b\x3d\x51\x6e\xa1\xb0\x25\xc6\x23\x1b\x53\xed\x18\xa3\x8d\x3d\x52\x7f\xc8\xc2\x1e\x94\x87\x19\xd3\x38\x91\x35\xf2\x0c\xdf\xd4\xb9\x17\x91\x3d\x32\x2a\x11\x84\x01\x62\x02\x7d\x14\x32\x12\x20\xee\x19\xaf\x11\xe4\x7e\x58\x87\xb6\xac\xad\xe0\x5f\x87\xe6\x99\xa4\x60\x26\xa9\x2d\x90\xcf\x68\x00\xf9\xa6\x90\x4a\x44\xf6\x20\x9f\x4a\x24\xb3\x08\x4b\x63\x9a\xf2\x2a\x81\x2e\x5d\xb1\x12\x32\x7d\x4e\xb5\x90\x29\x69\xe2\x52\xb8\x54\x5e\x48\xc7\x36\x9c\x29\x23\x54\x8f\x46\x89\x8b\x54\x42\x4c\x11\x37\x4a\xc8\x54\x26\xac\x63\x9d\x1c\x01\xb5\xf2\xd4\xa6\xb0\xc0\x33\x16\x2a\x3e\x4b\xb7\xd6\x33\xca\x25\x55\xec\x51\x2b\x6c\xc1\x59\x12\x57\x0f\x91\x56\x05\x98\x33\xee\x19\xcf\x95\x7a\xdf\x5e\xbc\x30\xa6\xcf\xb4\xc3\x85\xe0\x0f\x96\xbc\x49\x66\x08\xfc\x03\x07\x88\x81\xb7\x17\x2f\x26\xae\xa6\xaf\x8c\x4f\xf7\x24\xd5\x45\xc2\x89\xd1\xb5\x3d\xe9\xf1\x2b\xd8\xa7\x7b\xa0\x62\x06\x8e\x67\xe9\x59\x48\x38\xf9\x19\x91\xd8\x28\x82\xe4\xa0\x2a\xa3\x88\x20\x21\x9a\x47\x41\x57\x9d\x45\xed\x76\x1a\x30\x44\x89\x44\x81\x31\xcd\x1c\xc6\x18\xe4\x91\xea\x6a\xb5\x72\x36\x2c\x91\xc9\x0c\xe9\xf0\x74\x05\xa5\x1f\x3e\x59\x7a\xec\xe7\xc5\xc9\xeb\x5f\xfe\xb8\xf8\xf9\xe9\x60\xe2\xea\x59\x4a\x03\xae\x5a\x73\x66\x18\xb5\x1d\x6f\x9a\x49\xcc\x71\x04\xf9\xa6\x8d\x8e\x3e\x8b\x22\x44\xa5\xb0\xd9\x0e\x68\xf4\x21\x05\x32\x44\xe0\x2c\x23\xde\x66\x48\x99\x5c\x55\x9b\x28\x03\xdc\xdc\x30\x2a\x9b\x4e\x18\x0c\xca\x9e\x7a\x1f\x67\x2b\xa3\x1b\xba\x7c\x46\xec\x28\xb0\x8f\x94\x74\x15\x3d\x74\x12\x3d\xaa\xa3\x57\xe9\x96\x09\x16\x32\xb5\x37\x50\x3e\xda\x73\x92\x88\xb0\x36\xa4\x06\xf8\x15\xca\x14\x7f\xea\x2b\xb4\xfd\x10\xf9\x37\xb6\x32\xb4\x96\x9e\x53\xf7\xb3\x4b\xcb\x67\x6a\xb0\x42\xb0\x39\xe3\x60\x09\x55\xb4\xad\x6d\x1a\x4f\xab\x78\x75\x7f\x99\xd2\x3d\xb3\x7d\x96\x50\xf9\xc5\x72\xf9\x85\x05\x7c\x05\x91\x14\x90\x2b\x13\xf8\x1c\xa9\xce\xb3\xb1\x4a\xb0\xaf\x22\x14\x8a\xd8\x35\xfe\x1c\x49\x9e\x52\x48\x36\x1f\xb4\xeb\x51\x2c\xbe\x48\x08\x81\xa8\xc4\x6a\x2d\x5f\x26\x48\xc1\xa6\x29\x4c\xea\xe5\xaa\x0d\x95\x23\x13\x73\xb6\xe0\xa8\xc8\x6c\x77\x91\xd8\x2a\x25\xa9\x7e\xb1\x85\xe4\x38\x46\x41\xbd\x11\x52\x1c\x41\x05\x7a\x99\x17\xc9\x3b\x67\x90\x67\xcb\x58\x42\x92\x20\xca\x56\x9e\x71\x54\x6d\x89\x30\xf5\x8c\x41\xad\x05\xae\x3d\x63\x38\x18\x18\x40\xe7\x4c\x59\x5d\x62\x0c\x8e\x1e\xb6\x60\xa0\x81\x8f\x2d\xe7\x5f\x7c\x29\x1e\x3b\x70\x2b\x4d\xab\x3b\x30\x8b\xb3\x15\x48\x73\xed\x4e\xd8\xca\x70\x67\x38\xa8\x82\x57\x38\xca\xbb\x97\xca\x57\xbd\xd7\xd5\x9c\x34\x68\xc9\xbc\xd7\x1b\xd5\x32\x71\xc3\x51\x65\x54\x5c\xf0\x0c\x21\xa5\x88\xe4\xc3\x9e\x82\xb3\xb4\x61\xe2\xc6\xdd\x1e\xa1\x2d\xcf\xc8\x28\xb6\xbd\x4b\x01\xdb\xa1\xb7\x83\xd7\x71\x13\x97\xb3\x1d\x09\x11\x5e\x84\x72\x0c\x8e\x06\x2a\x49\xae\x03\xaf\x0f\xe9\x12\x0a\xad\x59\x3f\x84\x5c\xbe\x61\x12\x92\xd7\x85\xb5\x83\xb4\xca\x64\x1c\xab\x0d\x4e\xf9\x78\xc6\xd1\x60\xa0\xf6\x36\x1d\x7a\xf7\x6e\x76\xcb\x0a\x84\x84\x72\x97\x49\xd7\xfd\xcc\x56\x46\x8f\x80\x7a\x10\x51\xf6\xb0\x16\x0d\xd7\xd2\x1e\x98\x96\x20\x3a\x88\x9a\xd9\x69\x92\xe1\x80\x54\x3a\x79\x9f\x83\x99\x31\xb5\xed\x32\x47\xdd\xc9\x41\x05\x2b\xc6\x54\xab\xb4\xe2\xa2\xbb\x87\xb6\xce\xca\xf6\xc6\x7f\xa3\x12\x96\x18\xad\x3e\x57\x03\xff\x50\x63\xbf\x74\xf9\x5d\x4d\xff\x91\x46\x93\x9b\xcb\xfb\x18\xf1\xf7\x01\xdc\xdc\x5b\x69\xb9\xc1\x80\x57\x88\x83\x73\xb8\xf9\xbf\x6a\x38\x01\x16\x04\xdf\xa0\xf7\x1c\x4a\xcc\xee\xad\x85\xf3\x74\x34\xb8\x50\xa3\xbf\xaa\xf1\xdc\x89\x50\x77\xa0\xe9\xe8\x64\x1f\x34\x8d\x5f\x60\x51\xc2\xe8\x70\x30\x78\x58\xe2\xe8\xe8\xa4\xf4\x9a\x4d\xae\x77\xc0\xeb\x1e\x21\x73\xc8\x38\xfe\xa0\x12\x42\x02\x24\x9c\xd5\x91\x76\x7b\xe4\x03\xe6\x04\xad\xed\x39\x26\x04\x34\x7a\x8a\x54\x25\x2f\x24\xce\x3c\x63\xc5\x78\x20\xd4\xf9\x8e\xc1\x3f\xd5\x63\x2b\xac\xd9\x63\x9e\x2a\xbf\x2c\xd6\x53\xfc\x9e\xb5\x63\xb6\xb2\x14\xf0\x15\x9c\xe5\x70\xd4\xd6\x7d\xd3\x3f\xb6\xf6\xf3\x1c\x62\xb2\x69\x7b\xc7\xc6\xb6\x0e\x3a\xb6\x75\xd0\xbd\xad\x3b\x82\x9e\x89\xab\x72\xfb\x34\xf8\x51\x39\x6f\x2c\x81\xe0\x7e\x79\x8f\xe2\xb3\x00\x39\xd7\x7f\x26\x88\x6f\x74\x76\x9a\x3e\xda\x47\xce\x89\x33\xd0\xb7\x24\xd7\xc2\x00\x98\x4a\xb4\xe0\x58\x6e\x3c\x43\x84\x70\x74\xf2\xc8\x5e\xbf\xfc\xf0\x72\x04\x8f\x89\xbc\xf9\xe9\xf8\xf8\x57\xdf\xfd\xe5\xc3\x51\xfc\xe6\x18\xbf\x1d\xfa\x11\xba\x18\xfc\xed\xe6\x5f\xe2\x38\xe6\x89\xfb\xcb\x1a\xfe\xee\x19\xc0\xe7\x4c\x08\xc6\xf1\x42\xc5\x7d\x90\x32\xba\x89\x58\x22\x74\x91\x56\x8b\x34\xdd\x26\xdd\x3d\xee\x93\xae\xab\xd7\x49\xb3\x84\x06\x04\xe5\xf2\xdf\x3d\x8f\x1f\xd0\x6b\xe1\xf8\x84\x25\xc1\x9c\x40\x9e\x26\xea\xf0\x1a\xae\x5d\x82\x67\xc2\x3d\x53\xbb\xe6\x5c\x0b\x77\xe4\x3c\x76\x8e\xb2\xaf\x6d\xe6\x15\xee\x95\xcb\xa4\x6b\xb8\x84\x69\xab\xb6\x89\x25\x54\x69\x16\x61\x5c\x00\x0f\x7c\xd4\x7b\xc6\x51\x30\x06\x06\x5f\xcc\xac\xd1\xc9\x49\x1f\x3c\x7e\xdc\x07\xc3\xa3\x51\xcf\xe8\xeb\x5e\xc6\x21\x5d\xa0\x2a\xc1\xf0\xe4\x71\x1f\x3c\x3a\xce\x09\x36\x88\x10\xb6\xaa\x12\x8c\x06\x27\x7d\xf0\xd7\x47\x39\xc1\x82\x23\x44\xb3\xfe\x1f\xd5\xf8\xc7\x23\xfd\x27\xef\x9f\x91\x24\xe7\x7f\x72\xdc\x07\xc3\x47\xa3\x3e\x18\x1d\x9d\xe4\xdd\x71\xc2\x75\x41\x43\x13\x0c\x4f\x8e\xfa\x60\x38\x50\x14\x27\x27\x95\x09\x36\xf9\xfc\x83\xa1\x9a\xff\x48\xfd\xf9\xb1\x67\x1c\x00\x70\xab\xf4\x32\x4f\xa8\x2e\x0f\x81\x05\x92\x6f\x2f\x5e\xbc\x82\x1c\x46\x48\x22\x6e\x51\x18\xa1\x5e\xa1\x07\x99\x70\x0a\x02\xa4\x8c\xf2\xed\xc5\xf3\x33\x16\xc5\x8c\x22\x2a\x2d\x8b\xea\x4a\xf8\xe2\xd9\x3a\xb6\xcc\xcb\x27\x9f\xbe\xbf\x32\xc1\xa1\xae\xd7\x80\x43\x60\x7a\xea\x8b\x69\x5d\xfe\xf7\xf7\xa7\x57\x87\x4f\x7a\xd6\xf7\x9f\x1e\x7c\x3a\xfd\xf4\x97\x9e\xd9\x73\xd0\x1a\xf9\x16\x61\xbe\xbe\x3c\x70\x84\xae\x93\xf5\x3e\x7d\xba\xec\x1b\xc6\x55\xef\x72\x78\xe5\x70\xa4\x2b\x75\x96\xfb\xee\xd0\x5d\xf4\x81\xf9\x70\x34\x30\x7b\xbd\x4f\x9f\x68\x42\x48\x4b\xf8\x60\x69\x29\x94\xe9\x83\x20\xbd\x0e\x38\x87\x12\x36\x84\xd7\x04\xe0\x89\x46\x23\x30\xae\x11\x9e\xb6\xf8\x49\x9e\x50\x1f\x4a\x64\x09\xc9\xfb\x20\x82\xeb\x9c\x19\x9e\xab\x26\x87\x20\xba\x90\x21\x98\x56\xbb\x00\x10\x92\x03\x4f\xfd\x75\x44\x32\x53\x89\x19\x5d\x58\x83\x6c\xf8\x21\x30\x1c\xc7\x31\x4e\x35\xe9\xed\x41\x55\x32\x21\x79\x21\x81\xcf\xa8\x90\x40\x10\x84\x62\xe0\x01\x2b\xc2\x84\xe0\xb4\xd4\x28\x7a\xc0\x9b\xd6\x97\xa4\x74\xff\x8a\xb3\x08\x0b\x64\x71\x24\x18\x59\x22\x45\x23\x90\x7c\x83\x23\xc4\x12\x99\xb7\xf6\x41\x8d\x51\x2f\x9f\x6d\x85\x69\xc0\x56\x0e\xd3\x19\x3d\xf0\x8a\xf5\x5b\xf9\x9a\xd4\x99\x58\x62\xd5\xd5\x34\x0f\x73\x89\x03\xb3\x77\x9a\x2b\x65\x89\x83\x52\x0f\xd7\xbf\x2b\xa8\xb2\xcc\xf4\x12\xd6\xec\x39\x21\x0e\x90\x95\x11\x57\xba\xcb\x04\xdc\xec\x39\x22\x64\x2b\x45\x93\x11\x11\x24\x01\xf6\x19\x05\x5e\x17\x7d\x59\xf1\x01\xd8\x99\x43\xb3\xe0\x9d\xea\x6f\x23\x2f\xd0\x02\xad\x81\x07\x5c\x0d\x24\x4f\xc6\xef\xdc\x77\xae\xb5\x5a\xad\xde\x39\xbd\x27\x59\xcd\xef\x9d\xc2\x92\x77\x69\xd5\xef\xdd\x93\xa5\x77\x09\xed\x0f\x4f\xed\xff\x1a\xd8\x8f\xdf\xbf\xb3\xaf\x3e\x3e\xea\xdf\xba\x39\x57\x3c\xb7\xbe\x5b\xe2\xc0\x89\x14\xad\x95\x71\xef\x95\x0b\x06\x5a\x54\x87\xa3\x88\x2d\xd1\x99\xf2\x43\x96\x59\x29\x1d\x94\xe2\x65\x84\x30\x08\x4a\x2a\xe5\x6c\x44\x95\xe4\x2f\xb5\xa5\x02\xa7\x9a\xda\x9b\x3d\xc7\x57\xe3\xb4\x67\x32\xfb\xc0\x1c\x0d\x1e\x9a\xbd\x8e\x58\xab\xeb\xe3\x40\x29\xb9\x65\xd6\x0a\x00\xa6\xc2\x83\xbd\x19\xd4\x56\xd8\x55\x87\xb8\x87\x2c\x85\x0e\xf4\x2d\x2a\x5d\x20\x5e\x2a\xe1\x36\xbd\x4e\xf8\x2a\xfa\x4d\x4d\xa5\x8b\xf6\xdf\xa0\xe8\x62\x81\x07\xb5\xc3\xe0\x2c\x90\xfc\xe5\xf5\x6f\x2f\x2d\xed\xf8\xc6\xae\xab\x90\x91\x84\x4c\x48\x17\xc6\xf8\xc9\x52\x45\x28\x87\xea\x8c\xd5\x04\x70\x02\x46\x91\x55\x1c\x5a\x8e\x44\x5c\xb5\xc9\x4c\x21\x73\xeb\x3b\xd5\xe3\x3c\xe3\x9c\xf1\x76\x7f\x7a\xd4\x84\x44\xb1\xf2\x7b\x97\xdb\x4b\x98\x7d\xb0\xb3\x96\xd8\x6f\x17\xf5\xfa\xdd\x25\xb6\xab\x96\x04\x73\xc6\x2d\x25\x85\x3a\xb1\x83\x53\xb0\x06\x93\x54\xa0\x0c\x67\x4f\xc1\xfa\xf0\xb0\x4b\xf2\x6e\x98\x30\x0f\xf5\xe0\xcb\xf5\xd5\xa1\xd9\x80\x87\x9a\x62\xf6\x35\xa9\xc6\x90\x3d\x8d\xab\xfc\xdc\xc7\xcc\xac\xf5\xe1\xa8\xf7\xc3\x68\x70\x68\xee\x6f\x6d\xe5\x67\x8b\xdd\xe5\x4c\x3b\xa4\xbb\x3d\x68\x35\xdd\xeb\x54\xa8\xd0\xf8\xde\x82\x6e\x11\x73\x38\xd8\x1b\x88\x0a\x4e\x5f\x0f\x90\x4a\xe1\xaa\xc0\x24\x12\x5f\x29\xc2\x2c\x1d\x53\xf9\xd1\x5e\xda\x1a\x0e\x06\x83\x9e\x23\x43\x44\x2d\xab\xe2\xa2\xeb\x9f\x80\xc3\x55\xfa\xbe\x40\x7a\x4a\x3b\x36\xa2\xd5\xd6\xc2\xc0\xfc\x83\xe7\x56\x79\xa0\x81\xe7\x01\xf3\x25\x2b\x6a\xf1\x60\xce\x12\x1a\xe8\x3b\x03\x19\x62\x01\x62\x26\xa4\x63\xee\x7f\x78\xb6\x1d\xff\x6f\x7d\x90\x5a\x5e\xb0\xfc\xdc\xcb\x20\x8f\x3f\xc3\x1e\xb7\x5a\xe4\xf1\xbd\x0d\xf2\x9b\x98\xe4\x5d\xde\xb2\xfc\xdc\x36\x6d\xa8\xf6\xfd\xb6\xe1\x3e\xe6\x10\x13\xab\x15\xf3\x95\x1f\x65\x1f\x1a\xe0\x9e\x7f\x99\x91\x14\x3c\xee\x61\x25\xe5\x98\x6e\x33\xe9\x10\x35\x20\x7b\xc8\x99\xfb\xab\x2d\xa2\xa6\x3c\xee\x21\x67\x36\x60\x2f\x21\xef\x65\xc8\x8f\xee\x6d\xc8\x5b\x8c\xf8\xd1\x3d\x8d\xf8\xab\x1b\xf0\x3e\xc6\x9b\xc3\x5f\xe6\x8f\xca\xc4\xae\x04\xce\xa0\x92\xd3\xe5\xb6\xd9\xba\xd1\x78\x7e\x0e\x3c\x10\x30\x3f\x51\x5f\x54\x54\xf5\x8c\x20\xf5\xf8\xd3\xe6\x79\x60\x99\x1d\x03\xcc\x9e\xa2\x3a\x63\x54\xa2\xb5\xb4\xcc\x51\x50\x4a\x56\x4c\x51\x2f\x0b\xed\x31\x45\x7d\xc0\x3e\x53\x64\x95\xc4\xbd\xc4\xd7\x94\x9d\x4c\x33\xae\xae\x0b\x7e\x45\x12\x2a\x85\x35\x52\xae\xfc\x6d\xd5\x70\xe4\x54\x6e\xc4\xcc\x9e\xa3\xb9\xa8\x01\x4e\x3e\xd2\xd1\x57\x63\xad\xa4\x2d\xe7\x10\x3b\xb5\xdb\x31\x95\xe4\xc9\x88\x58\xe6\x04\x82\xfc\x1d\x44\x8a\x56\xcd\x97\x83\x9b\xaf\x5c\x64\x3c\x5c\xf3\xb0\x3e\x77\x76\xd1\xf6\xfc\xfc\xd0\x34\xa6\x5b\x3a\xb5\x7c\x87\xe6\xc4\x85\x53\xb3\x9d\x5b\xd6\x2f\x75\x6a\x2b\xd4\x06\x90\x97\xdf\x1d\xc9\x5e\xa8\x58\x1b\xbd\x4e\xf3\xf5\xde\x36\x56\xfa\x6a\xa4\x5b\x53\xfa\x2a\x51\x5f\x7f\xec\xc1\xad\x79\x71\x90\xb3\xfc\x15\xca\xd0\xe1\xca\x79\xa7\xdc\x33\x01\x9f\x2e\x17\xaf\x10\x3f\x87\x9b\x0e\x56\xb5\xd2\xfb\x36\x3e\xe5\x7e\xaa\x65\x64\xf5\x76\x01\x5c\xd0\xd1\xfb\x42\x77\xfd\xa0\x23\xb1\x43\xe3\xa1\x51\x33\xa9\x37\x2c\x06\xca\xf2\x44\xc5\x76\x25\x8b\x75\x61\x18\x78\xe0\xb7\xd9\x35\xf2\xa5\x73\x83\x36\x22\x9d\xf8\xef\x68\xa3\xeb\xc7\x3b\xc1\xc2\x11\xea\x68\x17\x3e\x08\xf6\xc1\xac\x3b\x56\xa9\x7e\xf0\x1c\xd4\xa7\xb8\x84\x57\x60\x0a\xea\x4d\xb3\xab\xbb\x19\x15\x95\x14\x7b\xd8\x15\x78\x54\x3f\x59\x34\xd6\x9e\x7a\xd6\x9e\x1a\xde\x67\xea\xbb\x67\x6e\x47\x9e\x9d\x8c\x06\x3b\x19\xdd\xde\xb1\x0d\x04\xfb\xc8\x1a\xa8\x20\xbc\x5e\x83\x91\x2c\xd6\xa5\xfa\xae\x1d\xd6\x1d\x67\xca\xf1\x7f\xc3\x3d\x2e\x27\xa9\xec\x72\xa5\xf1\x1b\xef\x73\x6d\xa6\x8e\xe9\xff\x3f\xed\x75\xd5\xbf\x00\x4f\x97\x17\x75\x45\xdd\xaa\xbb\xa8\x7e\x65\xc1\x72\x13\xa3\x31\x30\xcb\xcb\xa8\x9f\x20\x37\xfb\x45\xb7\xd2\xd6\xb8\xa6\x1f\xfd\xa6\xa0\x18\x17\xc8\xd1\xaf\xf4\x29\x6a\x81\xa4\x18\x83\xcb\xa6\x4a\x67\xd0\xbf\x59\x68\x54\x3b\x63\x84\xf1\x71\x2a\x98\x13\x22\x12\x23\x2e\x1c\x5d\xb7\xb7\xb2\x72\x66\x5a\xc4\x77\x38\x0a\x7a\x0e\x24\x71\x08\xad\x81\x73\xd2\x73\xf8\x62\x96\xa3\x72\xbf\xc9\x5d\xff\x72\x22\xe3\xdc\xe2\xd2\x4d\xfd\xcf\xf4\x3d\x98\x61\xb3\x37\x5d\x72\xbe\x3c\x27\x82\xb1\xb5\x56\x69\x61\x1d\x22\xd6\x57\xd5\x3d\xba\x2d\x4b\x22\xb7\x25\x3f\x16\xab\xf3\x22\xea\xfa\x8b\x20\xd6\x2f\x81\x3e\x15\x31\xf2\xa5\xbe\x36\x1d\x03\xfd\xf2\x71\x55\x10\x95\x1f\x32\x2a\xf0\x12\x8d\x81\xe4\x49\xad\x4f\xfb\xeb\x31\xf8\xa8\x5f\x8e\x1c\x03\xa3\xb8\xdd\x33\xfa\xe5\xaf\x3a\xd4\xa0\xaa\x2c\xca\x40\x16\x88\x06\xe3\x86\xb1\x17\x03\xb4\x08\xd5\x25\x55\xc7\xea\xdf\x2b\x89\xe6\xd8\xf5\xd3\x35\xea\xda\xeb\x9a\x10\x4d\xf5\x6a\x56\x2f\x94\x11\x35\xd9\xb5\x86\x36\x73\xa1\x26\xab\x05\xc7\xc1\x0b\x4c\xdb\x82\xdd\xc9\xa9\x1e\xba\x5e\xd5\x19\x6f\xbe\xe1\xb2\x5a\x1b\x9d\x7e\xe6\x8c\xca\xd7\xd9\xef\x64\xbe\xce\xaa\x9b\xdb\xd9\xb5\xec\x83\xae\xae\xfc\xe9\xb6\x84\x96\x3c\x5e\x49\x48\xfe\x33\x1d\x95\xec\x10\xec\xdf\x74\x27\x9f\x9d\xf4\x08\xfa\x61\x49\x8e\x83\x75\x1d\x76\xb3\x31\x32\xc4\xa2\x57\x4f\x60\xb6\x5c\x73\x57\x13\x90\xdb\x6a\xaa\x56\xe3\x54\x66\x2e\x7b\xb0\xd1\xee\x12\xce\xca\x04\x34\xe3\xa1\xb3\xb2\xfc\x12\xbc\x96\x16\x2a\x2f\xa3\x47\x78\xc0\xd4\xb8\xd0\x28\xd4\x54\x71\xd7\xd1\x00\x92\xc2\x27\xf0\x0a\x80\x39\xdd\x49\x9e\x23\xea\xe5\xe0\x4a\x3f\x57\x06\xee\x40\xa6\xad\x3c\x33\x44\x72\x34\x84\xe8\x70\x13\x78\xc0\x2c\x00\xc4\xdc\x3a\x30\x89\x03\x28\x2b\x57\x40\x35\x3f\x9b\x6b\x40\x17\x8d\xef\xa5\x01\xed\x87\x3f\x47\x03\x7a\x60\x43\x03\x15\xa7\xfe\x79\x3a\xd0\x0c\x3e\x43\x07\x1f\x6b\xc0\xad\xfd\xbb\x3e\x7e\xa7\xbb\x0e\x95\xeb\x02\x9d\x65\x82\x22\xcd\x4c\x5d\x62\xc5\x9d\x07\xb5\x2c\xf4\xef\x68\xd3\x19\xa6\xd7\x73\xd5\x5e\x1a\xac\xf5\xca\x20\xe1\x68\xd0\x3b\x6d\x47\x09\xf5\x51\xed\x60\xa1\x99\x32\x77\xc4\x0c\x04\x53\xb4\x57\xa8\xd0\x5e\xc7\x5e\x41\x03\x49\xd1\xd4\x78\xc5\x04\x96\x78\x59\xbe\x45\x6f\xd4\x21\xb1\x15\x5a\xd4\x03\x00\x7d\x47\xdf\x18\xb1\x3d\x5c\xe8\xa0\x4e\x17\xd6\x5e\x44\xc3\xfc\xea\x1a\xbb\x5c\x5f\x39\x71\x26\x78\x23\x5c\x99\x63\x42\xba\xfc\x2d\xe8\x5e\xfe\x4b\xb4\x80\x5f\xb0\xfc\x56\xfc\x73\x9f\x58\xe9\xb3\x97\x4e\x33\xa1\xf7\x5b\xfa\xfe\xd1\xd3\x97\x04\x31\xcd\xb8\xe9\x6f\x98\x0b\x09\x8e\x06\xe0\x1c\x6e\x44\xf3\x30\xee\x8e\xa5\x76\x85\x67\xfb\x05\x78\xff\xfb\x11\x55\x67\x44\xf0\xed\x82\x8b\xfd\x62\xaa\x1c\x4a\xd8\x02\x72\x2c\xc3\x08\xfb\x66\x2b\x1e\xdf\x19\x3b\x7d\x59\xdc\xa5\xcf\x58\x9a\x54\x8c\x81\x99\x1f\x30\xf3\x2b\xc5\x4d\xba\xe6\x22\x21\xd9\x01\xf1\x1d\x05\xcd\xae\xc4\xad\x5e\x21\xed\xc0\xe2\x80\x25\x8b\x90\x26\x72\x27\x1e\x6f\x45\xda\x94\xf4\x52\x9f\xe5\x62\x9e\x02\xbe\xfa\xa0\xd1\x91\x1f\xee\x56\x47\x42\x6f\x28\x5b\xd1\xab\x3b\x00\xea\xb2\xa1\xdf\x3b\x11\xb8\x49\xd2\x91\xd3\xb5\x78\x6c\x6a\x04\xb5\x3d\xab\xc9\x97\x3b\xa9\xcb\xc2\xcf\x18\xfd\x02\x73\xd5\x63\x82\x24\x87\xc4\xb8\xba\x0b\x9a\x76\x61\x82\x8f\xb9\x9f\x44\x73\xc4\x11\xf5\x55\x90\xff\x83\x2e\xf2\xbd\x7a\x5e\xc3\x14\x26\xf5\xbb\x54\x63\x60\x77\xf4\xb6\x93\xbe\x9a\x61\xed\x86\xab\xf4\xe7\x24\x9a\x77\x7d\xe3\xb3\xdf\x99\xbc\x56\x87\xa8\x0b\x5c\xb2\xfe\x0b\x25\x1a\x6a\xa5\x52\x7b\x25\x0d\xf5\x97\x84\xb6\xbc\x48\x94\xfe\x68\xa4\xf2\x12\x51\xce\x34\xfb\xb5\x7f\xf6\x1a\xe0\xc4\x4d\x7f\xe7\x3f\x71\xf5\xff\x06\xf2\x3f\x01\x00\x00\xff\xff\xa2\xfc\xef\xba\x1d\x44\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17437, mode: os.FileMode(420), modTime: time.Unix(1588056629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

