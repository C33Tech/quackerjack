// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\x7b\x77\xdb\x36\x96\xff\xdf\x9f\x02\x65\x26\x25\x55\x8b\xa4\x24\xdb\xe9\x44\x16\x95\x93\xda\x99\xd3\x74\xd2\x34\x75\x92\x9d\xe9\x3a\xde\x1c\x88\x84\x28\xd8\x20\xc0\x02\xa0\x1e\x49\xfc\xdd\xf7\x00\x7c\x3f\x24\xcb\x79\xec\xcc\x8e\xfe\x70\x28\xe0\xe2\xe2\xe2\xe2\xe2\x77\x1f\xa0\x32\xf9\xee\xfc\xb7\xb3\x37\x7f\xbc\x7a\x06\x16\x32\x22\xd3\x83\x89\xfa\x07\x10\x48\x43\xcf\x40\xd4\x50\x0d\x08\x06\xd3\x03\x00\x26\x12\x4b\x82\xa6\xbf\x27\xd0\xbf\x41\xfc\x1a\xfa\x37\x60\x79\x34\x71\xd3\xd6\x03\x45\x10\x21\x09\x81\xbf\x80\x5c\x20\xe9\x19\x89\x9c\xdb\x7f\x35\xa6\x45\xc7\x42\xca\xd8\x46\x7f\x26\x78\xe9\x19\xff\xb4\xdf\x3e\xb5\xcf\x58\x14\x43\x89\x67\x04\x19\xc0\x67\x54\x22\x2a\x3d\xe3\xf9\x33\x0f\x05\x21\xaa\x8c\xa3\x30\x42\x9e\xb1\xc4\x68\x15\x33\x2e\x2b\xa4\x2b\x1c\xc8\x85\x17\xa0\x25\xf6\x91\xad\xbf\xf4\x01\xa6\x58\x62\x48\x6c\xe1\x43\x82\xbc\xa1\x91\x0a\x46\x30\xbd\x01\x1c\x11\xcf\x10\x72\x43\x90\x58\x20\x24\x0d\xb0\xe0\x68\xee\x19\x4a\x2c\x31\x76\x5d\x21\xa1\x7f\x13\x43\xb9\x70\x66\x8c\x49\x21\x39\x8c\xfd\x80\x3a\x3e\x8b\xdc\xa2\xc1\x3d\x76\x8e\x9d\xa1\xeb\x0b\x51\xb6\x39\x11\xa6\x8e\x2f\x44\x2a\xf1\x17\xce\x34\x67\x54\xda\x70\x85\x04\x8b\x90\x7b\xec\xfc\xe8\x0c\xf4\x64\xd5\xe6\xfa\x7c\x7a\x16\x20\x37\x31\xf2\x0c\x89\xd6\xd2\xcd\x7b\x00\x88\x20\xa6\xe0\x23\x88\x20\x0f\x31\xb5\x25\x8b\xc7\xe0\x84\xa3\xe8\x14\xdc\xea\xee\x07\x98\x4a\xce\xc0\x47\x10\x60\x11\x13\xb8\x19\x83\x19\x61\xfe\x4d\xd1\x1d\x73\xe6\x23\x21\x30\x0d\xab\x34\x94\x51\x54\x90\x70\xa4\x76\xe4\xae\x6e\x47\x19\x10\xe2\x85\x28\x63\x30\x88\xd7\x60\xa8\xfe\xe4\x0f\xa7\x60\xc6\x78\x80\xb8\x3d\x63\x52\xb2\x68\x0c\x86\xf1\x1a\x08\x46\x70\x00\x1e\x3c\x7e\xfc\x38\xe7\xe8\xb0\x44\x12\x4c\x11\xf8\x98\xd1\x57\x09\x67\x24\x29\xa6\x76\x66\x38\xa4\x49\x04\x3e\x82\x18\x06\x01\xa6\xe1\x18\x9c\x54\x66\xe1\x30\xc0\x89\xc8\xda\x94\xd6\x6c\x48\x70\x48\xc7\xc0\x47\x54\x22\x7e\x5a\x08\x3a\x3c\xc9\x85\xcc\x1e\x9a\x13\x88\x18\x52\x27\x9d\x49\xef\x91\xc0\x1f\xd0\x18\x8c\x8e\x15\x65\xb7\x5e\x6b\x23\x03\x24\xfc\xfa\xd0\x54\x1b\x5a\x26\xc9\x21\x15\x73\xc6\xa3\x31\x48\xe2\x18\x71\x1f\x8a\x72\x81\x12\xce\xc4\xd6\x91\xb5\xd5\xd4\x46\x10\xdc\xd2\x89\x9f\x70\xc1\xf8\x18\xc4\x0c\xa7\x8b\x57\xf4\x13\x57\x1b\xd6\xf4\x60\xe2\xa6\xc7\x7f\x32\x63\xc1\x66\x7a\x70\x30\xa1\x70\x09\x7c\x02\x85\xf0\x0c\x0a\x97\x33\xc8\x41\xfa\x8f\x8d\xd6\x31\xa4\x81\x1d\x05\x79\x43\x00\xf9\x0d\x98\x85\xe9\xbf\x73\xbc\x46\x81\x32\xc2\xd4\x6c\x61\x9d\x87\x3d\xe3\x90\x06\xf9\x39\x79\x60\x54\x41\x66\xe2\x42\x3d\x64\x96\x48\xc9\x68\x63\x9c\x64\x61\x48\x10\x37\xb2\x13\x90\xd2\x18\x20\x80\x12\x66\x7d\x9e\xe1\x33\x42\x60\x2c\x50\xde\x0c\x79\xa8\xe0\xe9\x41\xca\x42\x3c\x5b\xc3\x28\x26\xe8\x1c\xcd\x61\x42\xa4\x01\x20\xc7\xd0\x56\x18\xc3\x19\x29\x26\xea\xa6\x4a\x97\x8c\x02\xcf\x98\x43\xa2\x26\xd0\xad\x04\xce\xd4\xf9\x7f\xa3\xa7\x57\xca\xc0\x21\x94\x98\xd1\xec\x58\x4e\xd4\xce\x77\x2f\xc3\xc6\xbe\x22\x9b\xb8\x8a\x44\x2f\xda\x4d\x57\x94\xa2\x58\x80\x0b\xd5\xe7\x6b\xca\x75\x5d\xae\x11\x07\xdb\x64\xce\xa6\x4f\x48\x63\x72\xb5\xa3\x11\xb7\x61\x22\x59\x46\xa3\x71\xac\x42\x65\x63\x89\x22\x00\x7d\x89\x97\xa8\x20\x69\xec\xa2\xad\x90\x2f\xdf\x41\xd7\x98\xbe\x44\x2b\x70\x91\x02\x40\x6d\xc5\x82\xdb\x8c\x92\x8d\x31\xb5\xfc\x84\x73\x44\x65\x2f\x5b\x6e\xb6\xcf\x9a\xb1\x4b\xf0\x0e\x49\xf6\x12\xe1\x81\x31\x9d\x14\x23\xe7\x10\xcc\xa1\x1d\x62\xb9\x48\x66\xb6\xf8\x33\x81\x3c\xdf\xac\x05\x0e\x02\x44\x3d\x43\xf2\x04\x29\xcd\xe3\x29\xb8\x40\x04\x41\x81\xc4\xbf\x8d\x40\xaf\x59\xc2\x7d\xb4\x4d\x9c\xef\x6c\x7b\xc7\xa6\x05\x9c\xc5\x01\x5b\xd1\x9d\x22\x16\x54\x99\x21\x96\x22\x6b\x73\xca\x7b\x07\xc3\xc6\xc9\x2a\x98\x67\xa2\x43\x11\xb3\x38\x89\x33\xe1\xbb\xcf\xc8\xf4\x3c\x1b\x54\x59\x4f\xdd\xb6\x0b\x61\x22\x44\x93\xea\x99\x22\x28\x98\x6d\x6a\xe2\x94\x0c\xaa\xcb\x2a\x18\xe8\xbd\x29\xd5\xff\xd4\x57\xc7\xb0\x36\xef\x5e\xc3\x28\x93\x0b\xc4\xb5\xfd\x7f\xc6\xf0\xd7\x2c\x42\x72\xa1\xdc\x28\x22\x02\x81\x05\xe2\xa8\xbe\x74\x37\xc0\xcb\xae\x9d\xb5\xed\xec\xc4\xba\x09\xc9\x9e\xf2\xbd\x9e\x28\xb7\x50\xd8\x12\xe3\x91\x8d\xa9\x76\x8c\xd1\xc6\x1e\xa9\x3f\x24\xb4\x07\xe5\x61\xc6\x34\x4e\x64\x8d\x3c\xc3\x37\x75\xee\x45\x64\x8f\x8c\x4a\x04\x61\x80\x98\x40\x1f\x2d\x18\x09\x10\xf7\x8c\xd7\x08\x72\x7f\x51\x87\xb6\xac\xad\xe0\x5f\x87\xe6\x99\xa4\x60\x26\xa9\x2d\x90\xcf\x68\x00\xf9\xa6\x90\x4a\x44\xf6\x20\x9f\x4a\x24\xb3\x08\x4b\x63\x9a\xf2\x2a\x81\x2e\x5d\xb1\x12\x32\x7d\x4e\xb5\x90\x29\x69\xe2\x52\xb8\x54\x5e\x48\xc7\x36\x9c\x29\x23\x54\x8f\x46\x89\x8b\x54\x42\x4c\x11\x37\x4a\xc8\x54\x26\xac\x63\x9d\x1c\x01\xb5\xf2\xd4\xa6\xb0\xc0\x33\x42\x15\x9f\xa5\x5b\xeb\x19\xe5\x92\x2a\xf6\xa8\x15\x16\x72\x96\xc4\xd5\x43\xa4\x55\x01\xe6\x8c\x7b\xc6\x73\xa5\xde\xb7\x17\x2f\x8c\xe9\x33\xed\x70\x21\xf8\x83\x25\x6f\x92\x19\x02\xff\x85\x03\xc4\xc0\xdb\x8b\x17\x13\x57\xd3\x57\xc6\xa7\x7b\x92\xea\x22\xe1\xc4\xe8\xda\x9e\xf4\xf8\x15\xec\xd3\x3d\x50\x31\x03\xc7\xb3\xf4\x2c\x24\x9c\xfc\x8c\x48\x6c\x14\x41\x72\x50\x95\x51\x44\x90\x10\xcd\xa3\xa0\xab\xce\xa2\x76\x3b\x0d\x18\xa2\x44\xa2\xc0\x98\x66\x0e\x63\x0c\xf2\x48\x75\xb5\x5a\x39\x1b\x96\xc8\x64\x86\x74\x78\xba\x82\xd2\x5f\x3c\x59\x7a\xec\xe7\xf0\xe4\xf5\x2f\x7f\x5c\xfc\xfc\x74\x30\x71\xf5\x2c\xa5\x01\x57\xad\x39\x33\x8c\xda\x8e\x37\xcd\x24\xe6\x38\x82\x7c\xd3\x46\x47\x9f\x45\x11\xa2\x52\xd8\x6c\x07\x34\xfa\x90\x02\xb9\x40\xe0\x2c\x23\xde\x66\x48\x99\x5c\x55\x9b\x28\x03\xdc\xdc\x30\x2a\x9b\x4e\x18\x0c\xca\x9e\x7a\x1f\x67\x2b\xa3\x1b\xba\x7c\x46\xec\x28\xb0\x8f\x94\x74\x15\x3d\x74\x12\x3d\xaa\xa3\x57\xe9\x96\x09\x16\x32\xb5\x37\x50\x3e\xda\x73\x92\x88\x45\x6d\x48\x0d\xf0\x2b\x94\x29\xfe\xd4\x57\x68\xfb\x0b\xe4\xdf\xd8\xca\xd0\x5a\x7a\x4e\xdd\xcf\x2e\x2d\x9f\xa9\xc1\x0a\xc1\xe6\x8c\x83\x25\x54\xd1\xb6\xb6\x69\x3c\xad\xe2\xd5\xfd\x65\x4a\xf7\xcc\xf6\x59\x42\xe5\x17\xcb\xe5\x17\x16\xf0\x15\x44\x52\x40\xae\x4c\xe0\x73\xa4\x3a\xcf\xc6\x2a\xc1\xbe\x8a\x50\x28\x62\xd7\xf8\x73\x24\x79\x4a\x21\xd9\x7c\xd0\xae\x47\xb1\xf8\x22\x21\x04\xa2\x12\xab\xb5\x7c\x99\x20\x05\x9b\xa6\x30\xa9\x97\xab\x36\x54\x8e\x4c\xcc\x59\xc8\x51\x91\xd9\xee\x22\xb1\x55\x4a\x52\xfd\x62\x0b\xc9\x71\x8c\x82\x7a\x23\xa4\x38\x82\x0a\xf4\x32\x2f\x92\x77\xce\x20\xcf\x96\xb1\x84\x24\x41\x94\xad\x3c\xe3\xa8\xda\x12\x61\xea\x19\x83\x5a\x0b\x5c\x7b\xc6\x70\x30\x30\x80\xce\x99\xb2\xba\xc4\x18\x1c\x3d\x6c\xc1\x40\x03\x1f\x5b\xce\xbf\xf8\x52\x3c\x76\xe0\x56\x9a\x56\x77\x60\x16\x67\x2b\x90\xe6\xda\x9d\xb0\x95\xe1\xce\x70\x50\x05\xaf\xc5\x28\xef\x5e\x2a\x5f\xf5\x5e\x57\x73\xd2\xa0\x25\xf3\x5e\x6f\x54\xcb\xc4\x5d\x8c\x2a\xa3\xe2\x82\xe7\x02\x52\x8a\x48\x3e\xec\x29\x38\x4b\x1b\x26\x6e\xdc\xed\x11\xda\xf2\x8c\x8c\x62\xdb\xbb\x14\xb0\x1d\x7a\x3b\x78\x1d\x37\x71\x39\xdb\x91\x05\xc2\xe1\x42\x8e\xc1\xd1\x40\x25\xc9\x75\xe0\xf5\x21\x5d\x42\xa1\x35\xeb\x2f\x20\x97\x6f\x98\x84\xe4\x75\x61\xed\x20\xad\x32\x19\xc7\x6a\x83\x53\x3e\x9e\x71\x34\x18\xa8\xbd\x4d\x87\xde\xbd\x9b\xdd\xb2\x02\x21\xa1\xdc\x65\xd2\x75\x3f\xb3\x95\xd1\x23\xa0\x1e\x44\x94\x3d\xac\x45\xc3\xb5\xb4\x07\xa6\x25\x88\x0e\xa2\x66\x76\x9a\x64\x38\x20\x95\x4e\xde\xe7\x60\x66\x4c\x6d\xbb\xcc\x51\x77\x72\x50\xc1\x8a\x31\xd5\x2a\xad\xb8\xe8\xee\xa1\xad\xb3\xb2\xbd\xf1\x5f\xa2\x84\x98\x09\xac\x32\xe0\xf7\x88\x86\x30\x44\x9f\xa7\x8a\x57\x19\x93\x2f\x55\x42\x57\xd3\xbf\xa5\xe9\xe4\x46\xf3\x3e\x46\xfc\x7d\x00\x37\xf7\xd6\x58\x6e\x36\xe0\x15\xe2\xe0\x1c\x6e\xfe\xbf\x9a\x4f\x80\x05\xc1\x37\xe8\x3d\x87\x12\xb3\x7b\x6b\xe1\x3c\x1d\x0d\x2e\xd4\xe8\xaf\x6a\x3c\x77\xe2\xd4\x1d\x98\x3a\x3a\xd9\x07\x53\xe3\x17\x58\x94\x60\x3a\x1c\x0c\x1e\x96\x68\x3a\x3a\x29\x7d\x67\x93\xeb\x1d\x20\xbb\x47\xe0\xbc\x60\x1c\x7f\x50\x69\x21\x01\x12\xce\xea\x78\xbb\x3d\xfe\x01\x73\x82\xd6\xf6\x1c\x13\x02\x1a\x3d\x45\xc2\x92\x97\x13\x67\x9e\xb1\x62\x3c\x10\x0a\xe7\x62\xf0\x0f\xf5\xd8\x0a\x6e\xf6\x98\xa7\xca\x2f\x8b\xf8\x14\xbf\x67\xed\xc8\xad\x2c\x08\x7c\x05\x97\x39\x1c\xb5\x75\xdf\xf4\x92\xad\xfd\x3c\x87\x98\x6c\xda\x3e\xb2\xb1\xad\x83\x8e\x6d\x1d\x74\x6f\xeb\x8e\xd0\x67\xe2\xaa\x0c\x3f\x0d\x81\x54\xe6\x1b\x4b\x20\xb8\x5f\xde\xa6\xf8\x2c\x40\xce\xf5\x9f\x09\xe2\x1b\x9d\xa3\xa6\x8f\xf6\x91\x73\xe2\x0c\xf4\x5d\xc9\xb5\x30\x00\xa6\x12\x85\x1c\xcb\x8d\x67\x88\x05\x1c\x9d\x3c\xb2\xd7\x2f\x3f\xbc\x1c\xc1\x63\x22\x6f\x7e\x3a\x3e\xfe\xd5\x77\x7f\xf9\x70\x14\xbf\x39\xc6\x6f\x87\x7e\x84\x2e\x06\x7f\xbb\xf9\xa7\x38\x8e\x79\xe2\xfe\xb2\x86\xbf\x7b\x06\xf0\x39\x13\x82\x71\x1c\xaa\xe8\x0f\x52\x46\x37\x11\x4b\x84\x2e\xd5\x6a\x91\xa6\xdb\xa4\xbb\xc7\xad\xd2\x75\xf5\x52\x69\x96\xd0\x80\xa0\x5c\xfe\xbb\xe7\xf1\x03\x7a\x2d\x1c\x9f\xb0\x24\x98\x13\xc8\xd3\x74\x1d\x5e\xc3\xb5\x4b\xf0\x4c\xb8\x67\x6a\xd7\x9c\x6b\xe1\x8e\x9c\xc7\xce\x51\xf6\xb5\xcd\xbc\xc2\xbd\x72\xa5\x74\x0d\x97\x30\x6d\xd5\x36\xb1\x84\x2a\xd9\x22\x8c\x0b\xe0\x81\x8f\x7a\xcf\x38\x0a\xc6\xc0\xe0\xe1\xcc\x1a\x9d\x9c\xf4\xc1\xe3\xc7\x7d\x30\x3c\x1a\xf5\x8c\xbe\xee\x65\x1c\xd2\x10\x55\x09\x86\x27\x8f\xfb\xe0\xd1\x71\x4e\xb0\x41\x84\xb0\x55\x95\x60\x34\x38\xe9\x83\xbf\x3e\xca\x09\x42\x8e\x10\xcd\xfa\x7f\x54\xe3\x1f\x8f\xf4\x9f\xbc\x7f\x46\x92\x9c\xff\xc9\x71\x1f\x0c\x1f\x8d\xfa\x60\x74\x74\x92\x77\xc7\x09\xd7\x65\x0d\x4d\x30\x3c\x39\xea\x83\xe1\x40\x51\x9c\x9c\x54\x26\xd8\xe4\xf3\x0f\x86\x6a\xfe\x23\xf5\xe7\xc7\x9e\x71\x00\xc0\xad\xd2\xcb\x3c\xa1\xba\x48\x04\x42\x24\xdf\x5e\xbc\x78\x05\x39\x8c\x90\x44\xdc\xa2\x30\x42\xbd\x42\x0f\x32\xe1\x14\x04\x48\x19\xe5\xdb\x8b\xe7\x67\x2c\x8a\x19\x45\x54\x5a\x16\xd5\xf5\xf0\xf0\xd9\x3a\xb6\xcc\xcb\x27\x9f\xbe\xbf\x32\xc1\xa1\xae\xda\x80\x43\x60\x7a\xea\x8b\x69\x5d\xfe\xcf\xf7\xa7\x57\x87\x4f\x7a\xd6\xf7\x9f\x1e\x7c\x3a\xfd\xf4\x97\x9e\xd9\x73\xd0\x1a\xf9\x16\x61\xbe\xbe\x42\x70\x84\xae\x96\xf5\x3e\x7d\xba\xec\x1b\xc6\x55\xef\x72\x78\xe5\x70\xa4\xeb\x75\x96\xfb\xee\xd0\x0d\xfb\xc0\x7c\x38\x1a\x98\xbd\xde\xa7\x4f\x34\x21\xa4\x25\x7c\xb0\xb4\x14\xca\xf4\x41\x90\x5e\x0a\x9c\x43\x09\x1b\xc2\x6b\x02\xf0\x44\xa3\x11\x18\xd7\x08\x4f\x5b\xfc\x24\x4f\xa8\x0f\x25\xb2\x84\xe4\x7d\x10\xc1\x75\xce\x0c\xcf\x55\x93\x43\x10\x0d\xe5\x02\x4c\xab\x5d\x00\x08\xc9\x81\xa7\xfe\x3a\x22\x99\xa9\xf4\x8c\x86\xd6\x20\x1b\x7e\x08\x0c\xc7\x71\x8c\x53\x4d\x7a\x7b\x50\x95\x4c\x48\x5e\x48\xe0\x33\x2a\x24\x10\x04\xa1\x18\x78\xc0\x8a\x30\x21\x38\x2d\x38\x8a\x1e\xf0\xa6\xf5\x25\x29\xdd\xbf\xe2\x2c\xc2\x02\x59\x1c\x09\x46\x96\x48\xd1\x08\x24\xdf\xe0\x08\xb1\x44\xe6\xad\x7d\x50\x63\xd4\xcb\x67\x5b\x61\x1a\xb0\x95\xc3\x74\x5e\x0f\xbc\x62\xfd\x56\xbe\x26\x75\x26\x96\x58\x75\x35\xcd\xc3\x5c\xe2\xc0\xec\x9d\xe6\x4a\x59\xe2\xa0\xd4\xc3\xf5\xef\x0a\xaa\x2c\x33\xbd\x8a\x35\x7b\xce\x02\x07\xc8\xca\x88\x2b\xdd\x65\x1a\x6e\xf6\x1c\xb1\x60\x2b\x45\x93\x11\x11\x24\x01\xf6\x19\x05\x5e\x17\x7d\x59\xf7\x01\xd8\x99\x43\xb3\xe0\x9d\xea\x6f\x23\x2f\x50\x88\xd6\xc0\x03\xae\x06\x92\x27\xe3\x77\xee\x3b\xd7\x5a\xad\x56\xef\x9c\xde\x93\xac\xf2\xf7\x4e\x61\xc9\xbb\xb4\xf6\xf7\xee\xc9\xd2\xbb\x84\xf6\x87\xa7\xf6\x7f\x0f\xec\xc7\xef\xdf\xd9\x57\x1f\x1f\xf5\x6f\xdd\x9c\x2b\x9e\x5b\xdf\x2d\x71\xe0\x44\x8a\xd6\xca\xb8\xf7\xca\x05\x03\x2d\xaa\xc3\x51\xc4\x96\xe8\x4c\xf9\x21\xcb\xac\x14\x10\x4a\xf1\x32\x42\x18\x04\x25\x95\x72\x36\xa2\x4a\xf2\x97\xda\x52\x81\x53\x4d\xf0\xcd\x9e\xe3\xab\x71\xda\x33\x99\x7d\x60\x8e\x06\x0f\xcd\x5e\x47\xac\xd5\xf5\x71\xa0\x94\xdc\x32\x6b\x65\x00\x53\xe1\xc1\xde\x0c\x6a\x2b\xec\xaa\x46\xdc\x43\x96\x42\x07\xfa\x2e\x95\x86\x88\x97\x4a\xb8\x4d\x2f\x15\xbe\x8a\x7e\x53\x53\xe9\xa2\xfd\x17\x28\xba\x58\xe0\x41\xed\x30\x38\x21\x92\xbf\xbc\xfe\xed\xa5\x65\xb8\x30\xc6\x4f\x96\x2a\x22\x39\x54\x67\xaa\x36\xa1\x13\x30\x8a\xac\xe2\x90\x72\x24\xe2\xaa\x0d\x66\x0a\x98\x5b\xdf\xa9\x1e\xe7\x19\xe7\x8c\xb7\xfb\xd3\xa3\x25\x24\x8a\x95\x9f\xbb\xdc\x5e\xb8\xec\x83\x9d\x15\xc4\x7e\xbb\x94\xd7\xef\x2e\xac\x5d\xb5\x24\x98\x33\x6e\x29\x29\xd4\x09\x1d\x9c\x82\x35\x98\xa4\x02\x65\xb8\x7a\x0a\xd6\x87\x87\x5d\x92\x77\xc3\x82\x79\xa8\x07\x5f\xae\xaf\x0e\xcd\x06\x1c\xd4\x14\xb3\xaf\x09\x35\x86\xec\x69\x4c\xe5\xe7\x3e\x66\x65\xad\x0f\x47\xbd\x1f\x46\x83\x43\x73\x7f\xeb\x2a\x3f\x5b\xec\x2c\x67\xda\x21\xdd\xed\x41\xab\xe9\x5e\xa7\x40\x85\xc2\xf7\x16\x74\x8b\x98\xc3\xc1\xde\xc0\x53\x70\xfa\x7a\x00\x54\x0a\x57\x05\x22\x91\xf8\x4a\x11\x66\xe9\x88\xca\x8f\xf6\xca\xd6\x70\x30\x18\xf4\x1c\xb9\x40\xd4\xb2\x2a\x2e\xb9\xfe\x09\x38\x5c\xa5\x6f\x09\xa4\xa7\xb4\x63\x23\x5a\x6d\x2d\xcc\xcb\x3f\x78\x6e\x95\x07\x1a\x78\x1e\x30\x5f\xb2\xa2\x02\x0f\xe6\x2c\xa1\x81\xbe\x29\x90\x0b\x2c\x40\xcc\x84\x74\xcc\xfd\x0f\xcf\xb6\xe3\xff\xad\x0f\x52\xcb\xeb\x95\x9f\x7b\x19\xe4\xf1\x67\xd8\xe3\x56\x8b\x3c\xbe\xb7\x41\x7e\x13\x93\xbc\xcb\x3b\x96\x9f\xdb\xa6\x0d\xd5\xbe\xdf\x36\xdc\xc7\x1c\x62\x62\xb5\x62\xbc\xf2\xa3\xec\x43\x03\xdc\xf3\x2f\x33\x92\x82\xc7\x3d\xac\xa4\x1c\xd3\x6d\x26\x1d\xa2\x06\x64\x0f\x39\x73\x7f\xb5\x45\xd4\x94\xc7\x3d\xe4\xcc\x06\xec\x25\xe4\xbd\x0c\xf9\xd1\xbd\x0d\x79\x8b\x11\x3f\xba\xa7\x11\x7f\x75\x03\xde\xc7\x78\x73\xf8\xcb\xfc\x51\x99\xc8\x95\xc0\x19\x54\x72\xb8\xdc\x36\x5b\xf7\x18\xcf\xcf\x81\x07\x02\xe6\x27\xea\x8b\x8a\xa2\x9e\x11\x5d\xc1\xfe\x69\xf3\x3c\xb0\xcc\x8e\x01\x66\x4f\x51\x9d\x31\x2a\xd1\x5a\x5a\xe6\x28\x28\x25\x2b\xa6\xa8\x97\x81\xf6\x98\xa2\x3e\x60\x9f\x29\xb2\xca\xe1\x5e\xe2\x6b\xca\x4e\xa6\x19\x57\xd7\x05\xbf\x22\x09\x95\xc2\x1a\x29\x56\xfe\x8e\xea\x62\xe4\x54\xee\xc1\xcc\x9e\xa3\xb9\xa8\x01\x4e\x3e\xd2\xd1\x17\x62\xad\x24\x2d\xe7\x10\x3b\xb5\x3b\x31\x95\xd4\xc9\x88\x58\xe6\x04\x82\xfc\xcd\x43\x8a\x56\xcd\x57\x82\x9b\x2f\x5a\x64\x3c\x5c\xf3\xb0\x3e\x77\x76\xbd\xf6\xfc\xfc\xd0\x34\xa6\x5b\x3a\xb5\x7c\x87\xe6\xc4\x85\x53\xb3\x9d\x4b\xd6\xaf\x72\x6a\x2b\xd4\x06\x90\x97\xdb\x1d\xc9\x5e\x30\x1f\x12\xf4\x3a\xcd\xcf\x7b\x1d\x69\x69\xc7\x85\x48\xce\xf0\x57\x28\x17\x0e\x57\x2e\x37\xe5\x5d\x6c\xba\x93\x8f\x02\x2e\x68\xe8\xb5\x3a\x3d\xf8\x41\x87\x3d\x87\xc6\x43\xa3\x3d\x71\xf3\x4e\x61\xdb\xa4\x19\xb3\xa7\xcb\xf0\x15\xe2\xe7\x70\xd3\xb1\x86\x5a\x55\x7e\x1b\x9f\xba\x88\x59\x29\x5e\x74\x2f\xe0\x85\xee\xaa\x49\x5f\x5a\xdf\x1b\x16\x03\x65\xa4\xa2\x62\xe6\x92\xc5\xba\x66\x0c\x3c\xf0\xdb\xec\x1a\xf9\xd2\xb9\x41\x1b\x91\x4e\xfc\x77\xb4\xd1\xa5\xe5\x9d\xb8\xe2\x08\x85\x02\x85\xbb\x82\x7d\x30\xeb\x0e\x6b\xaa\x1f\x3c\x07\xf5\x29\x2e\xe1\x15\x98\x82\x7a\xd3\xec\xea\x6e\x46\x45\x91\xc5\x1e\x76\xc5\x28\xd5\x4f\x16\xb8\xb5\xa7\x9e\xb5\xa7\x86\xf7\x99\xfa\xee\x99\xdb\x41\x6a\x27\xa3\xc1\x4e\x46\xb7\x77\x6c\x03\xc1\x3e\xb2\x06\x2a\x5e\xaf\x97\x67\x24\x8b\x75\x15\xbf\x6b\x87\x75\xc7\x99\x8a\x11\xbe\xe1\x1e\x97\x93\x54\x76\xb9\xd2\xf8\x8d\xf7\xb9\x36\x53\xc7\xf4\xff\x49\x7b\x5d\x75\x45\xc0\xd3\x95\x47\x5d\x6c\xb7\xea\xde\xac\x5f\x59\xb0\xdc\xc4\x68\x0c\xcc\xf2\x9e\xea\x27\xc8\xcd\x7e\xd1\xad\xb4\x35\xae\xe9\x47\xbf\x4a\x28\xc6\x05\x72\xf4\x2b\x7d\x8a\x5a\x20\x29\xc6\xe0\xb2\xa9\xd2\x19\xf4\x6f\x42\x8d\x6a\x67\x8c\x30\x3e\x4e\x05\x73\x16\x88\xc4\x88\x0b\x47\x97\xf4\xad\xac\xd2\x99\xd6\xf7\x1d\x8e\x82\x9e\x03\x49\xbc\x80\xd6\xc0\x39\xe9\x39\x3c\x9c\xe5\xee\xa0\xdf\xe4\xae\x7f\x5a\x91\x71\x6e\x71\xe9\xa6\xfe\x47\xfa\xa2\xcc\xb0\xd9\x9b\x2e\x39\x5f\x9e\x13\xc1\xd8\x5a\xab\x0c\xb2\x0e\x11\xeb\xab\xea\x1e\xdd\x96\xd5\x93\xdb\x92\x1f\x8b\xd5\x79\x11\x75\xfd\x45\x10\xeb\xb7\x44\x9f\x8a\x18\xf9\x52\xdf\xa8\x8e\x81\x7e\x3b\xb9\x2a\x88\x4a\x25\x19\x15\x78\x89\xc6\x40\xf2\xa4\xd6\xa7\x5d\xfb\x18\x7c\xd4\x6f\x4f\x8e\x81\x51\x5c\xfc\x19\xfd\xf2\x67\x1f\x6a\x50\x55\x16\x65\x20\x21\xa2\xc1\xb8\x61\xec\xc5\x00\x2d\x42\x75\x49\xd5\xb1\xfa\x07\x4d\xa2\x39\x76\xfd\x74\x8d\xba\xf6\xba\x26\x44\x53\xbd\x9a\xd5\x0b\x65\x44\x4d\x76\xad\xa1\xcd\xb4\xa9\xc9\x2a\xe4\x38\x78\x81\x69\x5b\xb0\x3b\x39\xd5\xa3\xdc\xab\x3a\xe3\xcd\x37\x5c\x56\x6b\xa3\xd3\xcf\x9c\x51\xf9\x3a\xfb\x21\xcd\xd7\x59\x75\x73\x3b\xbb\x96\x7d\xd0\xd5\x95\x3f\xdd\x96\xd0\x92\xc7\x2b\x09\xc9\x7f\xc7\xa3\xf2\x22\x82\xfd\x9b\xee\x3c\xb5\x93\x1e\x41\x7f\x51\x92\xe3\x60\x5d\x87\xdd\x6c\x8c\x5c\x60\xd1\xab\xe7\x3a\x5b\x6e\xc0\xab\xb9\xca\x6d\x35\xab\xab\x71\x2a\x93\x9c\x3d\xd8\x68\x77\x09\x67\x65\xae\x9a\xf1\xd0\x09\x5c\x7e\x3f\x5e\xcb\x20\x95\x97\xd1\x23\x3c\x60\x6a\x5c\x68\xd4\x74\xaa\xb8\xeb\x68\x00\x49\xe1\x13\x78\x05\xc0\x9c\xee\x24\xcf\x11\xf5\x72\x70\xa5\x9f\x2b\x03\x77\x20\xd3\x56\x9e\x19\x22\x39\x1a\x42\x74\xb8\x09\x3c\x60\x16\x00\x62\x6e\x1d\x98\xc4\x01\x94\x95\xdb\xa1\x9a\x9f\xcd\x35\xa0\xeb\xcb\xf7\xd2\x80\xf6\xc3\x9f\xa3\x01\x3d\xb0\xa1\x81\x8a\x53\xff\x3c\x1d\x68\x06\x9f\xa1\x83\x8f\x35\xe0\xd6\xfe\x5d\x1f\xbf\xd3\x5d\x87\xca\x75\x81\x4e\x48\x41\x91\x9c\xa4\x2e\xb1\xe2\xce\x83\x5a\xc2\xfa\x77\xb4\xe9\x0c\xd3\xeb\x69\x6d\x2f\x0d\xd6\x7a\x65\x90\x70\x34\xe8\x9d\xb6\xa3\x84\xfa\xa8\x76\xb0\xd0\xcc\xae\x3b\x62\x06\x82\x29\xda\x2b\x54\x68\xaf\x63\xaf\xa0\x81\xa4\x68\x6a\xe4\x6f\xad\x15\xef\xf0\x19\x75\x48\x6c\x85\x16\xf5\x00\x40\x5f\xdf\x37\x46\x6c\x0f\x17\x3a\xa8\xd3\x85\xb5\x17\xd1\x30\xbf\xba\xc6\x2e\xd7\x57\x45\xb2\xd9\x08\x57\xe6\x98\x90\x2e\x7f\x0b\xba\x97\xff\x12\x85\xf0\x0b\x96\xdf\x8a\x7f\xee\x13\x2b\x7d\xf6\xd2\x69\x26\xf4\x7e\x4b\xdf\x3f\x7a\xfa\x92\x20\xa6\x19\x37\xfd\x0d\x73\x21\xc1\xd1\x00\x9c\xc3\x8d\x68\x1e\xc6\xdd\xb1\xd4\xae\xf0\x6c\xbf\x00\xef\xff\x3e\xa2\xea\x8c\x08\xbe\x5d\x70\xb1\x5f\x4c\x95\x43\x09\x0b\x21\xc7\x72\x11\x61\xdf\x6c\xc5\xe3\x3b\x63\xa7\x2f\x8b\xbb\xf4\x19\x4b\x93\x8a\x31\x30\xf3\x03\x66\x7e\xa5\xb8\x49\xd7\x5c\x24\x24\x3b\x20\xbe\xa3\xf6\xd9\x95\xb8\xd5\x8b\xa9\x1d\x58\x1c\xb0\x24\x5c\xd0\x44\xee\xc4\xe3\xad\x48\x9b\x92\x5e\x6e\xa9\x95\xf5\x41\xa3\x23\x3f\xdc\xad\x8e\x84\xde\x50\xb6\xa2\x57\x77\x00\xd4\x65\x43\xbf\x77\x22\x70\x93\xa4\x23\xa7\x6b\xf1\xd8\xd4\x08\x6a\x7b\x56\x93\x2f\x77\x52\x97\x85\x9f\x31\xfa\x05\xe6\xaa\xc7\x04\x49\x0e\x89\x71\x75\x17\x34\xed\xc2\x04\x1f\x73\x3f\x89\xe6\x88\x23\xea\xab\x20\xff\x07\x5d\xe4\x7b\xf5\xbc\x86\x29\x4c\xea\xd7\xac\xc6\xc0\xee\xe8\x6d\x27\x7d\x35\xc3\xda\x0d\x57\xe9\xef\x4d\x34\xef\xfa\xc6\x67\x3f\x44\x79\xad\x0e\x51\x17\xb8\x64\xfd\x17\x4a\x34\xd4\x4a\xa5\xf6\x4a\x1a\xea\xef\x0f\x6d\x79\xc7\x28\xfd\x55\x49\xe5\xfd\xa2\x9c\x69\xf6\xdf\x01\x64\x6f\x08\x4e\xdc\xf4\x3f\x02\x98\xb8\xfa\xbf\x0b\xf9\xdf\x00\x00\x00\xff\xff\x97\xb9\x49\x4b\x3e\x44\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17470, mode: os.FileMode(420), modTime: time.Unix(1588090552, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

