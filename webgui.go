// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\x7b\x77\xdb\x36\x96\xff\xdf\x9f\x02\x65\x26\x25\x55\x8b\xa4\x24\xdb\xe9\x44\x16\x95\x93\xda\x99\xd3\x74\xd2\x34\x75\x92\x99\xe9\x3a\xde\x1c\x88\x84\x28\xd8\x20\xc0\x02\xa0\x1e\x49\xfc\xdd\xf7\x00\x7c\x3f\x24\xcb\x79\xec\xcc\xae\xfe\x70\x28\xe0\xe2\xe2\xe2\xe2\xe2\x77\x1f\xa0\x32\xf9\xee\xfc\xb7\xb3\x37\x7f\xbc\x7a\x06\x16\x32\x22\xd3\x83\x89\xfa\x07\x10\x48\x43\xcf\x40\xd4\x50\x0d\x08\x06\xd3\x03\x00\x26\x12\x4b\x82\xa6\xbf\x27\xd0\xbf\x41\xfc\x1a\xfa\x37\x60\x79\x34\x71\xd3\xd6\x03\x45\x10\x21\x09\x81\xbf\x80\x5c\x20\xe9\x19\x89\x9c\xdb\x7f\x35\xa6\x45\xc7\x42\xca\xd8\x46\x7f\x26\x78\xe9\x19\xff\xb2\xdf\x3e\xb5\xcf\x58\x14\x43\x89\x67\x04\x19\xc0\x67\x54\x22\x2a\x3d\xe3\xf9\x33\x0f\x05\x21\xaa\x8c\xa3\x30\x42\x9e\xb1\xc4\x68\x15\x33\x2e\x2b\xa4\x2b\x1c\xc8\x85\x17\xa0\x25\xf6\x91\xad\xbf\xf4\x01\xa6\x58\x62\x48\x6c\xe1\x43\x82\xbc\xa1\x91\x0a\x46\x30\xbd\x01\x1c\x11\xcf\x10\x72\x43\x90\x58\x20\x24\x0d\xb0\xe0\x68\xee\x19\x4a\x2c\x31\x76\x5d\x21\xa1\x7f\x13\x43\xb9\x70\x66\x8c\x49\x21\x39\x8c\xfd\x80\x3a\x3e\x8b\xdc\xa2\xc1\x3d\x76\x8e\x9d\xa1\xeb\x0b\x51\xb6\x39\x11\xa6\x8e\x2f\x44\x2a\xf1\x17\xce\x34\x67\x54\xda\x70\x85\x04\x8b\x90\x7b\xec\xfc\xe8\x0c\xf4\x64\xd5\xe6\xfa\x7c\x7a\x16\x20\x37\x31\xf2\x0c\x89\xd6\xd2\xcd\x7b\x00\x88\x20\xa6\xe0\x23\x88\x20\x0f\x31\xb5\x25\x8b\xc7\xe0\x84\xa3\xe8\x14\xdc\xea\xee\x07\x98\x4a\xce\xc0\x47\x10\x60\x11\x13\xb8\x19\x83\x19\x61\xfe\x4d\xd1\x1d\x73\xe6\x23\x21\x30\x0d\xab\x34\x94\x51\x54\x90\x70\xa4\x76\xe4\xae\x6e\x47\x19\x10\xe2\x85\x28\x63\x30\x88\xd7\x60\xa8\xfe\xe4\x0f\xa7\x60\xc6\x78\x80\xb8\x3d\x63\x52\xb2\x68\x0c\x86\xf1\x1a\x08\x46\x70\x00\x1e\x3c\x7e\xfc\x38\xe7\xe8\xb0\x44\x12\x4c\x11\xf8\x98\xd1\x57\x09\x67\x24\x29\xa6\x76\x66\x38\xa4\x49\x04\x3e\x82\x18\x06\x01\xa6\xe1\x18\x9c\x54\x66\xe1\x30\xc0\x89\xc8\xda\x94\xd6\x6c\x48\x70\x48\xc7\xc0\x47\x54\x22\x7e\x5a\x08\x3a\x3c\xc9\x85\xcc\x1e\x9a\x13\x88\x18\x52\x27\x9d\x49\xef\x91\xc0\x1f\xd0\x18\x8c\x8e\x15\x65\xb7\x5e\x6b\x23\x03\x24\xfc\xfa\xd0\x54\x1b\x5a\x26\xc9\x21\x15\x73\xc6\xa3\x31\x48\xe2\x18\x71\x1f\x8a\x72\x81\x12\xce\xc4\xd6\x91\xb5\xd5\xd4\x46\x10\xdc\xd2\x89\x9f\x70\xc1\xf8\x18\xc4\x0c\xa7\x8b\x57\xf4\x13\x57\x1b\xd6\xf4\x60\xe2\xa6\xc7\x7f\x32\x63\xc1\x66\x7a\x70\x30\xa1\x70\x09\x7c\x02\x85\xf0\x0c\x0a\x97\x33\xc8\x41\xfa\x8f\x8d\xd6\x31\xa4\x81\x1d\x05\x79\x43\x00\xf9\x0d\x98\x85\xe9\xbf\x73\xbc\x46\x81\x32\xc2\xd4\x6c\x61\x9d\x87\x3d\xe3\x90\x06\xf9\x39\x79\x60\x54\x41\x66\xe2\x42\x3d\x64\x96\x48\xc9\x68\x63\x9c\x64\x61\x48\x10\x37\xb2\x13\x90\xd2\x18\x20\x80\x12\x66\x7d\x9e\xe1\x33\x42\x60\x2c\x50\xde\x0c\x79\xa8\xe0\xe9\x41\xca\x42\x3c\x5b\xc3\x28\x26\xe8\x1c\xcd\x61\x42\xa4\x01\x20\xc7\xd0\x56\x18\xc3\x19\x29\x26\xea\xa6\x4a\x97\x8c\x02\xcf\x98\x43\xa2\x26\xd0\xad\x04\xce\xd4\xf9\x7f\xa3\xa7\x57\xca\xc0\x21\x94\x98\xd1\xec\x58\x4e\xd4\xce\x77\x2f\xc3\xc6\xbe\x22\x9b\xb8\x8a\x44\x2f\xda\x4d\x57\x94\xa2\x58\x80\x0b\xd5\xe7\x6b\xca\x75\x5d\xae\x11\x07\xdb\x64\xce\xa6\x4f\x48\x63\x72\xb5\xa3\x11\xb7\x61\x22\x59\x46\xa3\x71\xac\x42\x65\x63\x89\x22\x00\x7d\x89\x97\xa8\x20\x69\xec\xa2\xad\x90\x2f\xdf\x41\xd7\x98\xbe\x44\x2b\x70\x91\x02\x40\x6d\xc5\x82\xdb\x8c\x92\x8d\x31\xb5\xfc\x84\x73\x44\x65\x2f\x5b\x6e\xb6\xcf\x9a\xb1\x4b\xf0\x0e\x49\xf6\x12\xe1\x81\x31\x9d\x14\x23\xe7\x10\xcc\xa1\x1d\x62\xb9\x48\x66\xb6\xf8\x33\x81\x3c\xdf\xac\x05\x0e\x02\x44\x3d\x43\xf2\x04\x29\xcd\xe3\x29\xb8\x40\x04\x41\x81\xc4\x7f\x8c\x40\xaf\x59\xc2\x7d\xb4\x4d\x9c\xef\x6c\x7b\xc7\xa6\x05\x9c\xc5\x01\x5b\xd1\x9d\x22\x16\x54\x99\x21\x96\x22\x6b\x73\xca\x7b\x07\xc3\xc6\xc9\x2a\x98\x67\xa2\x43\x11\xb3\x38\x89\x33\xe1\xbb\xcf\xc8\xf4\x3c\x1b\x54\x59\x4f\xdd\xb6\x0b\x61\x22\x44\x93\xea\x99\x22\x28\x98\x6d\x6a\xe2\x94\x0c\xaa\xcb\x2a\x18\xe8\xbd\x29\xd5\xff\xd4\x57\xc7\xb0\x36\xef\x5e\xc3\x28\x93\x0b\xc4\xb5\xfd\x7f\xc6\xf0\xd7\x2c\x42\x72\xa1\xdc\x28\x22\x02\x81\x05\xe2\xa8\xbe\x74\x37\xc0\xcb\xae\x9d\xb5\xed\xec\xc4\xba\x09\xc9\x9e\xf2\xbd\x9e\x28\xb7\x50\xd8\x12\xe3\x91\x8d\xa9\x76\x8c\xd1\xc6\x1e\xa9\x3f\x24\xb4\x07\xe5\x61\xc6\x34\x4e\x64\x8d\x3c\xc3\x37\x75\xee\x45\x64\x8f\x8c\x4a\x04\x61\x80\x98\x40\x1f\x2d\x18\x09\x10\xf7\x8c\xd7\x08\x72\x7f\x51\x87\xb6\xac\xad\xe0\x5f\x87\xe6\x99\xa4\x60\x26\xa9\x2d\x90\xcf\x68\x00\xf9\xa6\x90\x4a\x44\xf6\x20\x9f\x4a\x24\xb3\x08\x4b\x63\x9a\xf2\x2a\x81\x2e\x5d\xb1\x12\x32\x7d\x4e\xb5\x90\x29\x69\xe2\x52\xb8\x54\x5e\x48\xc7\x36\x9c\x29\x23\x54\x8f\x46\x89\x8b\x54\x42\x4c\x11\x37\x4a\xc8\x54\x26\xac\x63\x9d\x1c\x01\xb5\xf2\xd4\xa6\xb0\xc0\x33\x42\x15\x9f\xa5\x5b\xeb\x19\xe5\x92\x2a\xf6\xa8\x15\x16\x72\x96\xc4\xd5\x43\xa4\x55\x01\xe6\x8c\x7b\xc6\x73\xa5\xde\xb7\x17\x2f\x8c\xe9\x33\xed\x70\x21\xf8\x83\x25\x6f\x92\x19\x02\xff\xc0\x01\x62\xe0\xed\xc5\x8b\x89\xab\xe9\x2b\xe3\xd3\x3d\x49\x75\x91\x70\x62\x74\x6d\x4f\x7a\xfc\x0a\xf6\xe9\x1e\xa8\x98\x81\xe3\x59\x7a\x16\x12\x4e\x7e\x46\x24\x36\x8a\x20\x39\xa8\xca\x28\x22\x48\x88\xe6\x51\xd0\x55\x67\x51\xbb\x9d\x06\x0c\x51\x22\x51\x60\x4c\x33\x87\x31\x06\x79\xa4\xba\x5a\xad\x9c\x0d\x4b\x64\x32\x43\x3a\x3c\x5d\x41\xe9\x2f\x9e\x2c\x3d\xf6\x73\x78\xf2\xfa\x97\x3f\x2e\x7e\x7e\x3a\x98\xb8\x7a\x96\xd2\x80\xab\xd6\x9c\x19\x46\x6d\xc7\x9b\x66\x12\x73\x1c\x41\xbe\x69\xa3\xa3\xcf\xa2\x08\x51\x29\x6c\xb6\x03\x1a\x7d\x48\x81\x5c\x20\x70\x96\x11\x6f\x33\xa4\x4c\xae\xaa\x4d\x94\x01\x6e\x6e\x18\x95\x4d\x27\x0c\x06\x65\x4f\xbd\x8f\xb3\x95\xd1\x0d\x5d\x3e\x23\x76\x14\xd8\x47\x4a\xba\x8a\x1e\x3a\x89\x1e\xd5\xd1\xab\x74\xcb\x04\x0b\x99\xda\x1b\x28\x1f\xed\x39\x49\xc4\xa2\x36\xa4\x06\xf8\x15\xca\x14\x7f\xea\x2b\xb4\xfd\x05\xf2\x6f\x6c\x65\x68\x2d\x3d\xa7\xee\x67\x97\x96\xcf\xd4\x60\x85\x60\x73\xc6\xc1\x12\xaa\x68\x5b\xdb\x34\x9e\x56\xf1\xea\xfe\x32\xa5\x7b\x66\xfb\x2c\xa1\xf2\x8b\xe5\xf2\x0b\x0b\xf8\x0a\x22\x29\x20\x57\x26\xf0\x39\x52\x9d\x67\x63\x95\x60\x5f\x45\x28\x14\xb1\x6b\xfc\x39\x92\x3c\xa5\x90\x6c\x3e\x68\xd7\xa3\x58\x7c\x91\x10\x02\x51\x89\xd5\x5a\xbe\x4c\x90\x82\x4d\x53\x98\xd4\xcb\x55\x1b\x2a\x47\x26\xe6\x2c\xe4\xa8\xc8\x6c\x77\x91\xd8\x2a\x25\xa9\x7e\xb1\x85\xe4\x38\x46\x41\xbd\x11\x52\x1c\x41\x05\x7a\x99\x17\xc9\x3b\x67\x90\x67\xcb\x58\x42\x92\x20\xca\x56\x9e\x71\x54\x6d\x89\x30\xf5\x8c\x41\xad\x05\xae\x3d\x63\x38\x18\x18\x40\xe7\x4c\x59\x5d\x62\x0c\x8e\x1e\xb6\x60\xa0\x81\x8f\x2d\xe7\x5f\x7c\x29\x1e\x3b\x70\x2b\x4d\xab\x3b\x30\x8b\xb3\x15\x48\x73\xed\x4e\xd8\xca\x70\x67\x38\xa8\x82\xd7\x62\x94\x77\x2f\x95\xaf\x7a\xaf\xab\x39\x69\xd0\x92\x79\xaf\x37\xaa\x65\xe2\x2e\x46\x95\x51\x71\xc1\x73\x01\x29\x45\x24\x1f\xf6\x14\x9c\xa5\x0d\x13\x37\xee\xf6\x08\x6d\x79\x46\x46\xb1\xed\x5d\x0a\xd8\x0e\xbd\x1d\xbc\x8e\x9b\xb8\x9c\xed\xc8\x02\xe1\x70\x21\xc7\xe0\x68\xa0\x92\xe4\x3a\xf0\xfa\x90\x2e\xa1\xd0\x9a\xf5\x17\x90\xcb\x37\x4c\x42\xf2\xba\xb0\x76\x90\x56\x99\x8c\x63\xb5\xc1\x29\x1f\xcf\x38\x1a\x0c\xd4\xde\xa6\x43\xef\xde\xcd\x6e\x59\x81\x90\x50\xee\x32\xe9\xba\x9f\xd9\xca\xe8\x11\x50\x0f\x22\xca\x1e\xd6\xa2\xe1\x5a\xda\x03\xd3\x12\x44\x07\x51\x33\x3b\x4d\x32\x1c\x90\x4a\x27\xef\x73\x30\x33\xa6\xb6\x5d\xe6\xa8\x3b\x39\xa8\x60\xc5\x98\x6a\x95\x56\x5c\x74\xf7\xd0\xd6\x59\xd9\xde\xf8\x6f\x54\xc2\x12\xa3\xd5\xe7\x6a\xe0\x1f\x6a\xec\x97\x2e\xbf\xab\xe9\x3f\xd2\x68\x72\x73\x79\x1f\x23\xfe\x3e\x80\x9b\x7b\x2b\x2d\x37\x18\xf0\x0a\x71\x70\x0e\x37\xff\x57\x0d\x27\xc0\x82\xe0\x1b\xf4\x9e\x43\x89\xd9\xbd\xb5\x70\x9e\x8e\x06\x17\x6a\xf4\x57\x35\x9e\x3b\x11\xea\x0e\x34\x1d\x9d\xec\x83\xa6\xf1\x0b\x2c\x4a\x18\x1d\x0e\x06\x0f\x4b\x1c\x1d\x9d\x94\x5e\xb3\xc9\xf5\x0e\x78\xdd\x23\x64\x5e\x30\x8e\x3f\xa8\x84\x90\x00\x09\x67\x75\xa4\xdd\x1e\xf9\x80\x39\x41\x6b\x7b\x8e\x09\x01\x8d\x9e\x22\x55\xc9\x0b\x89\x33\xcf\x58\x31\x1e\x08\x75\xbe\x63\xf0\x4f\xf5\xd8\x0a\x6b\xf6\x98\xa7\xca\x2f\x8b\xf5\x14\xbf\x67\xed\x98\xad\x2c\x05\x7c\x05\x67\x39\x1c\xb5\x75\xdf\xf4\x8f\xad\xfd\x3c\x87\x98\x6c\xda\xde\xb1\xb1\xad\x83\x8e\x6d\x1d\x74\x6f\xeb\x8e\xa0\x67\xe2\xaa\xdc\x3e\x0d\x7e\x54\xce\x1b\x4b\x20\xb8\x5f\xde\xa3\xf8\x2c\x40\xce\xf5\x9f\x09\xe2\x1b\x9d\x9d\xa6\x8f\xf6\x91\x73\xe2\x0c\xf4\x2d\xc9\xb5\x30\x00\xa6\x12\x85\x1c\xcb\x8d\x67\x88\x05\x1c\x9d\x3c\xb2\xd7\x2f\x3f\xbc\x1c\xc1\x63\x22\x6f\x7e\x3a\x3e\xfe\xd5\x77\x7f\xf9\x70\x14\xbf\x39\xc6\x6f\x87\x7e\x84\x2e\x06\x7f\xbb\xf9\x97\x38\x8e\x79\xe2\xfe\xb2\x86\xbf\x7b\x06\xf0\x39\x13\x82\x71\x1c\xaa\xb8\x0f\x52\x46\x37\x11\x4b\x84\x2e\xd2\x6a\x91\xa6\xdb\xa4\xbb\xc7\x7d\xd2\x75\xf5\x3a\x69\x96\xd0\x80\xa0\x5c\xfe\xbb\xe7\xf1\x03\x7a\x2d\x1c\x9f\xb0\x24\x98\x13\xc8\xd3\x44\x1d\x5e\xc3\xb5\x4b\xf0\x4c\xb8\x67\x6a\xd7\x9c\x6b\xe1\x8e\x9c\xc7\xce\x51\xf6\xb5\xcd\xbc\xc2\xbd\x72\x99\x74\x0d\x97\x30\x6d\xd5\x36\xb1\x84\x2a\xcd\x22\x8c\x0b\xe0\x81\x8f\x7a\xcf\x38\x0a\xc6\xc0\xe0\xe1\xcc\x1a\x9d\x9c\xf4\xc1\xe3\xc7\x7d\x30\x3c\x1a\xf5\x8c\xbe\xee\x65\x1c\xd2\x10\x55\x09\x86\x27\x8f\xfb\xe0\xd1\x71\x4e\xb0\x41\x84\xb0\x55\x95\x60\x34\x38\xe9\x83\xbf\x3e\xca\x09\x42\x8e\x10\xcd\xfa\x7f\x54\xe3\x1f\x8f\xf4\x9f\xbc\x7f\x46\x92\x9c\xff\xc9\x71\x1f\x0c\x1f\x8d\xfa\x60\x74\x74\x92\x77\xc7\x09\xd7\x05\x0d\x4d\x30\x3c\x39\xea\x83\xe1\x40\x51\x9c\x9c\x54\x26\xd8\xe4\xf3\x0f\x86\x6a\xfe\x23\xf5\xe7\xc7\x9e\x71\x00\xc0\xad\xd2\xcb\x3c\xa1\xba\x3c\x04\x42\x24\xdf\x5e\xbc\x78\x05\x39\x8c\x90\x44\xdc\xa2\x30\x42\xbd\x42\x0f\x32\xe1\x14\x04\x48\x19\xe5\xdb\x8b\xe7\x67\x2c\x8a\x19\x45\x54\x5a\x16\xd5\x95\xf0\xf0\xd9\x3a\xb6\xcc\xcb\x27\x9f\xbe\xbf\x32\xc1\xa1\xae\xd7\x80\x43\x60\x7a\xea\x8b\x69\x5d\xfe\xf7\xf7\xa7\x57\x87\x4f\x7a\xd6\xf7\x9f\x1e\x7c\x3a\xfd\xf4\x97\x9e\xd9\x73\xd0\x1a\xf9\x16\x61\xbe\xbe\x3c\x70\x84\xae\x93\xf5\x3e\x7d\xba\xec\x1b\xc6\x55\xef\x72\x78\xe5\x70\xa4\x2b\x75\x96\xfb\xee\xd0\x0d\xfb\xc0\x7c\x38\x1a\x98\xbd\xde\xa7\x4f\x34\x21\xa4\x25\x7c\xb0\xb4\x14\xca\xf4\x41\x90\x5e\x07\x9c\x43\x09\x1b\xc2\x6b\x02\xf0\x44\xa3\x11\x18\xd7\x08\x4f\x5b\xfc\x24\x4f\xa8\x0f\x25\xb2\x84\xe4\x7d\x10\xc1\x75\xce\x0c\xcf\x55\x93\x43\x10\x0d\xe5\x02\x4c\xab\x5d\x00\x08\xc9\x81\xa7\xfe\x3a\x22\x99\xa9\xc4\x8c\x86\xd6\x20\x1b\x7e\x08\x0c\xc7\x71\x8c\x53\x4d\x7a\x7b\x50\x95\x4c\x48\x5e\x48\xe0\x33\x2a\x24\x10\x04\xa1\x18\x78\xc0\x8a\x30\x21\x38\x2d\x35\x8a\x1e\xf0\xa6\xf5\x25\x29\xdd\xbf\xe2\x2c\xc2\x02\x59\x1c\x09\x46\x96\x48\xd1\x08\x24\xdf\xe0\x08\xb1\x44\xe6\xad\x7d\x50\x63\xd4\xcb\x67\x5b\x61\x1a\xb0\x95\xc3\x74\x46\x0f\xbc\x62\xfd\x56\xbe\x26\x75\x26\x96\x58\x75\x35\xcd\xc3\x5c\xe2\xc0\xec\x9d\xe6\x4a\x59\xe2\xa0\xd4\xc3\xf5\xef\x0a\xaa\x2c\x33\xbd\x84\x35\x7b\xce\x02\x07\xc8\xca\x88\x2b\xdd\x65\x02\x6e\xf6\x1c\xb1\x60\x2b\x45\x93\x11\x11\x24\x01\xf6\x19\x05\x5e\x17\x7d\x59\xf1\x01\xd8\x99\x43\xb3\xe0\x9d\xea\x6f\x23\x2f\x50\x88\xd6\xc0\x03\xae\x06\x92\x27\xe3\x77\xee\x3b\xd7\x5a\xad\x56\xef\x9c\xde\x93\xac\xe6\xf7\x4e\x61\xc9\xbb\xb4\xea\xf7\xee\xc9\xd2\xbb\x84\xf6\x87\xa7\xf6\x7f\x0d\xec\xc7\xef\xdf\xd9\x57\x1f\x1f\xf5\x6f\xdd\x9c\x2b\x9e\x5b\xdf\x2d\x71\xe0\x44\x8a\xd6\xca\xb8\xf7\xca\x05\x03\x2d\xaa\xc3\x51\xc4\x96\xe8\x4c\xf9\x21\xcb\xac\x94\x0e\x4a\xf1\x32\x42\x18\x04\x25\x95\x72\x36\xa2\x4a\xf2\x97\xda\x52\x81\x53\x4d\xed\xcd\x9e\xe3\xab\x71\xda\x33\x99\x7d\x60\x8e\x06\x0f\xcd\x5e\x47\xac\xd5\xf5\x71\xa0\x94\xdc\x32\x6b\x05\x00\x53\xe1\xc1\xde\x0c\x6a\x2b\xec\xaa\x43\xdc\x43\x96\x42\x07\xfa\x16\x95\x86\x88\x97\x4a\xb8\x4d\xaf\x13\xbe\x8a\x7e\x53\x53\xe9\xa2\xfd\x37\x28\xba\x58\xe0\x41\xed\x30\x38\x21\x92\xbf\xbc\xfe\xed\xa5\x65\xb8\x30\xc6\x4f\x96\x2a\x22\x39\x54\x67\xaa\x36\xa1\x13\x30\x8a\xac\xe2\x90\x72\x24\xe2\xaa\x0d\x66\x0a\x98\x5b\xdf\xa9\x1e\xe7\x19\xe7\x8c\xb7\xfb\xd3\xa3\x25\x24\x8a\x95\x9f\xbb\xdc\x5e\xb2\xec\x83\x9d\xb5\xc3\x7e\xbb\x88\xd7\xef\x2e\xa9\x5d\xb5\x24\x98\x33\x6e\x29\x29\xd4\x09\x1d\x9c\x82\x35\x98\xa4\x02\x65\xb8\x7a\x0a\xd6\x87\x87\x5d\x92\x77\xc3\x82\x79\xa8\x07\x5f\xae\xaf\x0e\xcd\x06\x1c\xd4\x14\xb3\xaf\x09\x35\x86\xec\x69\x4c\xe5\xe7\x3e\x66\x65\xad\x0f\x47\xbd\x1f\x46\x83\x43\x73\x7f\xeb\x2a\x3f\x5b\xec\x2c\x67\xda\x21\xdd\xed\x41\xab\xe9\x5e\xa7\x40\x85\xc2\xf7\x16\x74\x8b\x98\xc3\xc1\xde\xc0\x53\x70\xfa\x7a\x00\x54\x0a\x57\x05\x22\x91\xf8\x4a\x11\x66\xe9\x88\xca\x8f\xf6\xca\xd6\x70\x30\x18\xf4\x1c\xb9\x40\xd4\xb2\x2a\x2e\xb9\xfe\x09\x38\x5c\xa5\xef\x07\xa4\xa7\xb4\x63\x23\x5a\x6d\x2d\xcc\xcb\x3f\x78\x6e\x95\x07\x1a\x78\x1e\x30\x5f\xb2\xa2\xf6\x0e\xe6\x2c\xa1\x81\xbe\x23\x90\x0b\x2c\x40\xcc\x84\x74\xcc\xfd\x0f\xcf\xb6\xe3\xff\xad\x0f\x52\xcb\xeb\x95\x9f\x7b\x19\xe4\xf1\x67\xd8\xe3\x56\x8b\x3c\xbe\xb7\x41\x7e\x13\x93\xbc\xcb\x3b\x96\x9f\xdb\xa6\x0d\xd5\xbe\xdf\x36\xdc\xc7\x1c\x62\x62\xb5\x62\xbc\xf2\xa3\xec\x43\x03\xdc\xf3\x2f\x33\x92\x82\xc7\x3d\xac\xa4\x1c\xd3\x6d\x26\x1d\xa2\x06\x64\x0f\x39\x73\x7f\xb5\x45\xd4\x94\xc7\x3d\xe4\xcc\x06\xec\x25\xe4\xbd\x0c\xf9\xd1\xbd\x0d\x79\x8b\x11\x3f\xba\xa7\x11\x7f\x75\x03\xde\xc7\x78\x73\xf8\xcb\xfc\x51\x99\xc8\x95\xc0\x19\x54\x72\xb8\xdc\x36\x5b\x37\x18\xcf\xcf\x81\x07\x02\xe6\x27\xea\x8b\x8a\xa2\x9e\x11\xa4\x1e\x7f\xda\x3c\x0f\x2c\xb3\x63\x80\xd9\x53\x54\x67\x8c\x4a\xb4\x96\x96\x39\x0a\x4a\xc9\x8a\x29\xea\x65\xa0\x3d\xa6\xa8\x0f\xd8\x67\x8a\xac\x72\xb8\x97\xf8\x9a\xb2\x93\x69\xc6\xd5\x75\xc1\xaf\x48\x42\xa5\xb0\x46\x8a\x95\xbf\x9d\xba\x18\x39\x95\x1b\x30\xb3\xe7\x68\x2e\x6a\x80\x93\x8f\x74\xf4\x55\x58\x2b\x49\xcb\x39\xc4\x4e\xed\x36\x4c\x25\x75\x32\x22\x96\x39\x81\x20\x7f\xe7\x90\xa2\x55\xf3\x65\xe0\xe6\x2b\x16\x19\x0f\xd7\x3c\xac\xcf\x9d\x5d\xac\x3d\x3f\x3f\x34\x8d\xe9\x96\x4e\x2d\xdf\xa1\x39\x71\xe1\xd4\x6c\xe7\x92\xf5\x4b\x9c\xda\x0a\xb5\x01\xe4\xe5\x76\x47\xb2\x17\xcc\x87\x04\xbd\x4e\xf3\xf3\xde\x36\x56\xfa\x2a\xa4\x5b\x53\xfa\xea\x50\x5f\x77\xec\xc1\xad\x79\x51\x90\xb3\xfc\x15\xca\x85\xc3\x95\xf3\x4e\xb9\x67\x02\x3e\x5d\x86\xaf\x10\x3f\x87\x9b\x0e\x56\xb5\x52\xfb\x36\x3e\xe5\x7e\xaa\x65\x64\xf5\x75\x01\x5c\xd0\xd1\xfb\x42\x77\xfd\xa0\x23\xb1\x43\xe3\xa1\x51\x33\xa9\x37\x2c\x06\xca\xf2\x44\xc5\x76\x25\x8b\x75\x21\x18\x78\xe0\xb7\xd9\x35\xf2\xa5\x73\x83\x36\x22\x9d\xf8\xef\x68\xa3\xeb\xc5\x3b\xc1\xc2\x11\xea\x68\x17\x3e\x08\xf6\xc1\xac\x3b\x56\xa9\x7e\xf0\x1c\xd4\xa7\xb8\x84\x57\x60\x0a\xea\x4d\xb3\xab\xbb\x19\x15\x95\x13\x7b\xd8\x15\x78\x54\x3f\x59\x34\xd6\x9e\x7a\xd6\x9e\x1a\xde\x67\xea\xbb\x67\x6e\x47\x9e\x9d\x8c\x06\x3b\x19\xdd\xde\xb1\x0d\x04\xfb\xc8\x1a\xa8\x20\xbc\x5e\x73\x91\x2c\xd6\xa5\xf9\xae\x1d\xd6\x1d\x67\xca\xf1\x7f\xc3\x3d\x2e\x27\xa9\xec\x72\xa5\xf1\x1b\xef\x73\x6d\xa6\x8e\xe9\xff\x3f\xed\x75\xd5\xbf\x00\x4f\x97\x13\x75\x05\xdd\xaa\xbb\xa8\x7e\x65\xc1\x72\x13\xa3\x31\x30\xcb\xcb\xa7\x9f\x20\x37\xfb\x45\xb7\xd2\xd6\xb8\xa6\x1f\xfd\x66\xa0\x18\x17\xc8\xd1\xaf\xf4\x29\x6a\x81\xa4\x18\x83\xcb\xa6\x4a\x67\xd0\xbf\x09\x35\xaa\x9d\x31\xc2\xf8\x38\x15\xcc\x59\x20\x12\x23\x2e\x1c\x5d\xa7\xb7\xb2\xf2\x65\x5a\xb4\x77\x38\x0a\x7a\x0e\x24\xf1\x02\x5a\x03\xe7\xa4\xe7\xf0\x70\x96\xa3\x72\xbf\xc9\x5d\xff\x52\x22\xe3\xdc\xe2\xd2\x4d\xfd\xcf\xf4\xbd\x97\x61\xb3\x37\x5d\x72\xbe\x3c\x27\x82\xb1\xb5\x56\x69\x61\x1d\x22\xd6\x57\xd5\x3d\xba\x2d\x4b\x22\xb7\x25\x3f\x16\xab\xf3\x22\xea\xfa\x8b\x20\xd6\x2f\x7d\x3e\x15\x31\xf2\xa5\xbe\x26\x1d\x03\xfd\xb2\x71\x55\x10\x95\x1f\x32\x2a\xf0\x12\x8d\x81\xe4\x49\xad\x4f\xfb\xeb\x31\xf8\xa8\x5f\x86\x1c\x03\xa3\xb8\xcd\x33\xfa\xe5\xaf\x38\xd4\xa0\xaa\x2c\xca\x40\x42\x44\x83\x71\xc3\xd8\x8b\x01\x5a\x84\xea\x92\xaa\x63\xf5\xef\x93\x44\x73\xec\xfa\xe9\x1a\x75\xed\x75\x4d\x88\xa6\x7a\x35\xab\x17\xca\x88\x9a\xec\x5a\x43\x9b\xb9\x50\x93\x55\xc8\x71\xf0\x02\xd3\xb6\x60\x77\x72\xaa\x87\xae\x57\x75\xc6\x9b\x6f\xb8\xac\xd6\x46\xa7\x9f\x39\xa3\xf2\x75\xf6\xbb\x98\xaf\xb3\xea\xe6\x76\x76\x2d\xfb\xa0\xab\x2b\x7f\xba\x2d\xa1\x25\x8f\x57\x12\x92\xff\x2c\x47\x25\x3b\x04\xfb\x37\xdd\xc9\x67\x27\x3d\x82\xfe\xa2\x24\xc7\xc1\xba\x0e\xbb\xd9\x18\xb9\xc0\xa2\x57\x4f\x60\xb6\x5c\x6b\x57\x13\x90\xdb\x6a\xaa\x56\xe3\x54\x66\x2e\x7b\xb0\xd1\xee\x12\xce\xca\x04\x34\xe3\xa1\xb3\xb2\xfc\xd2\xbb\x96\x16\x2a\x2f\xa3\x47\x78\xc0\xd4\xb8\xd0\x28\xd4\x54\x71\xd7\xd1\x00\x92\xc2\x27\xf0\x0a\x80\x39\xdd\x49\x9e\x23\xea\xe5\xe0\x4a\x3f\x57\x06\xee\x40\xa6\xad\x3c\x33\x44\x72\x34\x84\xe8\x70\x13\x78\xc0\x2c\x00\xc4\xdc\x3a\x30\x89\x03\x28\x2b\x57\x3e\x35\x3f\x9b\x6b\x40\x17\x8d\xef\xa5\x01\xed\x87\x3f\x47\x03\x7a\x60\x43\x03\x15\xa7\xfe\x79\x3a\xd0\x0c\x3e\x43\x07\x1f\x6b\xc0\xad\xfd\xbb\x3e\x7e\xa7\xbb\x0e\x95\xeb\x02\x9d\x65\x82\x22\xcd\x4c\x5d\x62\xc5\x9d\x07\xb5\x2c\xf4\xef\x68\xd3\x19\xa6\xd7\x73\xd5\x5e\x1a\xac\xf5\xca\x20\xe1\x68\xd0\x3b\x6d\x47\x09\xf5\x51\xed\x60\xa1\x99\x32\x77\xc4\x0c\x04\x53\xb4\x57\xa8\xd0\x5e\xc7\x5e\x41\x03\x49\xd1\xd4\x78\xc5\x04\x96\x78\x59\xbe\x35\x6f\xd4\x21\xb1\x15\x5a\xd4\x03\x00\x7d\x27\xdf\x18\xb1\x3d\x5c\xe8\xa0\x4e\x17\xd6\x5e\x44\xc3\xfc\xea\x1a\xbb\x5c\x5f\x39\x71\x26\x78\x23\x5c\x99\x63\x42\xba\xfc\x2d\xe8\x5e\xfe\x4b\x14\xc2\x2f\x58\x7e\x2b\xfe\xb9\x4f\xac\xf4\xd9\x4b\xa7\x99\xd0\xfb\x2d\x7d\xff\xe8\xe9\x4b\x82\x98\x66\xdc\xf4\x37\xcc\x85\x04\x47\x03\x70\x0e\x37\xa2\x79\x18\x77\xc7\x52\xbb\xc2\xb3\xfd\x02\xbc\xff\xfd\x88\xaa\x33\x22\xf8\x76\xc1\xc5\x7e\x31\x55\x0e\x25\x2c\x84\x1c\xcb\x45\x84\x7d\xb3\x15\x8f\xef\x8c\x9d\xbe\x2c\xee\xd2\x67\x2c\x4d\x2a\xc6\xc0\xcc\x0f\x98\xf9\x95\xe2\x26\x5d\x73\x91\x90\xec\x80\xf8\x8e\x82\x66\x57\xe2\x56\xaf\x90\x76\x60\x71\xc0\x92\x70\x41\x13\xb9\x13\x8f\xb7\x22\x6d\x4a\x7a\xa9\xcf\x72\x31\x4f\x01\x5f\x7d\xd0\xe8\xc8\x0f\x77\xab\x23\xa1\x37\x94\xad\xe8\xd5\x1d\x00\x75\xd9\xd0\xef\x9d\x08\xdc\x24\xe9\xc8\xe9\x5a\x3c\x36\x35\x82\xda\x9e\xd5\xe4\xcb\x9d\xd4\x65\xe1\x67\x8c\x7e\x81\xb9\xea\x31\x41\x92\x43\x62\x5c\xdd\x05\x4d\xbb\x30\xc1\xc7\xdc\x4f\xa2\x39\xe2\x88\xfa\x2a\xc8\xff\x41\x17\xf9\x5e\x3d\xaf\x61\x0a\x93\xfa\xdd\xa9\x31\xb0\x3b\x7a\xdb\x49\x5f\xcd\xb0\x76\xc3\x55\xfa\xf3\x11\xcd\xbb\xbe\xf1\xd9\xef\x4a\x5e\xab\x43\xd4\x05\x2e\x59\xff\x85\x12\x0d\xb5\x52\xa9\xbd\x92\x86\xfa\x4b\x41\x5b\x5e\x1c\x4a\x7f\x24\x52\x79\x69\x28\x67\x9a\xfd\xba\x3f\x7b\xed\x6f\xe2\xa6\xbf\xeb\x9f\xb8\xfa\x7f\xff\xf8\x9f\x00\x00\x00\xff\xff\x3a\x17\x43\xfd\x0d\x44\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17421, mode: os.FileMode(420), modTime: time.Unix(1588088636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

