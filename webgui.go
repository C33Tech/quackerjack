// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\x7b\x77\xdb\x36\x96\xff\xdf\x9f\x02\x65\x26\x25\x55\x8b\xa4\x24\xdb\xe9\x44\x16\x95\x93\xda\x99\xd3\x74\xd2\x34\x75\x92\x9d\xe9\x3a\xde\x1c\x88\x84\x28\xd8\x20\xc0\x02\xa0\x1e\x49\xfc\xdd\xf7\x00\x7c\x3f\x24\xcb\x79\xec\xcc\x8e\xfe\x70\x28\xe0\xe2\xe2\xe2\xe2\xe2\x77\x1f\xa0\x32\xf9\xee\xfc\xb7\xb3\x37\x7f\xbc\x7a\x06\x16\x32\x22\xd3\x83\x89\xfa\x07\x10\x48\x43\xcf\x40\xd4\x50\x0d\x08\x06\xd3\x03\x00\x26\x12\x4b\x82\xa6\xbf\x27\xd0\xbf\x41\xfc\x1a\xfa\x37\x60\x79\x34\x71\xd3\xd6\x03\x45\x10\x21\x09\x81\xbf\x80\x5c\x20\xe9\x19\x89\x9c\xdb\x7f\x35\xa6\x45\xc7\x42\xca\xd8\x46\x7f\x26\x78\xe9\x19\xff\xb4\xdf\x3e\xb5\xcf\x58\x14\x43\x89\x67\x04\x19\xc0\x67\x54\x22\x2a\x3d\xe3\xf9\x33\x0f\x05\x21\xaa\x8c\xa3\x30\x42\x9e\xb1\xc4\x68\x15\x33\x2e\x2b\xa4\x2b\x1c\xc8\x85\x17\xa0\x25\xf6\x91\xad\xbf\xf4\x01\xa6\x58\x62\x48\x6c\xe1\x43\x82\xbc\xa1\x91\x0a\x46\x30\xbd\x01\x1c\x11\xcf\x10\x72\x43\x90\x58\x20\x24\x0d\xb0\xe0\x68\xee\x19\x4a\x2c\x31\x76\x5d\x21\xa1\x7f\x13\x43\xb9\x70\x66\x8c\x49\x21\x39\x8c\xfd\x80\x3a\x3e\x8b\xdc\xa2\xc1\x3d\x76\x8e\x9d\xa1\xeb\x0b\x51\xb6\x39\x11\xa6\x8e\x2f\x44\x2a\xf1\x17\xce\x34\x67\x54\xda\x70\x85\x04\x8b\x90\x7b\xec\xfc\xe8\x0c\xf4\x64\xd5\xe6\xfa\x7c\x7a\x16\x20\x37\x31\xf2\x0c\x89\xd6\xd2\xcd\x7b\x00\x88\x20\xa6\xe0\x23\x88\x20\x0f\x31\xb5\x25\x8b\xc7\xe0\x84\xa3\xe8\x14\xdc\xea\xee\x07\x98\x4a\xce\xc0\x47\x10\x60\x11\x13\xb8\x19\x83\x19\x61\xfe\x4d\xd1\x1d\x73\xe6\x23\x21\x30\x0d\xab\x34\x94\x51\x54\x90\x70\xa4\x76\xe4\xae\x6e\x47\x19\x10\xe2\x85\x28\x63\x30\x88\xd7\x60\xa8\xfe\xe4\x0f\xa7\x60\xc6\x78\x80\xb8\x3d\x63\x52\xb2\x68\x0c\x86\xf1\x1a\x08\x46\x70\x00\x1e\x3c\x7e\xfc\x38\xe7\xe8\xb0\x44\x12\x4c\x11\xf8\x98\xd1\x57\x09\x67\x24\x29\xa6\x76\x66\x38\xa4\x49\x04\x3e\x82\x18\x06\x01\xa6\xe1\x18\x9c\x54\x66\xe1\x30\xc0\x89\xc8\xda\x94\xd6\x6c\x48\x70\x48\xc7\xc0\x47\x54\x22\x7e\x5a\x08\x3a\x3c\xc9\x85\xcc\x1e\x9a\x13\x88\x18\x52\x27\x9d\x49\xef\x91\xc0\x1f\xd0\x18\x8c\x8e\x15\x65\xb7\x5e\x6b\x23\x03\x24\xfc\xfa\xd0\x54\x1b\x5a\x26\xc9\x21\x15\x73\xc6\xa3\x31\x48\xe2\x18\x71\x1f\x8a\x72\x81\x12\xce\xc4\xd6\x91\xb5\xd5\xd4\x46\x10\xdc\xd2\x89\x9f\x70\xc1\xf8\x18\xc4\x0c\xa7\x8b\x57\xf4\x13\x57\x1b\xd6\xf4\x60\xe2\xa6\xc7\x7f\x32\x63\xc1\x66\x7a\x70\x30\xa1\x70\x09\x7c\x02\x85\xf0\x0c\x0a\x97\x33\xc8\x41\xfa\x8f\x8d\xd6\x31\xa4\x81\x1d\x05\x79\x43\x00\xf9\x0d\x98\x85\xe9\xbf\x73\xbc\x46\x81\x32\xc2\xd4\x6c\x61\x9d\x87\x3d\xe3\x90\x06\xf9\x39\x79\x60\x54\x41\x66\xe2\x42\x3d\x64\x96\x48\xc9\x68\x63\x9c\x64\x61\x48\x10\x37\xb2\x13\x90\xd2\x18\x20\x80\x12\x66\x7d\x9e\xe1\x33\x42\x60\x2c\x50\xde\x0c\x79\xa8\xe0\xe9\x41\xca\x42\x3c\x5b\xc3\x28\x26\xe8\x1c\xcd\x61\x42\xa4\x01\x20\xc7\xd0\x56\x18\xc3\x19\x29\x26\xea\xa6\x4a\x97\x8c\x02\xcf\x98\x43\xa2\x26\xd0\xad\x04\xce\xd4\xf9\x7f\xa3\xa7\x57\xca\xc0\x21\x94\x98\xd1\xec\x58\x4e\xd4\xce\x77\x2f\xc3\xc6\xbe\x22\x9b\xb8\x8a\x44\x2f\xda\x4d\x57\x94\xa2\x58\x80\x0b\xd5\xe7\x6b\xca\x75\x5d\xae\x11\x07\xdb\x64\xce\xa6\x4f\x48\x63\x72\xb5\xa3\x11\xb7\x61\x22\x59\x46\xa3\x71\xac\x42\x65\x63\x89\x22\x00\x7d\x89\x97\xa8\x20\x69\xec\xa2\xad\x90\x2f\xdf\x41\xd7\x98\xbe\x44\x2b\x70\x91\x02\x40\x6d\xc5\x82\xdb\x8c\x92\x8d\x31\xb5\xfc\x84\x73\x44\x65\x2f\x5b\x6e\xb6\xcf\x9a\xb1\x4b\xf0\x0e\x49\xf6\x12\xe1\x81\x31\x9d\x14\x23\xe7\x10\xcc\xa1\x1d\x62\xb9\x48\x66\xb6\xf8\x33\x81\x3c\xdf\xac\x05\x0e\x02\x44\x3d\x43\xf2\x04\x29\xcd\xe3\x29\xb8\x40\x04\x41\x81\xc4\xbf\x8d\x40\xaf\x59\xc2\x7d\xb4\x4d\x9c\xef\x6c\x7b\xc7\xa6\x05\x9c\xc5\x01\x5b\xd1\x9d\x22\x16\x54\x99\x21\x96\x22\x6b\x73\xca\x7b\x07\xc3\xc6\xc9\x2a\x98\x67\xa2\x43\x11\xb3\x38\x89\x33\xe1\xbb\xcf\xc8\xf4\x3c\x1b\x54\x59\x4f\xdd\xb6\x0b\x61\x22\x44\x93\xea\x99\x22\x28\x98\x6d\x6a\xe2\x94\x0c\xaa\xcb\x2a\x18\xe8\xbd\x29\xd5\xff\xd4\x57\xc7\xb0\x36\xef\x5e\xc3\x28\x93\x0b\xc4\xb5\xfd\x7f\xc6\xf0\xd7\x2c\x42\x72\xa1\xdc\x28\x22\x02\x81\x05\xe2\xa8\xbe\x74\x37\xc0\xcb\xae\x9d\xb5\xed\xec\xc4\xba\x09\xc9\x9e\xf2\xbd\x9e\x28\xb7\x50\xd8\x12\xe3\x91\x8d\xa9\x76\x8c\xd1\xc6\x1e\xa9\x3f\x24\xb4\x07\xe5\x61\xc6\x34\x4e\x64\x8d\x3c\xc3\x37\x75\xee\x45\x64\x8f\x8c\x4a\x04\x61\x80\x98\x40\x1f\x2d\x18\x09\x10\xf7\x8c\xd7\x08\x72\x7f\x51\x87\xb6\xac\xad\xe0\x5f\x87\xe6\x99\xa4\x60\x26\xa9\x2d\x90\xcf\x68\x00\xf9\xa6\x90\x4a\x44\xf6\x20\x9f\x4a\x24\xb3\x08\x4b\x63\x9a\xf2\x2a\x81\x2e\x5d\xb1\x12\x32\x7d\x4e\xb5\x90\x29\x69\xe2\x52\xb8\x54\x5e\x48\xc7\x36\x9c\x29\x23\x54\x8f\x46\x89\x8b\x54\x42\x4c\x11\x37\x4a\xc8\x54\x26\xac\x63\x9d\x1c\x01\xb5\xf2\xd4\xa6\xb0\xc0\x33\x42\x15\x9f\xa5\x5b\xeb\x19\xe5\x92\x2a\xf6\xa8\x15\x16\x72\x96\xc4\xd5\x43\xa4\x55\x01\xe6\x8c\x7b\xc6\x73\xa5\xde\xb7\x17\x2f\x8c\xe9\x33\xed\x70\x21\xf8\x83\x25\x6f\x92\x19\x02\xff\x85\x03\xc4\xc0\xdb\x8b\x17\x13\x57\xd3\x57\xc6\xa7\x7b\x92\xea\x22\xe1\xc4\xe8\xda\x9e\xf4\xf8\x15\xec\xd3\x3d\x50\x31\x03\xc7\xb3\xf4\x2c\x24\x9c\xfc\x8c\x48\x6c\x14\x41\x72\x50\x95\x51\x44\x90\x10\xcd\xa3\xa0\xab\xce\xa2\x76\x3b\x0d\x18\xa2\x44\xa2\xc0\x98\x66\x0e\x63\x0c\xf2\x48\x75\xb5\x5a\x39\x1b\x96\xc8\x64\x86\x74\x78\xba\x82\xd2\x5f\x3c\x59\x7a\xec\xe7\xf0\xe4\xf5\x2f\x7f\x5c\xfc\xfc\x74\x30\x71\xf5\x2c\xa5\x01\x57\xad\x39\x33\x8c\xda\x8e\x37\xcd\x24\xe6\x38\x82\x7c\xd3\x46\x47\x9f\x45\x11\xa2\x52\xd8\x6c\x07\x34\xfa\x90\x02\xb9\x40\xe0\x2c\x23\xde\x66\x48\x99\x5c\x55\x9b\x28\x03\xdc\xdc\x30\x2a\x9b\x4e\x18\x0c\xca\x9e\x7a\x1f\x67\x2b\xa3\x1b\xba\x7c\x46\xec\x28\xb0\x8f\x94\x74\x15\x3d\x74\x12\x3d\xaa\xa3\x57\xe9\x96\x09\x16\x32\xb5\x37\x50\x3e\xda\x73\x92\x88\x45\x6d\x48\x0d\xf0\x2b\x94\x29\xfe\xd4\x57\x68\xfb\x0b\xe4\xdf\xd8\xca\xd0\x5a\x7a\x4e\xdd\xcf\x2e\x2d\x9f\xa9\xc1\x0a\xc1\xe6\x8c\x83\x25\x54\xd1\xb6\xb6\x69\x3c\xad\xe2\xd5\xfd\x65\x4a\xf7\xcc\xf6\x59\x42\xe5\x17\xcb\xe5\x17\x16\xf0\x15\x44\x52\x40\xae\x4c\xe0\x73\xa4\x3a\xcf\xc6\x2a\xc1\xbe\x8a\x50\x28\x62\xd7\xf8\x73\x24\x79\x4a\x21\xd9\x7c\xd0\xae\x47\xb1\xf8\x22\x21\x04\xa2\x12\xab\xb5\x7c\x99\x20\x05\x9b\xa6\x30\xa9\x97\xab\x36\x54\x8e\x4c\xcc\x59\xc8\x51\x91\xd9\xee\x22\xb1\x55\x4a\x52\xfd\x62\x0b\xc9\x71\x8c\x82\x7a\x23\xa4\x38\x82\x0a\xf4\x32\x2f\x92\x77\xce\x20\xcf\x96\xb1\x84\x24\x41\x94\xad\x3c\xe3\xa8\xda\x12\x61\xea\x19\x83\x5a\x0b\x5c\x7b\xc6\x70\x30\x30\x80\xce\x99\xb2\xba\xc4\x18\x1c\x3d\x6c\xc1\x40\x03\x1f\x5b\xce\xbf\xf8\x52\x3c\x76\xe0\x56\x9a\x56\x77\x60\x16\x67\x2b\x90\xe6\xda\x9d\xb0\x95\xe1\xce\x70\x50\x05\xaf\xc5\x28\xef\x5e\x2a\x5f\xf5\x5e\x57\x73\xd2\xa0\x25\xf3\x5e\x6f\x54\xcb\xc4\x5d\x8c\x2a\xa3\xe2\x82\xe7\x02\x52\x8a\x48\x3e\xec\x29\x38\x4b\x1b\x26\x6e\xdc\xed\x11\xda\xf2\x8c\x8c\x62\xdb\xbb\x14\xb0\x1d\x7a\x3b\x78\x1d\x37\x71\x39\xdb\x91\x05\xc2\xe1\x42\x8e\xc1\xd1\x40\x25\xc9\x75\xe0\xf5\x21\x5d\x42\xa1\x35\xeb\x2f\x20\x97\x6f\x98\x84\xe4\x75\x61\xed\x20\xad\x32\x19\xc7\x6a\x83\x53\x3e\x9e\x71\x34\x18\xa8\xbd\x4d\x87\xde\xbd\x9b\xdd\xb2\x02\x21\xa1\xdc\x65\xd2\x75\x3f\xb3\x95\xd1\x23\xa0\x1e\x44\x94\x3d\xac\x45\xc3\xb5\xb4\x07\xa6\x25\x88\x0e\xa2\x66\x76\x9a\x64\x38\x20\x95\x4e\xde\xe7\x60\x66\x4c\x6d\xbb\xcc\x51\x77\x72\x50\xc1\x8a\x31\xd5\x2a\xad\xb8\xe8\xee\xa1\xad\xb3\xb2\xbd\xf1\x5f\xa2\x84\x98\x09\xac\x32\xe0\xf7\x88\x86\x30\x44\x9f\xa7\x8a\x57\x19\x13\xf0\xac\x64\xf2\xa5\x0a\xe9\x6a\xfa\xb7\x34\xa3\xdc\x80\xde\xc7\x88\xbf\x0f\xe0\xe6\xde\xda\xcb\x4d\x08\xbc\x42\x1c\x9c\xc3\xcd\xff\x57\x53\x0a\xb0\x20\xf8\x06\xbd\xe7\x50\x62\x76\x6f\x2d\x9c\xa7\xa3\xc1\x85\x1a\xfd\x55\x8d\xe7\x4e\xcc\xba\x03\x5f\x47\x27\xfb\xe0\x6b\xfc\x02\x8b\x12\x58\x87\x83\xc1\xc3\x12\x59\x47\x27\xa5\x1f\x6d\x72\xbd\x03\x70\xf7\x08\xa2\x17\x8c\xe3\x0f\x2a\x45\x24\x40\xc2\x59\x1d\x7b\xb7\xc7\x42\x60\x4e\xd0\xda\x9e\x63\x42\x40\xa3\xa7\x48\x5e\xf2\xd2\xe2\xcc\x33\x56\x8c\x07\x42\x61\x5e\x0c\xfe\xa1\x1e\x5b\x81\xce\x1e\xf3\x54\xf9\x65\xd1\x9f\xe2\xf7\xac\x1d\xc5\x95\xc5\x81\xaf\xe0\x3e\x87\xa3\xb6\xee\x9b\x1e\xb3\xb5\x9f\xe7\x10\x93\x4d\xdb\x5f\x36\xb6\x75\xd0\xb1\xad\x83\xee\x6d\xdd\x11\x06\x4d\x5c\x95\xed\xa7\xe1\x90\xca\x82\x63\x09\x04\xf7\xcb\x9b\x15\x9f\x05\xc8\xb9\xfe\x33\x41\x7c\xa3\xf3\xd5\xf4\xd1\x3e\x72\x4e\x9c\x81\xbe\x37\xb9\x16\x06\xc0\x54\xa2\x90\x63\xb9\xf1\x0c\xb1\x80\xa3\x93\x47\xf6\xfa\xe5\x87\x97\x23\x78\x4c\xe4\xcd\x4f\xc7\xc7\xbf\xfa\xee\x2f\x1f\x8e\xe2\x37\xc7\xf8\xed\xd0\x8f\xd0\xc5\xe0\x6f\x37\xff\x14\xc7\x31\x4f\xdc\x5f\xd6\xf0\x77\xcf\x00\x3e\x67\x42\x30\x8e\x43\x15\x09\x42\xca\xe8\x26\x62\x89\xd0\x65\x5b\x2d\xd2\x74\x9b\x74\xf7\xb8\x61\xba\xae\x5e\x30\xcd\x12\x1a\x10\x94\xcb\x7f\xf7\x3c\x7e\x40\xaf\x85\xe3\x13\x96\x04\x73\x02\x79\x9a\xba\xc3\x6b\xb8\x76\x09\x9e\x09\xf7\x4c\xed\x9a\x73\x2d\xdc\x91\xf3\xd8\x39\xca\xbe\xb6\x99\x57\xb8\x57\xae\x97\xae\xe1\x12\xa6\xad\xda\x26\x96\x50\x25\x5e\x84\x71\x01\x3c\xf0\x51\xef\x19\x47\xc1\x18\x18\x3c\x9c\x59\xa3\x93\x93\x3e\x78\xfc\xb8\x0f\x86\x47\xa3\x9e\xd1\xd7\xbd\x8c\x43\x1a\xa2\x2a\xc1\xf0\xe4\x71\x1f\x3c\x3a\xce\x09\x36\x88\x10\xb6\xaa\x12\x8c\x06\x27\x7d\xf0\xd7\x47\x39\x41\xc8\x11\xa2\x59\xff\x8f\x6a\xfc\xe3\x91\xfe\x93\xf7\xcf\x48\x92\xf3\x3f\x39\xee\x83\xe1\xa3\x51\x1f\x8c\x8e\x4e\xf2\xee\x38\xe1\xba\xc4\xa1\x09\x86\x27\x47\x7d\x30\x1c\x28\x8a\x93\x93\xca\x04\x9b\x7c\xfe\xc1\x50\xcd\x7f\xa4\xfe\xfc\xd8\x33\x0e\x00\xb8\x55\x7a\x99\x27\x54\x17\x8c\x40\x88\xe4\xdb\x8b\x17\xaf\x20\x87\x11\x92\x88\x5b\x14\x46\xa8\x57\xe8\x41\x26\x9c\x82\x00\x29\xa3\x7c\x7b\xf1\xfc\x8c\x45\x31\xa3\x88\x4a\xcb\xa2\xba\x36\x1e\x3e\x5b\xc7\x96\x79\xf9\xe4\xd3\xf7\x57\x26\x38\xd4\x15\x1c\x70\x08\x4c\x4f\x7d\x31\xad\xcb\xff\xf9\xfe\xf4\xea\xf0\x49\xcf\xfa\xfe\xd3\x83\x4f\xa7\x9f\xfe\xd2\x33\x7b\x0e\x5a\x23\xdf\x22\xcc\xd7\xd7\x09\x8e\xd0\x95\xb3\xde\xa7\x4f\x97\x7d\xc3\xb8\xea\x5d\x0e\xaf\x1c\x8e\x74\xed\xce\x72\xdf\x1d\xba\x61\x1f\x98\x0f\x47\x03\xb3\xd7\xfb\xf4\x89\x26\x84\xb4\x84\x0f\x96\x96\x42\x99\x3e\x08\xd2\x0b\x82\x73\x28\x61\x43\x78\x4d\x00\x9e\x68\x34\x02\xe3\x1a\xe1\x69\x8b\x9f\xe4\x09\xf5\xa1\x44\x96\x90\xbc\x0f\x22\xb8\xce\x99\xe1\xb9\x6a\x72\x08\xa2\xa1\x5c\x80\x69\xb5\x0b\x00\x21\x39\xf0\xd4\x5f\x47\x24\x33\x95\xaa\xd1\xd0\x1a\x64\xc3\x0f\x81\xe1\x38\x8e\x71\xaa\x49\x6f\x0f\xaa\x92\x09\xc9\x0b\x09\x7c\x46\x85\x04\x82\x20\x14\x03\x0f\x58\x11\x26\x04\xa7\xc5\x47\xd1\x03\xde\xb4\xbe\x24\xa5\xfb\x57\x9c\x45\x58\x20\x8b\x23\xc1\xc8\x12\x29\x1a\x81\xe4\x1b\x1c\x21\x96\xc8\xbc\xb5\x0f\x6a\x8c\x7a\xf9\x6c\x2b\x4c\x03\xb6\x72\x98\xce\xf1\x81\x57\xac\xdf\xca\xd7\xa4\xce\xc4\x12\xab\xae\xa6\x79\x98\x4b\x1c\x98\xbd\xd3\x5c\x29\x4b\x1c\x94\x7a\xb8\xfe\x5d\x41\x95\x65\xa6\xd7\xb2\x66\xcf\x59\xe0\x00\x59\x19\x71\xa5\xbb\x4c\xc9\xcd\x9e\x23\x16\x6c\xa5\x68\x32\x22\x82\x24\xc0\x3e\xa3\xc0\xeb\xa2\x2f\x6b\x40\x00\x3b\x73\x68\x16\xbc\x53\xfd\x6d\xe4\x05\x0a\xd1\x1a\x78\xc0\xd5\x40\xf2\x64\xfc\xce\x7d\xe7\x5a\xab\xd5\xea\x9d\xd3\x7b\x92\x55\x01\xdf\x29\x2c\x79\x97\xd6\x01\xdf\x3d\x59\x7a\x97\xd0\xfe\xf0\xd4\xfe\xef\x81\xfd\xf8\xfd\x3b\xfb\xea\xe3\xa3\xfe\xad\x9b\x73\xc5\x73\xeb\xbb\x25\x0e\x9c\x48\xd1\x5a\x19\xf7\x5e\xb9\x60\xa0\x45\x75\x38\x8a\xd8\x12\x9d\x29\x3f\x64\x99\x95\x62\x42\x29\x5e\x46\x08\x83\xa0\xa4\x52\xce\x46\x54\x49\xfe\x52\x5b\x2a\x70\xaa\xc9\xbe\xd9\x73\x7c\x35\x4e\x7b\x26\xb3\x0f\xcc\xd1\xe0\xa1\xd9\xeb\x88\xb5\xba\x3e\x0e\x94\x92\x5b\x66\xad\x24\x60\x2a\x3c\xd8\x9b\x41\x6d\x85\x5d\x95\x89\x7b\xc8\x52\xe8\x40\xdf\xab\xd2\x10\xf1\x52\x09\xb7\xe9\x05\xc3\x57\xd1\x6f\x6a\x2a\x5d\xb4\xff\x02\x45\x17\x0b\x3c\xa8\x1d\x06\x27\x44\xf2\x97\xd7\xbf\xbd\xb4\x0c\x17\xc6\xf8\xc9\x52\x45\x24\x87\xea\x4c\xd5\x26\x74\x02\x46\x91\x55\x1c\x52\x8e\x44\x5c\xb5\xc1\x4c\x01\x73\xeb\x3b\xd5\xe3\x3c\xe3\x9c\xf1\x76\x7f\x7a\xb4\x84\x44\xb1\xf2\x73\x97\xdb\x8b\x98\x7d\xb0\xb3\x9a\xd8\x6f\x97\xf5\xfa\xdd\x45\xb6\xab\x96\x04\x73\xc6\x2d\x25\x85\x3a\xa1\x83\x53\xb0\x06\x93\x54\xa0\x0c\x57\x4f\xc1\xfa\xf0\xb0\x4b\xf2\x6e\x58\x30\x0f\xf5\xe0\xcb\xf5\xd5\xa1\xd9\x80\x83\x9a\x62\xf6\x35\xa1\xc6\x90\x3d\x8d\xa9\xfc\xdc\xc7\xac\xac\xf5\xe1\xa8\xf7\xc3\x68\x70\x68\xee\x6f\x5d\xe5\x67\x8b\x9d\xe5\x4c\x3b\xa4\xbb\x3d\x68\x35\xdd\xeb\x14\xa8\x50\xf8\xde\x82\x6e\x11\x73\x38\xd8\x1b\x78\x0a\x4e\x5f\x0f\x80\x4a\xe1\xaa\x40\x24\x12\x5f\x29\xc2\x2c\x1d\x51\xf9\xd1\x5e\xd9\x1a\x0e\x06\x83\x9e\x23\x17\x88\x5a\x56\xc5\x25\xd7\x3f\x01\x87\xab\xf4\x8d\x81\xf4\x94\x76\x6c\x44\xab\xad\x85\x79\xf9\x07\xcf\xad\xf2\x40\x03\xcf\x03\xe6\x4b\x56\x54\xe3\xc1\x9c\x25\x34\xd0\xb7\x06\x72\x81\x05\x88\x99\x90\x8e\xb9\xff\xe1\xd9\x76\xfc\xbf\xf5\x41\x6a\x79\xbd\xf2\x73\x2f\x83\x3c\xfe\x0c\x7b\xdc\x6a\x91\xc7\xf7\x36\xc8\x6f\x62\x92\x77\x79\xc7\xf2\x73\xdb\xb4\xa1\xda\xf7\xdb\x86\xfb\x98\x43\x4c\xac\x56\x8c\x57\x7e\x94\x7d\x68\x80\x7b\xfe\x65\x46\x52\xf0\xb8\x87\x95\x94\x63\xba\xcd\xa4\x43\xd4\x80\xec\x21\x67\xee\xaf\xb6\x88\x9a\xf2\xb8\x87\x9c\xd9\x80\xbd\x84\xbc\x97\x21\x3f\xba\xb7\x21\x6f\x31\xe2\x47\xf7\x34\xe2\xaf\x6e\xc0\xfb\x18\x6f\x0e\x7f\x99\x3f\x2a\x13\xb9\x12\x38\x83\x4a\x0e\x97\xdb\x66\xeb\x4e\xe3\xf9\x39\xf0\x40\xc0\xfc\x44\x7d\x51\x51\xd4\x33\xa2\x0b\xd1\x3f\x6d\x9e\x07\x96\xd9\x31\xc0\xec\x29\xaa\x33\x46\x25\x5a\x4b\xcb\x1c\x05\xa5\x64\xc5\x14\xf5\x32\xd0\x1e\x53\xd4\x07\xec\x33\x45\x56\x39\xdc\x4b\x7c\x4d\xd9\xc9\x34\xe3\xea\xba\xe0\x57\x24\xa1\x52\x58\x23\xc5\xca\xdf\x57\x5d\x8c\x9c\xca\x9d\x98\xd9\x73\x34\x17\x35\xc0\xc9\x47\x3a\xfa\x72\xac\x95\xa4\xe5\x1c\x62\xa7\x76\x3f\xa6\x92\x3a\x19\x11\xcb\x9c\x40\x90\xbf\x85\x48\xd1\xaa\xf9\x7a\x70\xf3\xa5\x8b\x8c\x87\x6b\x1e\xd6\xe7\xce\xae\xda\x9e\x9f\x1f\x9a\xc6\x74\x4b\xa7\x96\xef\xd0\x9c\xb8\x70\x6a\xb6\x73\xc9\xfa\xb5\x4e\x6d\x85\xda\x00\xf2\x72\xbb\x23\xd9\x0b\xe6\x43\x82\x5e\xa7\xf9\x79\xaf\x23\x2d\xed\xb8\x1c\xc9\x19\xfe\x0a\xe5\xc2\xe1\xca\xe5\xa6\xbc\x8b\x4d\x77\xf2\x51\xc0\x05\x0d\xbd\x56\xa7\x07\x3f\xe8\xb0\xe7\xd0\x78\x68\xb4\x27\x6e\xde\x29\x6c\x9b\x34\x63\xf6\x74\x19\xbe\x42\xfc\x1c\x6e\x3a\xd6\x50\xab\xca\x6f\xe3\x53\x17\x31\x2b\xc5\x8b\xee\x05\xbc\xd0\x5d\x35\xe9\x4b\xeb\x7b\xc3\x62\xa0\x8c\x54\x54\xcc\x5c\xb2\x58\xd7\x8c\x81\x07\x7e\x9b\x5d\x23\x5f\x3a\x37\x68\x23\xd2\x89\xff\x8e\x36\xba\xb4\xbc\x13\x57\x1c\xa1\x50\xa0\x70\x57\xb0\x0f\x66\xdd\x61\x4d\xf5\x83\xe7\xa0\x3e\xc5\x25\xbc\x02\x53\x50\x6f\x9a\x5d\xdd\xcd\xa8\x28\xb2\xd8\xc3\xae\x18\xa5\xfa\xc9\x02\xb7\xf6\xd4\xb3\xf6\xd4\xf0\x3e\x53\xdf\x3d\x73\x3b\x48\xed\x64\x34\xd8\xc9\xe8\xf6\x8e\x6d\x20\xd8\x47\xd6\x40\xc5\xeb\xf5\xf2\x8c\x64\xb1\xae\xe2\x77\xed\xb0\xee\x38\x53\x31\xc2\x37\xdc\xe3\x72\x92\xca\x2e\x57\x1a\xbf\xf1\x3e\xd7\x66\xea\x98\xfe\x3f\x69\xaf\xab\xae\x08\x78\xba\xf2\xa8\x8b\xed\x56\xdd\x9b\xf5\x2b\x0b\x96\x9b\x18\x8d\x81\x59\xde\x53\xfd\x04\xb9\xd9\x2f\xba\x95\xb6\xc6\x35\xfd\xe8\xd7\x0a\xc5\xb8\x40\x8e\x7e\xa5\x4f\x51\x0b\x24\xc5\x18\x5c\x36\x55\x3a\x83\xfe\x4d\xa8\x51\xed\x8c\x11\xc6\xc7\xa9\x60\xce\x02\x91\x18\x71\xe1\xe8\x92\xbe\x95\x55\x3a\xd3\xfa\xbe\xc3\x51\xd0\x73\x20\x89\x17\xd0\x1a\x38\x27\x3d\x87\x87\xb3\xdc\x1d\xf4\x9b\xdc\xf5\xcf\x2c\x32\xce\x2d\x2e\xdd\xd4\xff\x48\x5f\x9a\x19\x36\x7b\xd3\x25\xe7\xcb\x73\x22\x18\x5b\x6b\x95\x41\xd6\x21\x62\x7d\x55\xdd\xa3\xdb\xb2\x7a\x72\x5b\xf2\x63\xb1\x3a\x2f\xa2\xae\xbf\x08\x62\xfd\xc6\xe8\x53\x11\x23\x5f\xea\x1b\xd5\x31\xd0\x6f\x2a\x57\x05\x51\xa9\x24\xa3\x02\x2f\xd1\x18\x48\x9e\xd4\xfa\xb4\x6b\x1f\x83\x8f\xfa\x4d\xca\x31\x30\x8a\x8b\x3f\xa3\x5f\xfe\x04\x44\x0d\xaa\xca\xa2\x0c\x24\x44\x34\x18\x37\x8c\xbd\x18\xa0\x45\xa8\x2e\xa9\x3a\x56\xff\xb8\x49\x34\xc7\xae\x9f\xae\x51\xd7\x5e\xd7\x84\x68\xaa\x57\xb3\x7a\xa1\x8c\xa8\xc9\xae\x35\xb4\x99\x36\x35\x59\x85\x1c\x07\x2f\x30\x6d\x0b\x76\x27\xa7\x7a\x94\x7b\x55\x67\xbc\xf9\x86\xcb\x6a\x6d\x74\xfa\x99\x33\x2a\x5f\x67\x3f\xaa\xf9\x3a\xab\x6e\x6e\x67\xd7\xb2\x0f\xba\xba\xf2\xa7\xdb\x12\x5a\xf2\x78\x25\x21\xf9\x6f\x7a\x54\x5e\x44\xb0\x7f\xd3\x9d\xa7\x76\xd2\x23\xe8\x2f\x4a\x72\x1c\xac\xeb\xb0\x9b\x8d\x91\x0b\x2c\x7a\xf5\x5c\x67\xcb\x0d\x78\x35\x57\xb9\xad\x66\x75\x35\x4e\x65\x92\xb3\x07\x1b\xed\x2e\xe1\xac\xcc\x55\x33\x1e\x3a\x81\xcb\xef\xc7\x6b\x19\xa4\xf2\x32\x7a\x84\x07\x4c\x8d\x0b\x8d\x9a\x4e\x15\x77\x1d\x0d\x20\x29\x7c\x02\xaf\x00\x98\xd3\x9d\xe4\x39\xa2\x5e\x0e\xae\xf4\x73\x65\xe0\x0e\x64\xda\xca\x33\x43\x24\x47\x43\x88\x0e\x37\x81\x07\xcc\x02\x40\xcc\xad\x03\x93\x38\x80\xb2\x72\x3b\x54\xf3\xb3\xb9\x06\x74\x7d\xf9\x5e\x1a\xd0\x7e\xf8\x73\x34\xa0\x07\x36\x34\x50\x71\xea\x9f\xa7\x03\xcd\xe0\x33\x74\xf0\xb1\x06\xdc\xda\xbf\xeb\xe3\x77\xba\xeb\x50\xb9\x2e\xd0\x09\x29\x28\x92\x93\xd4\x25\x56\xdc\x79\x50\x4b\x58\xff\x8e\x36\x9d\x61\x7a\x3d\xad\xed\xa5\xc1\x5a\xaf\x0c\x12\x8e\x06\xbd\xd3\x76\x94\x50\x1f\xd5\x0e\x16\x9a\xd9\x75\x47\xcc\x40\x30\x45\x7b\x85\x0a\xed\x75\xec\x15\x34\x90\x14\x4d\x8d\xe2\x0d\xb6\x3c\x3d\x33\xea\x90\xd8\x0a\x2d\xea\x01\x80\xbe\xbe\x6f\x8c\xd8\x1e\x2e\x74\x50\xa7\x0b\x6b\x2f\xa2\x61\x7e\x75\x8d\x5d\xae\xaf\x8a\x64\xb3\x11\xae\xcc\x31\x21\x5d\xfe\x16\x74\x2f\xff\x25\x0a\xe1\x17\x2c\xbf\x15\xff\xdc\x27\x56\xfa\xec\xa5\xd3\x4c\xe8\xfd\x96\xbe\x7f\xf4\xf4\x25\x41\x4c\x33\x6e\xfa\x1b\xe6\x42\x82\xa3\x01\x38\x87\x1b\xd1\x3c\x8c\xbb\x63\xa9\x5d\xe1\xd9\x7e\x01\xde\xff\x7d\x44\xd5\x19\x11\x7c\xbb\xe0\x62\xbf\x98\x2a\x87\x12\x16\x42\x8e\xe5\x22\xc2\xbe\xd9\x8a\xc7\x77\xc6\x4e\x5f\x16\x77\xe9\x33\x96\x26\x15\x63\x60\xe6\x07\xcc\xfc\x4a\x71\x93\xae\xb9\x48\x48\x76\x40\x7c\x47\xed\xb3\x2b\x71\xab\x17\x53\x3b\xb0\x38\x60\x49\xb8\xa0\x89\xdc\x89\xc7\x5b\x91\x36\x25\xbd\xdc\x52\x2b\xeb\x83\x46\x47\x7e\xb8\x5b\x1d\x09\xbd\xa1\x6c\x45\xaf\xee\x00\xa8\xcb\x86\x7e\xef\x44\xe0\x26\x49\x47\x4e\xd7\xe2\xb1\xa9\x11\xd4\xf6\xac\x26\x5f\xee\xa4\x2e\x0b\x3f\x63\xf4\x0b\xcc\x55\x8f\x09\x92\x1c\x12\xe3\xea\x2e\x68\xda\x85\x09\x3e\xe6\x7e\x12\xcd\x11\x47\xd4\x57\x41\xfe\x0f\xba\xc8\xf7\xea\x79\x0d\x53\x98\xd4\xaf\x59\x8d\x81\xdd\xd1\xdb\x4e\xfa\x6a\x86\xb5\x1b\xae\xd2\xdf\x9e\x68\xde\xf5\x8d\xcf\x7e\x94\xf2\x5a\x1d\xa2\x2e\x70\xc9\xfa\x2f\x94\x68\xa8\x95\x4a\xed\x95\x34\xd4\xdf\x1f\xda\xf2\x8e\x51\xfa\x0b\x93\xca\xfb\x45\x39\xd3\xec\xbf\x06\xc8\xde\x10\x9c\xb8\xe9\x7f\x0a\x30\x71\xf5\x7f\x1d\xf2\xbf\x01\x00\x00\xff\xff\x6e\xa4\xc6\xe4\x4a\x44\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17482, mode: os.FileMode(420), modTime: time.Unix(1588089150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

