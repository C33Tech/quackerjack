// Code generated by go-bindata.
// sources:
// static/gui/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticGuiIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5c\x7b\x77\xdb\x36\x96\xff\xdf\x9f\x02\x65\x26\x25\x55\x8b\xa4\x24\xdb\xe9\x44\x16\x95\x93\xb1\xb3\xa7\x99\xc9\xb4\x19\x27\xd9\x6e\xd7\xf1\xe6\x40\x24\x44\xc1\x06\x01\x16\x00\xf5\x68\xe2\xef\xbe\x07\xe0\xfb\x21\x59\x76\x9c\xed\xee\xea\x0f\x87\x02\x2e\x2e\x2e\x2e\x2e\x7e\xf7\x01\x2a\x93\xef\xce\x7f\x39\x7b\xff\xdb\xdb\x57\x60\x21\x23\x32\x3d\x98\xa8\x7f\x00\x81\x34\xf4\x0c\x44\x0d\xd5\x80\x60\x30\x3d\x00\x60\x22\xb1\x24\x68\xfa\xaf\x04\xfa\x37\x88\x5f\x43\xff\x06\x2c\x8f\x26\x6e\xda\x7a\xa0\x08\x22\x24\x21\xf0\x17\x90\x0b\x24\x3d\x23\x91\x73\xfb\xaf\xc6\xb4\xe8\x58\x48\x19\xdb\xe8\xf7\x04\x2f\x3d\xe3\x3f\xec\x0f\x2f\xed\x33\x16\xc5\x50\xe2\x19\x41\x06\xf0\x19\x95\x88\x4a\xcf\x78\xfd\xca\x43\x41\x88\x2a\xe3\x28\x8c\x90\x67\x2c\x31\x5a\xc5\x8c\xcb\x0a\xe9\x0a\x07\x72\xe1\x05\x68\x89\x7d\x64\xeb\x2f\x7d\x80\x29\x96\x18\x12\x5b\xf8\x90\x20\x6f\x68\xa4\x82\x11\x4c\x6f\x00\x47\xc4\x33\x84\xdc\x10\x24\x16\x08\x49\x03\x2c\x38\x9a\x7b\x86\x12\x4b\x8c\x5d\x57\x48\xe8\xdf\xc4\x50\x2e\x9c\x19\x63\x52\x48\x0e\x63\x3f\xa0\x8e\xcf\x22\xb7\x68\x70\x8f\x9d\x63\x67\xe8\xfa\x42\x94\x6d\x4e\x84\xa9\xe3\x0b\x91\x4a\xfc\x95\x33\xcd\x19\x95\x36\x5c\x21\xc1\x22\xe4\x1e\x3b\x3f\x3a\x03\x3d\x59\xb5\xb9\x3e\x9f\x9e\x05\xc8\x4d\x8c\x3c\x43\xa2\xb5\x74\xf3\x1e\x00\x22\x88\x29\xf8\x0c\x22\xc8\x43\x4c\x6d\xc9\xe2\x31\x38\xe1\x28\x3a\x05\xb7\xba\xfb\x09\xa6\x92\x33\xf0\x19\x04\x58\xc4\x04\x6e\xc6\x60\x46\x98\x7f\x53\x74\xc7\x9c\xf9\x48\x08\x4c\xc3\x2a\x0d\x65\x14\x15\x24\x1c\xa9\x1d\xb9\xab\xdb\x51\x06\x84\x78\x21\xca\x18\x0c\xe2\x35\x18\xaa\x3f\xf9\xc3\x29\x98\x31\x1e\x20\x6e\xcf\x98\x94\x2c\x1a\x83\x61\xbc\x06\x82\x11\x1c\x80\x27\xcf\x9f\x3f\xcf\x39\x3a\x2c\x91\x04\x53\x04\x3e\x67\xf4\x55\xc2\x19\x49\x8a\xa9\x9d\x19\x0e\x69\x12\x81\xcf\x20\x86\x41\x80\x69\x38\x06\x27\x95\x59\x38\x0c\x70\x22\xb2\x36\xa5\x35\x1b\x12\x1c\xd2\x31\xf0\x11\x95\x88\x9f\x16\x82\x0e\x4f\x72\x21\xb3\x87\xe6\x04\x22\x86\xd4\x49\x67\xd2\x7b\x24\xf0\x1f\x68\x0c\x46\xc7\x8a\xb2\x5b\xaf\xb5\x91\x01\x12\x7e\x7d\x68\xaa\x0d\x2d\x93\xe4\x90\x8a\x39\xe3\xd1\x18\x24\x71\x8c\xb8\x0f\x45\xb9\x40\x09\x67\x62\xeb\xc8\xda\x6a\x6a\x23\x08\x6e\xe9\xc4\x4f\xb8\x60\x7c\x0c\x62\x86\xd3\xc5\x2b\xfa\x89\xab\x0d\x6b\x7a\x30\x71\xd3\xe3\x3f\x99\xb1\x60\x33\x3d\x38\x98\x50\xb8\x04\x3e\x81\x42\x78\x06\x85\xcb\x19\xe4\x20\xfd\xc7\x46\xeb\x18\xd2\xc0\x8e\x82\xbc\x21\x80\xfc\x06\xcc\xc2\xf4\xdf\x39\x5e\xa3\x40\x19\x61\x6a\xb6\xb0\xce\xc3\x9e\x71\x48\x83\xfc\x9c\x3c\x31\xaa\x20\x33\x71\xa1\x1e\x32\x4b\xa4\x64\xb4\x31\x4e\xb2\x30\x24\x88\x1b\xd9\x09\x48\x69\x0c\x10\x40\x09\xb3\x3e\xcf\xf0\x19\x21\x30\x16\x28\x6f\x86\x3c\x54\xf0\xf4\x24\x65\x21\x5e\xad\x61\x14\x13\x74\x8e\xe6\x30\x21\xd2\x00\x90\x63\x68\x2b\x8c\xe1\x8c\x14\x13\x75\x53\xa5\x4b\x46\x81\x67\xcc\x21\x51\x13\xe8\x56\x02\x67\xea\xfc\xbf\xd7\xd3\x2b\x65\xe0\x10\x4a\xcc\x68\x76\x2c\x27\x6a\xe7\xbb\x97\x61\x63\x5f\x91\x4d\x5c\x45\xa2\x17\xed\xa6\x2b\x4a\x51\x2c\xc0\x85\xea\xf3\x35\xe5\xba\x2e\xd7\x88\x83\x6d\x32\x67\xd3\x27\xa4\x31\xb9\xda\xd1\x88\xdb\x30\x91\x2c\xa3\xd1\x38\x56\xa1\xb2\xb1\x44\x11\x80\xbe\xc4\x4b\x54\x90\x34\x76\xd1\x56\xc8\x97\xef\xa0\x6b\x4c\x7f\x46\x2b\x70\x91\x02\x40\x6d\xc5\x82\xdb\x8c\x92\x8d\x31\xb5\xfc\x84\x73\x44\x65\x2f\x5b\x6e\xb6\xcf\x9a\xb1\x4b\xf0\x0e\x49\xf6\x12\x21\x07\xdb\x10\xcb\x45\x32\xd3\xe0\x1a\xe1\x1b\x34\x27\x1b\x4a\xdd\xdf\x4b\xf3\x72\x39\x22\x08\x0a\x24\x8c\xe9\xa4\x98\x69\x0e\xc1\x1c\xda\xe9\x50\x5b\xfc\x9e\x40\x9e\x6f\xee\x02\x07\x01\xa2\x9e\x21\x79\x82\xd4\x4e\xe1\x29\xb8\xc8\x18\xfc\x49\x0b\x78\xb0\xdc\xef\x58\xc2\x7d\xb4\x4d\xea\xef\x6c\x7b\x87\x2d\x04\x9c\xc5\x01\x5b\xd1\x9d\x2b\x29\xa8\x32\xfb\x2e\xcf\xb7\xb6\xd2\xbc\x77\x30\x6c\x1c\xd8\x82\x79\x26\x3a\x14\x31\x8b\x93\x38\x13\xbe\xfb\xe8\x4d\xcf\xb3\x41\x95\xf5\xd4\x8f\x4c\x21\x4c\x84\x68\x52\x3d\xaa\x04\x05\xb3\x4d\x4d\x9c\x92\x41\x75\x59\x05\x03\xbd\x85\x25\x56\xbd\xf4\xd5\xe9\xae\xcd\xbb\xd7\x30\xca\xe4\x02\x71\x7d\xac\x1e\x30\xfc\x1d\x8b\x90\x5c\x28\xef\x8c\x88\x40\x60\x81\x38\xaa\x2f\xdd\x0d\xf0\xb2\x6b\x67\x6d\x3b\x03\x02\x37\x21\xd9\x53\xbe\xd7\x13\xe5\x6d\x0a\x5b\x62\x3c\xb2\x31\xd5\xfe\x36\xda\xd8\x23\xf5\x87\x84\xf6\xa0\xc4\x08\x4c\xe3\x44\xd6\xc8\x33\xd8\x54\x70\x22\x22\x7b\x64\x54\x02\x13\x03\xc4\x04\xfa\x68\xc1\x48\x80\xb8\x67\xbc\x43\x90\xfb\x8b\x3a\x62\x66\x6d\x05\xff\x3a\xe2\xcf\x24\x05\x33\x49\x6d\x81\x7c\x46\x03\xc8\x37\x85\x54\x22\xb2\x07\xf9\x54\x22\x99\x45\x58\x1a\xd3\x94\x57\x89\x9f\xe9\x8a\x95\x90\xe9\x73\xaa\x85\x4c\x49\x13\x97\xc2\xa5\x72\x6e\x3a\x64\xe2\x4c\x19\xa1\x7a\x34\x4a\xb8\xa5\x12\x62\x8a\xb8\x51\x22\xb1\x32\x61\x1d\x42\xe5\xc0\xaa\x95\xa7\x36\x85\x05\x9e\x11\xaa\xb0\x2f\xdd\x5a\xcf\x28\x97\x54\xb1\x47\xad\xb0\x90\xb3\x24\xae\x1e\x22\xad\x0a\x30\x67\xdc\x33\x5e\x2b\xf5\x7e\xb8\x78\x63\x4c\x5f\x69\x3f\x0e\xc1\x6f\x2c\x79\x9f\xcc\x10\xf8\x77\x1c\x20\x06\x3e\x5c\xbc\x99\xb8\x9a\xbe\x32\x3e\xdd\x93\x54\x17\x09\x27\x46\xd7\xf6\xa4\xc7\xaf\x60\x9f\xee\x81\x0a\x45\x38\x9e\xa5\x67\x21\xe1\xe4\x27\x44\x62\xa3\x88\xbd\x83\xaa\x8c\x22\x82\x84\x68\x1e\x05\x5d\x75\x16\xb5\xdb\x69\x1c\x12\x25\x12\x05\xc6\x34\xf3\x43\x63\x90\x43\xda\x6a\xb5\x72\x36\x2c\x91\xc9\x0c\x69\x5c\x5b\x41\xe9\x2f\x5e\x2c\x3d\xf6\x53\x78\xf2\xee\xef\xbf\x5d\xfc\xf4\x72\x30\x71\xf5\x2c\xa5\x01\x57\xad\x39\x33\x8c\xda\x8e\x37\xcd\x24\xe6\x38\x82\x7c\xd3\x46\x47\x9f\x45\x11\xa2\x52\xd8\x6c\x07\x34\xfa\x90\x02\xb9\x40\xe0\x2c\x23\xde\x66\x48\x99\x5c\x55\x9b\x28\xe3\xe6\xdc\x30\x2a\x9b\x4e\x18\x0c\xca\x9e\x7a\x1f\x67\x2b\xa3\x1b\xba\x7c\x46\xec\x28\xb0\x8f\x94\x74\x15\x3d\x74\x12\x3d\xab\xa3\x57\xe9\xed\x09\x16\x32\xb5\x37\x50\x3e\xda\x73\x92\x88\x45\x6d\x48\x0d\xf0\x2b\x94\x29\xfe\xd4\x57\x68\xfb\x0b\xe4\xdf\xd8\xca\xd0\x5a\x7a\x4e\xdd\xcf\x2e\x2d\x9f\xa9\xc1\x0a\xc1\xe6\x8c\x83\x25\x54\x41\xbc\xb6\x69\x3c\xad\xe2\xd5\xfd\x65\x4a\xf7\xcc\xf6\x59\x42\xe5\x57\xcb\xe5\x17\x16\xf0\x08\x22\x29\x20\x57\x26\xf0\x10\xa9\xce\xb3\xb1\x4a\xb0\x47\x11\x0a\x45\xec\x1a\x3f\x44\x92\x97\x14\x92\xcd\x1f\xda\xf5\x28\x16\x5f\x25\x84\x40\x54\x62\xb5\x96\xaf\x13\xa4\x60\xd3\x14\x26\xf5\x72\xd5\x86\xca\x91\x89\x39\x0b\x39\x2a\x12\xe6\x5d\x24\xb6\xca\x74\xaa\x5f\x6c\x21\x39\x8e\x51\x50\x6f\x84\x14\x47\x50\x81\x5e\xe6\x45\xf2\xce\x19\xe4\xd9\x32\x96\x90\x24\x88\xb2\x95\x67\x1c\x55\x5b\x22\x4c\x3d\x63\x50\x6b\x81\x6b\xcf\x18\x0e\x06\x06\xd0\xa9\x58\x56\xee\x18\x83\xa3\xa7\x2d\x18\x68\xe0\x63\xcb\xf9\x17\x5f\x8a\xc7\x0e\xdc\x4a\xb3\xf5\x0e\xcc\xe2\x6c\x05\xd2\x14\xbe\x13\xb6\x32\xdc\x19\x0e\xaa\xe0\xb5\x18\xe5\xdd\x4b\xe5\xab\x3e\xe9\x22\x51\x1a\xb4\x64\xde\xeb\xbd\x6a\x99\xb8\x8b\x51\x65\x54\x5c\xf0\x5c\x40\x4a\x11\xc9\x87\xbd\x04\x67\x69\xc3\xc4\x8d\xbb\x3d\x42\x5b\x9e\x91\x51\x6c\x7b\x97\x02\xb6\x43\x6f\x07\xaf\xe3\x26\x2e\x67\x3b\xb2\x40\x38\x5c\xc8\x31\x38\x1a\xa8\xdc\xbb\x0e\xbc\x3e\xa4\x4b\x28\xb4\x66\xfd\x05\xe4\xf2\x3d\x93\x90\xbc\x2b\xac\x1d\xa4\xc5\x2b\xe3\x58\x6d\x70\xca\xc7\x33\x8e\x06\x03\xb5\xb7\xe9\xd0\xbb\x77\xb3\x5b\x56\x20\x24\x94\xbb\x4c\xba\xee\x67\xb6\x32\x7a\x06\xd4\x83\x88\xb2\x87\xb5\x68\xb8\x96\xf6\xc0\xb4\xb2\xd1\x41\xd4\x4c\x7a\x93\x0c\x07\xa4\xd2\xc9\xa7\x1c\xcc\x8c\xa9\x6d\x97\xa9\xef\x4e\x0e\x2a\x58\x31\xa6\x5a\xa5\x15\x17\xdd\x3d\xb4\x75\x56\xb6\x37\xfe\x29\x4a\x88\x99\xc0\x2a\xb1\xfe\x84\x68\x08\x43\xf4\x30\x55\xbc\xcd\x98\x7c\xad\x12\xba\x9a\xfe\x57\x9a\x4e\x6e\x34\x9f\x62\xc4\x3f\x05\x70\x73\x6f\x8d\xe5\x66\x03\xde\x22\x0e\xce\xe1\xe6\xff\xaa\xf9\x04\x58\x10\x7c\x83\x3e\x71\x28\x31\xbb\xb7\x16\xce\xd3\xd1\xe0\x42\x8d\x7e\x54\xe3\xb9\x13\xa7\xee\xc0\xd4\xd1\xc9\x3e\x98\x1a\xbf\xc1\xa2\x04\xd3\xe1\x60\xf0\xb4\x44\xd3\xd1\x49\xe9\x3b\x9b\x5c\xef\x00\xd9\x3d\x02\xe7\x05\xe3\xf8\x0f\x95\x16\x12\x20\xe1\xac\x8e\xb7\xdb\xe3\x1f\x30\x27\x68\x6d\xcf\x31\x21\xa0\xd1\x53\x24\x2c\x79\x95\x72\xe6\x19\x2b\xc6\x03\xa1\x70\x2e\x06\xbf\xaa\xc7\x56\x70\xb3\xc7\x3c\x55\x7e\x59\xc4\xa7\xf8\xbd\x6a\x47\x6e\x65\x41\xe0\x11\x5c\xe6\x70\xd4\xd6\x7d\xd3\x4b\xb6\xf6\xf3\x1c\x62\xb2\x69\xfb\xc8\xc6\xb6\x0e\x3a\xb6\x75\xd0\xbd\xad\x3b\x42\x9f\x89\xab\x32\xfc\x34\x04\x52\x99\x6f\x2c\x81\xe0\x7e\x59\x76\xf3\x59\x80\x9c\xeb\xdf\x13\xc4\x37\x3a\x47\x4d\x1f\xed\x23\xe7\xd8\x19\xea\x2b\x98\x6b\x61\x00\x9f\x33\x21\x18\xc7\xa1\x8a\xde\x20\x65\x74\x13\xb1\x44\xe8\x0a\xae\x66\x39\xdd\xc6\xfd\x1e\x97\x4d\xd7\xd5\xbb\xa6\x59\x42\x03\x82\xf2\xf9\xef\x9e\xc7\x0f\xe8\xb5\x70\x7c\xc2\x92\x60\x4e\x20\x4f\xd3\x6d\x78\x0d\xd7\x2e\xc1\x33\xe1\x9e\x29\xad\x3b\xd7\xc2\x1d\x39\xcf\x9d\xa3\xec\x6b\x9b\x79\x85\x7b\xe5\xa6\xe9\x1a\x2e\x61\xda\xaa\xf7\x74\x09\x55\xb2\x44\x18\x17\xc0\x03\x9f\xb5\xce\x39\x0a\xc6\xc0\xe0\xe1\xcc\x1a\x9d\x9c\xf4\xc1\xf3\xe7\x7d\x30\x3c\x1a\xf5\x8c\xbe\xee\x65\x1c\xd2\x10\x55\x09\x86\x27\xcf\xfb\xe0\xd9\x71\x4e\xb0\x41\x84\xb0\x55\x95\x60\x34\x38\xe9\x83\xbf\x3e\xcb\x09\x42\x8e\x10\xcd\xfa\x7f\x54\xe3\x9f\x8f\xf4\x9f\xbc\x7f\x46\x92\x9c\xff\xc9\x71\x1f\x0c\x9f\x8d\xfa\x60\x74\x74\x92\x77\xc7\x09\xd7\x65\x09\x4d\x30\x3c\x39\xea\x83\xe1\x40\x51\x9c\x9c\x54\x26\xd8\xe4\xf3\x0f\x86\x6a\xfe\x23\xf5\xe7\xc7\x9e\x71\x00\xc0\xad\xd2\xcb\x3c\xa1\xba\xc8\x03\x42\x24\x3f\x5c\xbc\x79\x0b\x39\x8c\x90\x44\xdc\xa2\x30\x42\xbd\x42\x0f\x32\xe1\x14\x04\x48\x19\xd5\x87\x8b\xd7\x67\x2c\x8a\x19\x45\x54\x5a\x16\xd5\x65\xf2\xf0\xd5\x3a\xb6\xcc\xcb\x17\x5f\xbe\xbf\x32\xc1\xa1\xae\xba\x80\x43\x60\x7a\xea\x8b\x69\x5d\xfe\xd7\xf7\xa7\x57\x87\x2f\x7a\xd6\xf7\x5f\x9e\x7c\x39\xfd\xf2\x97\x9e\xd9\x73\xd0\x1a\xf9\x16\x61\xbe\xbe\x59\x70\x84\xae\x76\xf5\xbe\x7c\xb9\xec\x1b\xc6\x55\xef\x72\x78\xe5\x70\xa4\xeb\x6d\x96\xfb\xf1\xd0\x0d\xfb\xc0\x7c\x3a\x1a\x98\xbd\xde\x97\x2f\x34\x21\xa4\x25\x7c\xb0\xb4\x14\x4a\xf4\x41\x90\xde\x15\x9c\x43\x09\x1b\xc2\x6b\x02\xf0\x42\xa3\x09\x18\xd7\x08\x4f\x5b\xfc\x24\x4f\xa8\x0f\x25\xb2\x84\xe4\x7d\x10\xc1\x75\xce\x0c\xcf\x55\x93\x43\x10\x0d\xe5\x02\x4c\xab\x5d\x00\x08\xc9\x81\xa7\xfe\x3a\x22\x99\xa9\xf4\x8a\x86\xd6\x20\x1b\x7e\x08\x0c\xc7\x71\x8c\x53\x4d\x7a\x7b\x50\x95\x4c\x48\x5e\x48\xe0\x33\x2a\x24\x10\x04\xa1\x18\x78\xc0\x8a\x30\x21\x38\x2d\x18\x8a\x1e\xf0\xa6\xf5\x25\x29\xdd\xbf\xe5\x2c\xc2\x02\x59\x1c\x09\x46\x96\x48\xd1\x08\x24\xdf\xe3\x08\xb1\x44\xe6\xad\x7d\x50\x63\xd4\xcb\x67\x5b\x61\x1a\xb0\x95\xc3\x74\x5e\x0e\xbc\x62\xfd\x56\xbe\x26\x75\x26\x96\x58\x75\x35\xcd\xc3\x5c\xe2\xc0\xec\x9d\xe6\x4a\x59\xe2\xa0\xd4\xc3\xf5\xbf\x14\xd4\x58\x66\x7a\x43\x6b\xf6\x9c\x05\x0e\x90\x95\x11\x57\xba\xcb\x34\xda\xec\x39\x62\xc1\x56\x8a\x26\x23\x22\x48\x02\xec\x33\x0a\xbc\x2e\xfa\xb2\x6e\x03\xb0\x33\x87\x66\xc1\x3b\xd5\xdf\x46\x5e\xa0\x10\xad\x81\x07\x5c\x0d\x24\x2f\xc6\x1f\xdd\x8f\xae\xb5\x5a\xad\x3e\x3a\xbd\x17\x59\xe5\xee\xa3\xc2\x92\x8f\x69\xed\xee\xe3\x8b\xa5\x77\x09\xed\x3f\x5e\xda\xff\x39\xb0\x9f\x7f\xfa\x68\x5f\x7d\x7e\xd6\xbf\x75\x73\xae\x78\x6e\x7d\xb7\xc4\x81\x13\x29\x5a\x2b\xe3\xde\x2b\x17\x0c\xb4\xa8\x0e\x47\x11\x5b\xa2\x33\xe5\x47\x2c\xb3\x52\x00\x28\xc5\xcb\x08\x61\x10\x94\x54\xca\x59\x88\x2a\xc9\x5f\x6a\x4b\x05\x4e\x35\x41\x37\x7b\x8e\xaf\xc6\x69\xcf\x62\xf6\x81\x39\x1a\x3c\x35\x7b\x1d\xb1\x52\xd7\xc7\x81\x52\x72\xcb\xac\xa5\xf1\xa6\xc2\x83\xbd\x19\xd4\x56\xd8\x55\x4d\xb8\x87\x2c\x85\x0e\xf4\x15\x2b\x0d\x11\x2f\x95\x70\x9b\x5e\x0a\x3c\x8a\x7e\x53\x53\xe9\xa2\xfd\x13\x14\x5d\x2c\xf0\xa0\x76\x18\x9c\x10\xc9\xbf\xbf\xfb\xe5\x67\xcb\x70\x61\x8c\x5f\x2c\x55\x44\x71\xa8\xce\x54\x6d\x42\x27\x60\x14\x59\xc5\x21\xe5\x48\xc4\x55\x1b\xcc\x14\x30\xb7\xbe\x53\x3d\xce\x2b\xce\x19\x6f\xf7\xa7\x47\x4b\x48\x14\x2b\x3f\x77\xb9\xbd\xf0\xd8\x07\x3b\x2b\x80\xfd\x76\x29\xae\xdf\x5d\x18\xbb\x6a\x49\x30\x67\xdc\x52\x52\xa8\x13\x3a\x38\x05\x6b\x30\x49\x05\xca\x70\xf5\x14\xac\x0f\x0f\xbb\x24\xef\x86\x05\xf3\x50\x0f\xbe\x5c\x5f\x1d\x9a\x0d\x38\xa8\x29\x66\x5f\x13\x6a\x0c\xd9\xd3\x98\xca\xcf\x7d\xcc\xca\x5a\x1f\x8e\x7a\x3f\x8c\x06\x87\xe6\xfe\xd6\x55\x7e\xb6\xd8\x59\xce\xb4\x43\xba\xdb\x83\x56\xd3\xbd\x4e\x81\x0a\x65\xef\x2d\xe8\x16\x31\x87\x83\xbd\x81\xa7\xe0\xf4\x78\x00\x54\x0a\x57\x05\x22\x91\xf8\x4a\x11\x66\xe9\x88\xca\x8f\xf6\xca\xd6\x70\x30\x18\xf4\x1c\xb9\x40\xd4\xb2\x2a\x2e\xb9\xfe\x09\x38\x5c\xa5\x2f\x0f\xa4\xa7\xb4\x63\x23\x5a\x6d\x2d\xcc\xcb\x3f\x78\x6e\x95\x07\x1a\x78\x1e\x30\x7f\x66\x45\x05\x1d\xcc\x59\x42\x03\x5d\xe9\x97\x0b\x2c\x40\xcc\x84\x74\xcc\xfd\x0f\xcf\xb6\xe3\xff\xad\x0f\x52\xcb\xeb\x95\x9f\x7b\x19\xe4\xf1\x03\xec\x71\xab\x45\x1e\xdf\xdb\x20\xbf\x89\x49\xde\xe5\x1d\xcb\xcf\x6d\xd3\x86\x6a\xdf\x6f\x1b\xee\x63\x0e\x31\xb1\x5a\x31\x5e\xf9\x51\xf6\xa1\x01\xee\xf5\xd7\x19\x49\xc1\xe3\x1e\x56\x52\x8e\xe9\x36\x93\x0e\x51\x03\xb2\x87\x9c\xb9\xbf\xda\x22\x6a\xca\xe3\x1e\x72\x66\x03\xf6\x12\xf2\x5e\x86\xfc\xec\xde\x86\xbc\xc5\x88\x9f\xdd\xd3\x88\x1f\xdd\x80\xf7\x31\xde\x1c\xfe\x32\x7f\x54\x26\x72\x25\x70\x06\x95\x1c\x2e\xb7\xcd\xd6\x3d\xc4\xeb\x73\xe0\x81\x80\xf9\x89\xfa\xa2\xa2\xa8\x57\x44\x57\xa0\xff\xb6\x79\x1d\x58\x66\xc7\x00\xb3\xa7\xa8\xce\x18\x95\x68\x2d\x2d\x73\x14\x94\x92\x15\x53\xd4\xcb\x38\x7b\x4c\x51\x1f\xb0\xcf\x14\x59\xe5\x6f\x2f\xf1\x35\x65\x27\xd3\x8c\xab\xeb\x82\x7f\x22\x09\x95\xc2\x1a\x29\x56\xfe\xea\xea\x62\xe4\x54\xee\xb1\xcc\x9e\xa3\xb9\xa8\x01\x4e\x3e\xd2\xd1\x17\x5a\xad\x24\x2d\xe7\x10\x3b\xb5\x3b\x2d\x95\xd4\xc9\x88\x58\xe6\x04\x82\xfc\x85\x44\x8a\x56\xcd\x77\xbf\x9a\x2f\x4a\x64\x3c\x5c\xf3\xb0\x3e\x77\x76\x3d\xf6\xfa\xfc\xd0\x34\xa6\x5b\x3a\xb5\x7c\x87\xe6\xc4\x85\x53\xb3\x9d\x4b\xd6\xaf\x62\x6a\x2b\xd4\x06\x90\x97\xcb\x1d\xc9\xde\x30\x1f\x12\xf4\x2e\xcd\xcf\x7b\x1d\x69\x69\xc7\x85\x46\xce\xf0\x9f\x50\x2e\x1c\xae\x5c\x6e\xca\xbb\xd8\x74\x27\x1f\x05\x5c\xd0\xd0\x6b\x75\x7a\xf0\x83\x0e\x7b\x0e\x8d\xa7\x46\x7b\xe2\xe6\x9d\xc0\xb6\x49\x33\x66\x2f\x97\xe1\x5b\xc4\xcf\xe1\xa6\x63\x0d\xb5\xaa\xfa\x36\x3e\x75\x11\xb3\x52\xba\xe8\x5e\xc0\x1b\xdd\x55\x93\xbe\xb4\xbe\xf7\x2c\x06\xca\x48\x45\xc5\xcc\x25\x8b\x75\xcd\x17\x78\xe0\x97\xd9\x35\xf2\xa5\x73\x83\x36\x22\x9d\xf8\x1f\x68\xa3\x4b\xc3\x3b\x71\xc5\x11\x0a\x05\x0a\x77\x05\xfb\x60\xd6\x1d\xd6\x54\x3f\x78\x0e\xea\x53\x5c\xc2\x2b\x30\x05\xf5\xa6\xd9\xd5\xdd\x8c\x8a\x22\x8b\x3d\xec\x8a\x51\xaa\x9f\x2c\x70\x6b\x4f\x3d\x6b\x4f\x0d\xef\x33\xf5\xdd\x33\xb7\x83\xd4\x4e\x46\x83\x9d\x8c\x6e\xef\xd8\x06\x82\x7d\x64\x0d\x54\xbc\x5e\x2f\xcf\x48\x16\xeb\x2a\x7c\xd7\x0e\xeb\x8e\x33\x15\x23\x7c\xc3\x3d\x2e\x27\xa9\xec\x72\xa5\xf1\x1b\xef\x73\x6d\xa6\x8e\xe9\xff\x3f\xed\x75\xd5\x15\x01\x4f\x57\x1e\x75\xb1\xdd\xaa\x7b\xb3\x7e\x65\xc1\x72\x13\xa3\x31\x30\xcb\x7b\xa6\xbf\x41\x6e\xf6\x8b\x6e\xa5\xad\x71\x4d\x3f\xfa\x55\x40\x31\x2e\x90\xa3\x5f\xe9\x53\xd4\x02\x49\x31\x06\x97\x4d\x95\xce\xa0\x7f\x13\x6a\x54\x3b\x63\x84\xf1\x71\x2a\x98\xb3\x40\x24\x46\x5c\x38\xba\xa4\x6f\x65\x95\xce\xb4\xbe\xef\x70\x14\xf4\x1c\x48\xe2\x05\xb4\x06\xce\x49\xcf\xe1\xe1\x2c\x77\x07\xfd\x26\x77\xfd\x8b\x8b\x8c\x73\x8b\x4b\x37\xf5\xaf\xe9\x8b\x2e\xc3\x66\x6f\xba\xe4\x7c\x79\x4e\x04\x63\x6b\xad\x32\xc8\x3a\x44\xac\xaf\xaa\x7b\x74\x5b\x56\x4f\x6e\x4b\x7e\x2c\x56\xe7\x45\xd4\xf5\x17\x41\xac\xdf\xf2\x7c\x29\x62\xe4\x4b\x7d\x23\x3a\x06\xfa\xed\xe2\xaa\x20\x2a\x95\x64\x54\xe0\x25\x1a\x03\xc9\x93\x5a\x9f\x76\xed\x63\xf0\x59\xbf\xfd\x38\x06\x46\x71\x71\x67\xf4\xcb\x5f\x83\xa8\x41\x55\x59\x94\x81\x84\x88\x06\xe3\x86\xb1\x17\x03\xb4\x08\xd5\x25\x55\xc7\xea\xdf\x39\x89\xe6\xd8\xf5\xcb\x35\xea\xda\xeb\x9a\x10\x4d\xf5\x6a\x56\x6f\x94\x11\x35\xd9\xb5\x86\x36\xd3\xa6\x26\xab\x90\xe3\xe0\x0d\xa6\x6d\xc1\xee\xe4\x54\x8f\x72\xaf\xea\x8c\x37\xdf\x70\x59\xad\x8d\x4e\x3f\x73\x46\xe5\xbb\xec\xf7\x35\x8f\xb3\xea\xe6\x76\x76\x2d\xfb\xa0\xab\x2b\x7f\xba\x2d\xa1\x25\x8f\x57\x12\x92\xff\xbc\x47\xe5\x45\x04\xfb\x37\xdd\x79\x6a\x27\x3d\x82\xfe\xa2\x24\xc7\xc1\xba\x0e\xbb\xd9\x18\xb9\xc0\xa2\x57\xcf\x75\xb6\xdc\x60\x57\x73\x95\xdb\x6a\x56\x57\xe3\x54\x26\x39\x7b\xb0\xd1\xee\x12\xce\xca\x5c\x35\xe3\xa1\x13\xb8\xfc\x7e\xbb\x96\x41\x2a\x2f\xa3\x47\x78\xc0\xd4\xb8\xd0\xa8\xe9\x54\x71\xd7\xd1\x00\x92\xc2\x27\xf0\x0a\x80\x39\xdd\x49\x9e\x23\xea\xe5\xe0\x4a\x3f\x57\x06\xee\x40\xa6\xad\x3c\x33\x44\x72\x34\x84\xe8\x70\x13\x78\xc0\x2c\x00\xc4\xdc\x3a\x30\x89\x03\x28\x2b\xb7\x43\x35\x3f\x9b\x6b\x40\xd7\x97\xef\xa5\x01\xed\x87\x1f\xa2\x01\x3d\xb0\xa1\x81\x8a\x53\x7f\x98\x0e\x34\x83\x07\xe8\xe0\x73\x0d\xb8\xb5\x7f\xd7\xc7\xef\x74\xd7\xa1\x72\x5d\xa0\x13\x52\x50\x24\x27\xa9\x4b\xac\xb8\xf3\xa0\x96\xb0\xfe\x03\x6d\x3a\xc3\xf4\x7a\x5a\xdb\x4b\x83\xb5\x5e\x19\x24\x1c\x0d\x7a\xa7\xed\x28\xa1\x3e\xaa\x1d\x2c\x34\xb3\xeb\x8e\x98\x81\x60\x8a\xf6\x0a\x15\xda\xeb\xd8\x2b\x68\x20\x29\x9a\x1a\xf9\x5b\x67\xc5\x3b\x78\x46\x1d\x12\x5b\xa1\x45\x3d\x00\xd0\xd7\xf7\x8d\x11\xdb\xc3\x85\x0e\xea\x74\x61\xed\x45\x34\xcc\xaf\xae\xb1\xcb\xf5\x55\x91\x6c\x36\xc2\x95\x39\x26\xa4\xcb\xdf\x82\xee\xe5\xff\x8c\x42\xf8\x15\xcb\x6f\xc5\x3f\xf7\x89\x95\x1e\xbc\x74\x9a\x09\xbd\xdf\xd2\xf7\x8f\x9e\xbe\x26\x88\x69\xc6\x4d\xff\x86\xb9\x90\xe0\x68\x00\xce\xe1\x46\x34\x0f\xe3\xee\x58\x6a\x57\x78\xb6\x5f\x80\xf7\x3f\x1f\x51\x75\x46\x04\xdf\x2e\xb8\xd8\x2f\xa6\xca\xa1\x84\x85\x90\x63\xb9\x88\xb0\x6f\xb6\xe2\xf1\x9d\xb1\xd3\xd7\xc5\x5d\xfa\x8c\xa5\x49\xc5\x18\x98\xf9\x01\x33\x1f\x29\x6e\xd2\x35\x17\x09\xc9\x0e\x88\xef\xa8\x7d\x76\x25\x6e\xf5\x62\x6a\x07\x16\x07\x2c\x09\x17\x34\x91\x3b\xf1\x78\x2b\xd2\xa6\xa4\x97\x5b\x6a\x65\x7d\xd0\xe8\xc8\x0f\x77\xab\x23\xa1\x37\x94\xad\xe8\xd5\x1d\x00\x75\xd9\xd0\xef\x9d\x08\xdc\x24\xe9\xc8\xe9\x5a\x3c\x36\x35\x82\xda\x9e\xd5\xe4\xcb\x9d\xd4\x65\xe1\x67\x8c\x7e\x81\xb9\xea\x31\x41\x92\x43\x62\x5c\xdd\x05\x4d\xbb\x30\xc1\xc7\xdc\x4f\xa2\x39\xe2\x88\xfa\x2a\xc8\xff\x41\x17\xf9\xde\xbe\xae\x61\x0a\x93\xfa\x35\xab\x31\xb0\x3b\x7a\xdb\x49\x5f\xcd\xb0\x76\xc3\x55\xfa\x7b\x11\xcd\xbb\xbe\xf1\xd9\x0f\x49\xde\xa9\x43\xd4\x05\x2e\x59\xff\x85\x12\x0d\xb5\x52\xa9\xbd\x92\x86\xfa\xfb\x43\x5b\xde\x31\x4a\x7f\x15\x52\x79\xbf\x28\x67\x9a\xfd\x2f\x01\xd9\x1b\x82\x13\x37\xfd\xff\x01\x26\xae\xfe\x5f\x44\xfe\x3b\x00\x00\xff\xff\xdc\xed\x39\x34\x55\x44\x00\x00")

func staticGuiIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticGuiIndexHtml,
		"static/gui/index.html",
	)
}

func staticGuiIndexHtml() (*asset, error) {
	bytes, err := staticGuiIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/gui/index.html", size: 17493, mode: os.FileMode(420), modTime: time.Unix(1588095332, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/gui/index.html": staticGuiIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"gui": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{staticGuiIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

